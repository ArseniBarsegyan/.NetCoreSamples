!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="dist/",n(n.s=29)}([function(e,t,n){e.exports=n(1)(3)},function(e,t){e.exports=require("./vendor")},function(e,t,n){"use strict";var r=t.NAMESPACES={HTML:"http://www.w3.org/1999/xhtml",MATHML:"http://www.w3.org/1998/Math/MathML",SVG:"http://www.w3.org/2000/svg",XLINK:"http://www.w3.org/1999/xlink",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"};t.ATTRS={TYPE:"type",ACTION:"action",ENCODING:"encoding",PROMPT:"prompt",NAME:"name",COLOR:"color",FACE:"face",SIZE:"size"},t.DOCUMENT_MODE={NO_QUIRKS:"no-quirks",QUIRKS:"quirks",LIMITED_QUIRKS:"limited-quirks"};var o=t.TAG_NAMES={A:"a",ADDRESS:"address",ANNOTATION_XML:"annotation-xml",APPLET:"applet",AREA:"area",ARTICLE:"article",ASIDE:"aside",B:"b",BASE:"base",BASEFONT:"basefont",BGSOUND:"bgsound",BIG:"big",BLOCKQUOTE:"blockquote",BODY:"body",BR:"br",BUTTON:"button",CAPTION:"caption",CENTER:"center",CODE:"code",COL:"col",COLGROUP:"colgroup",DD:"dd",DESC:"desc",DETAILS:"details",DIALOG:"dialog",DIR:"dir",DIV:"div",DL:"dl",DT:"dt",EM:"em",EMBED:"embed",FIELDSET:"fieldset",FIGCAPTION:"figcaption",FIGURE:"figure",FONT:"font",FOOTER:"footer",FOREIGN_OBJECT:"foreignObject",FORM:"form",FRAME:"frame",FRAMESET:"frameset",H1:"h1",H2:"h2",H3:"h3",H4:"h4",H5:"h5",H6:"h6",HEAD:"head",HEADER:"header",HGROUP:"hgroup",HR:"hr",HTML:"html",I:"i",IMG:"img",IMAGE:"image",INPUT:"input",IFRAME:"iframe",KEYGEN:"keygen",LABEL:"label",LI:"li",LINK:"link",LISTING:"listing",MAIN:"main",MALIGNMARK:"malignmark",MARQUEE:"marquee",MATH:"math",MENU:"menu",MENUITEM:"menuitem",META:"meta",MGLYPH:"mglyph",MI:"mi",MO:"mo",MN:"mn",MS:"ms",MTEXT:"mtext",NAV:"nav",NOBR:"nobr",NOFRAMES:"noframes",NOEMBED:"noembed",NOSCRIPT:"noscript",OBJECT:"object",OL:"ol",OPTGROUP:"optgroup",OPTION:"option",P:"p",PARAM:"param",PLAINTEXT:"plaintext",PRE:"pre",RB:"rb",RP:"rp",RT:"rt",RTC:"rtc",RUBY:"ruby",S:"s",SCRIPT:"script",SECTION:"section",SELECT:"select",SOURCE:"source",SMALL:"small",SPAN:"span",STRIKE:"strike",STRONG:"strong",STYLE:"style",SUB:"sub",SUMMARY:"summary",SUP:"sup",TABLE:"table",TBODY:"tbody",TEMPLATE:"template",TEXTAREA:"textarea",TFOOT:"tfoot",TD:"td",TH:"th",THEAD:"thead",TITLE:"title",TR:"tr",TRACK:"track",TT:"tt",U:"u",UL:"ul",SVG:"svg",VAR:"var",WBR:"wbr",XMP:"xmp"},i=t.SPECIAL_ELEMENTS=Object.create(null);i[r.HTML]=Object.create(null),i[r.HTML][o.ADDRESS]=!0,i[r.HTML][o.APPLET]=!0,i[r.HTML][o.AREA]=!0,i[r.HTML][o.ARTICLE]=!0,i[r.HTML][o.ASIDE]=!0,i[r.HTML][o.BASE]=!0,i[r.HTML][o.BASEFONT]=!0,i[r.HTML][o.BGSOUND]=!0,i[r.HTML][o.BLOCKQUOTE]=!0,i[r.HTML][o.BODY]=!0,i[r.HTML][o.BR]=!0,i[r.HTML][o.BUTTON]=!0,i[r.HTML][o.CAPTION]=!0,i[r.HTML][o.CENTER]=!0,i[r.HTML][o.COL]=!0,i[r.HTML][o.COLGROUP]=!0,i[r.HTML][o.DD]=!0,i[r.HTML][o.DETAILS]=!0,i[r.HTML][o.DIR]=!0,i[r.HTML][o.DIV]=!0,i[r.HTML][o.DL]=!0,i[r.HTML][o.DT]=!0,i[r.HTML][o.EMBED]=!0,i[r.HTML][o.FIELDSET]=!0,i[r.HTML][o.FIGCAPTION]=!0,i[r.HTML][o.FIGURE]=!0,i[r.HTML][o.FOOTER]=!0,i[r.HTML][o.FORM]=!0,i[r.HTML][o.FRAME]=!0,i[r.HTML][o.FRAMESET]=!0,i[r.HTML][o.H1]=!0,i[r.HTML][o.H2]=!0,i[r.HTML][o.H3]=!0,i[r.HTML][o.H4]=!0,i[r.HTML][o.H5]=!0,i[r.HTML][o.H6]=!0,i[r.HTML][o.HEAD]=!0,i[r.HTML][o.HEADER]=!0,i[r.HTML][o.HGROUP]=!0,i[r.HTML][o.HR]=!0,i[r.HTML][o.HTML]=!0,i[r.HTML][o.IFRAME]=!0,i[r.HTML][o.IMG]=!0,i[r.HTML][o.INPUT]=!0,i[r.HTML][o.LI]=!0,i[r.HTML][o.LINK]=!0,i[r.HTML][o.LISTING]=!0,i[r.HTML][o.MAIN]=!0,i[r.HTML][o.MARQUEE]=!0,i[r.HTML][o.MENU]=!0,i[r.HTML][o.META]=!0,i[r.HTML][o.NAV]=!0,i[r.HTML][o.NOEMBED]=!0,i[r.HTML][o.NOFRAMES]=!0,i[r.HTML][o.NOSCRIPT]=!0,i[r.HTML][o.OBJECT]=!0,i[r.HTML][o.OL]=!0,i[r.HTML][o.P]=!0,i[r.HTML][o.PARAM]=!0,i[r.HTML][o.PLAINTEXT]=!0,i[r.HTML][o.PRE]=!0,i[r.HTML][o.SCRIPT]=!0,i[r.HTML][o.SECTION]=!0,i[r.HTML][o.SELECT]=!0,i[r.HTML][o.SOURCE]=!0,i[r.HTML][o.STYLE]=!0,i[r.HTML][o.SUMMARY]=!0,i[r.HTML][o.TABLE]=!0,i[r.HTML][o.TBODY]=!0,i[r.HTML][o.TD]=!0,i[r.HTML][o.TEMPLATE]=!0,i[r.HTML][o.TEXTAREA]=!0,i[r.HTML][o.TFOOT]=!0,i[r.HTML][o.TH]=!0,i[r.HTML][o.THEAD]=!0,i[r.HTML][o.TITLE]=!0,i[r.HTML][o.TR]=!0,i[r.HTML][o.TRACK]=!0,i[r.HTML][o.UL]=!0,i[r.HTML][o.WBR]=!0,i[r.HTML][o.XMP]=!0,i[r.MATHML]=Object.create(null),i[r.MATHML][o.MI]=!0,i[r.MATHML][o.MO]=!0,i[r.MATHML][o.MN]=!0,i[r.MATHML][o.MS]=!0,i[r.MATHML][o.MTEXT]=!0,i[r.MATHML][o.ANNOTATION_XML]=!0,i[r.SVG]=Object.create(null),i[r.SVG][o.TITLE]=!0,i[r.SVG][o.FOREIGN_OBJECT]=!0,i[r.SVG][o.DESC]=!0},function(e,t,n){e.exports=n(1)(38)},function(e,t,n){
/**
 * @license Angular v4.2.5
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
!function(e,t,r,o,i,s,a,u,c,l,p,h,T,f){"use strict";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */var m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};function d(e,t){function n(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}
/**
 * @license Angular v4.2.5
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */n(16);var E=function(){function e(e){this._doc=e}return e.prototype.renderToString=function(){return r.ɵgetDOM().getInnerHTML(this._doc)},e.prototype.getDocument=function(){return this._doc},e}();E.decorators=[{type:t.Injectable}],E.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]}]};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var _=n(47),A=/^[a-zA-Z\-\+.]+:\/\//,y=function(){function e(){}return e.prototype.build=function(){return new _.XMLHttpRequest},e}();y.decorators=[{type:t.Injectable}],y.ctorParameters=function(){return[]};var g=function(){function e(){}return e.prototype.configureRequest=function(e){},e}();g.decorators=[{type:t.Injectable}],g.ctorParameters=function(){return[]};var N=function(){function e(e,t){var n=this;this.request=e,function(e){if(!A.test(e))throw new Error("URLs requested via Http on the server must be absolute. URL: "+e)}(e.url),this.response=new c.Observable(function(r){var o=null,i=!1,s=null,a=null,u=null,c=Zone.current.scheduleMacroTask("ZoneMacroTaskConnection.subscribe",function(){null!==u?r.error(u):(r.next(a),r.complete())},{},function(){return null},function(e){i&&(i=!1,s&&(s.unsubscribe(),s=null))});return function(r){o=r,i=!0,n.lastConnection=t.createConnection(e),s=n.lastConnection.response.subscribe(function(e){return a=e},function(e){if(!i)throw new Error("invoke twice");u=e,i=!1,o.invoke()},function(){if(!i)throw new Error("invoke twice");i=!1,o.invoke()})}(c),function(){i&&o&&(o.zone.cancelTask(o),i=!1),s&&(s.unsubscribe(),s=null)}})}return Object.defineProperty(e.prototype,"readyState",{get:function(){return this.lastConnection?this.lastConnection.readyState:a.ReadyState.Unsent},enumerable:!0,configurable:!0}),e}(),S=function(){function e(e){this.backend=e}return e.prototype.createConnection=function(e){return new N(e,this.backend)},e}();function v(e,t){var n=new S(e);return new a.Http(n,t)}var C=[{provide:a.Http,useFactory:v,deps:[a.XHRBackend,a.RequestOptions]},{provide:a.BrowserXhr,useClass:y},{provide:a.XSRFStrategy,useClass:g}],O=new t.InjectionToken("Server.INITIAL_CONFIG");
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function R(e){var t=p.parse(e);return{pathname:t.pathname||"",search:t.search||"",hash:t.hash||""}}var I=function(){function e(e,t){this._doc=e,this._path="/",this._search="",this._hash="",this._hashUpdate=new l.Subject;var n=t;if(n&&n.url){var r=R(n.url);this._path=r.pathname,this._search=r.search,this._hash=r.hash}}return e.prototype.getBaseHrefFromDOM=function(){return r.ɵgetDOM().getBaseHref(this._doc)},e.prototype.onPopState=function(e){},e.prototype.onHashChange=function(e){this._hashUpdate.subscribe(e)},Object.defineProperty(e.prototype,"pathname",{get:function(){return this._path},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"search",{get:function(){return this._search},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hash",{get:function(){return this._hash},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"url",{get:function(){return""+this.pathname+this.search+this.hash},enumerable:!0,configurable:!0}),e.prototype.setHash=function(e,t){var n=this;if(this._hash!==e){this._hash=e;var r,o=this.url;r=function(){return n._hashUpdate.next({type:"hashchange",oldUrl:t,newUrl:o})},Zone.current.scheduleMicroTask("scheduleMicrotask",r)}},e.prototype.replaceState=function(e,t,n){var r=this.url,o=R(n);this._path=o.pathname,this._search=o.search,this.setHash(o.hash,r)},e.prototype.pushState=function(e,t,n){this.replaceState(e,t,n)},e.prototype.forward=function(){throw new Error("Not implemented")},e.prototype.back=function(){throw new Error("Not implemented")},e}();I.decorators=[{type:t.Injectable}],I.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]},{type:void 0,decorators:[{type:t.Optional},{type:t.Inject,args:[O]}]}]};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var M,L=n(16),P={class:"className",innerHtml:"innerHTML",readonly:"readOnly",tabindex:"tabIndex"},b=["attribs","x-attribsNamespace","x-attribsPrefix"];function D(e){return new Error("This method is not implemented in Parse5DomAdapter: "+e)}function k(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(r.name===t)return r}return null}var H=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return d(t,e),t.makeCurrent=function(){M=L.treeAdapters.htmlparser2,r.ɵsetRootDomAdapter(new t)},t.prototype.contains=function(e,t){for(var n=t;n;){if(n===e)return!0;n=n.parent}return!1},t.prototype.hasProperty=function(e,t){return w.indexOf(t)>-1},t.prototype.setProperty=function(e,t,n){"innerHTML"===t?this.setInnerHTML(e,n):"innerText"===t?this.setText(e,n):"className"===t?e.attribs.class=e.className=n:e[t]=n},t.prototype.getProperty=function(e,t){return e[t]},t.prototype.logError=function(e){console.error(e)},t.prototype.log=function(e){console.log(e)},t.prototype.logGroup=function(e){console.error(e)},t.prototype.logGroupEnd=function(){},Object.defineProperty(t.prototype,"attrToPropMap",{get:function(){return P},enumerable:!0,configurable:!0}),t.prototype.querySelector=function(e,t){return this.querySelectorAll(e,t)[0]||null},t.prototype.querySelectorAll=function(e,t){var n=this,r=[],o=function(e,t,r,i){var s=t.childNodes;if(s&&s.length>0)for(var a=0;a<s.length;a++){var u=s[a];n.elementMatches(u,r,i)&&e.push(u),o(e,u,r,i)}},i=new s.SelectorMatcher;return i.addSelectables(s.CssSelector.parse(t)),o(r,e,t,i),r},t.prototype.elementMatches=function(e,t,n){if(void 0===n&&(n=null),this.isElementNode(e)&&"*"===t)return!0;var r=!1;if(t&&"#"==t.charAt(0))r=this.getAttribute(e,"id")==t.substring(1);else if(t){n||(n=new s.SelectorMatcher).addSelectables(s.CssSelector.parse(t));var o=new s.CssSelector;if(o.setElement(this.tagName(e)),e.attribs)for(var i in e.attribs)o.addAttribute(i,e.attribs[i]);for(var a=this.classList(e),u=0;u<a.length;u++)o.addClassName(a[u]);n.match(o,function(e,t){r=!0})}return r},t.prototype.on=function(e,t,n){var r=e._eventListenersMap;r||(r={},e._eventListenersMap=r);var o=r[t]||[];r[t]=o.concat([n])},t.prototype.onAndCancel=function(e,t,n){return this.on(e,t,n),function(){!function(e,t){var n=e.indexOf(t);n>-1&&e.splice(n,1)}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */(e._eventListenersMap[t],n)}},t.prototype.dispatchEvent=function(e,t){if(t.target||(t.target=e),e._eventListenersMap){var n=e._eventListenersMap[t.type];if(n)for(var r=0;r<n.length;r++)n[r](t)}e.parent&&this.dispatchEvent(e.parent,t),e._window&&this.dispatchEvent(e._window,t)},t.prototype.createMouseEvent=function(e){return this.createEvent(e)},t.prototype.createEvent=function(e){var t={type:e,defaultPrevented:!1,preventDefault:function(){t.defaultPrevented=!0}};return t},t.prototype.preventDefault=function(e){e.returnValue=!1},t.prototype.isPrevented=function(e){return null!=e.returnValue&&!e.returnValue},t.prototype.getInnerHTML=function(e){return L.serialize(this.templateAwareRoot(e),{treeAdapter:M})},t.prototype.getTemplateContent=function(e){return null},t.prototype.getOuterHTML=function(e){var t=M.createDocumentFragment();return this.appendChild(t,e),L.serialize(t,{treeAdapter:M})},t.prototype.nodeName=function(e){return e.tagName},t.prototype.nodeValue=function(e){return e.nodeValue},t.prototype.type=function(e){throw D("type")},t.prototype.content=function(e){return e.childNodes[0]},t.prototype.firstChild=function(e){return e.firstChild},t.prototype.nextSibling=function(e){return e.nextSibling},t.prototype.parentElement=function(e){return e.parent},t.prototype.childNodes=function(e){return e.childNodes},t.prototype.childNodesAsList=function(e){for(var t=e.childNodes,n=new Array(t.length),r=0;r<t.length;r++)n[r]=t[r];return n},t.prototype.clearNodes=function(e){for(;e.childNodes.length>0;)this.remove(e.childNodes[0])},t.prototype.appendChild=function(e,t){this.remove(t),M.appendChild(this.templateAwareRoot(e),t)},t.prototype.removeChild=function(e,t){e.childNodes.indexOf(t)>-1&&this.remove(t)},t.prototype.remove=function(e){var t=e.parent;if(t){var n=t.childNodes.indexOf(e);t.childNodes.splice(n,1)}var r=e.previousSibling,o=e.nextSibling;return r&&(r.next=o),o&&(o.prev=r),e.prev=null,e.next=null,e.parent=null,e},t.prototype.insertBefore=function(e,t,n){this.remove(n),t?M.insertBefore(e,n,t):this.appendChild(e,n)},t.prototype.insertAllBefore=function(e,t,n){var r=this;n.forEach(function(n){return r.insertBefore(e,t,n)})},t.prototype.insertAfter=function(e,t,n){t.nextSibling?this.insertBefore(e,t.nextSibling,n):this.appendChild(e,n)},t.prototype.setInnerHTML=function(e,t){this.clearNodes(e);for(var n=L.parseFragment(t,{treeAdapter:M}),r=0;r<n.childNodes.length;r++)M.appendChild(e,n.childNodes[r])},t.prototype.getText=function(e,t){if(this.isTextNode(e))return e.data;if(this.isCommentNode(e))return t?"":e.data;if(!e.childNodes||0==e.childNodes.length)return"";for(var n="",r=0;r<e.childNodes.length;r++)n+=this.getText(e.childNodes[r],!0);return n},t.prototype.setText=function(e,t){this.isTextNode(e)||this.isCommentNode(e)?e.data=t:(this.clearNodes(e),""!==t&&M.insertText(e,t))},t.prototype.getValue=function(e){return e.value},t.prototype.setValue=function(e,t){e.value=t},t.prototype.getChecked=function(e){return e.checked},t.prototype.setChecked=function(e,t){e.checked=t},t.prototype.createComment=function(e){return M.createCommentNode(e)},t.prototype.createTemplate=function(e){var t=M.createElement("template","http://www.w3.org/1999/xhtml",[]),n=L.parseFragment(e,{treeAdapter:M});return M.setTemplateContent(t,n),t},t.prototype.createElement=function(e){return M.createElement(e,"http://www.w3.org/1999/xhtml",[])},t.prototype.createElementNS=function(e,t){return M.createElement(t,e,[])},t.prototype.createTextNode=function(e){var t=this.createComment(e);return t.type="text",t},t.prototype.createScriptTag=function(e,t){return M.createElement("script","http://www.w3.org/1999/xhtml",[{name:e,value:t}])},t.prototype.createStyleElement=function(e){var t=this.createElement("style");return this.setText(t,e),t},t.prototype.createShadowRoot=function(e){return e.shadowRoot=M.createDocumentFragment(),e.shadowRoot.parent=e,e.shadowRoot},t.prototype.getShadowRoot=function(e){return e.shadowRoot},t.prototype.getHost=function(e){return e.host},t.prototype.getDistributedNodes=function(e){throw D("getDistributedNodes")},t.prototype.clone=function(e){var t=function(e){var n=Object.create(Object.getPrototypeOf(e));for(var r in e){var o=Object.getOwnPropertyDescriptor(e,r);o&&"value"in o&&"object"!=typeof o.value&&(n[r]=e[r])}n.parent=null,n.prev=null,n.next=null,n.children=null,b.forEach(function(t){if(null!=e[t])for(var r in n[t]={},e[t])n[t][r]=e[t][r]});var i=e.children;if(i){for(var s=new Array(i.length),a=0;a<i.length;a++){var u=i[a],c=t(u);s[a]=c,a>0&&(c.prev=s[a-1],s[a-1].next=c),c.parent=n}n.children=s}return n};return t(e)},t.prototype.getElementsByClassName=function(e,t){return this.querySelectorAll(e,"."+t)},t.prototype.getElementsByTagName=function(e,t){return this.querySelectorAll(e,t)},t.prototype.classList=function(e){var t=null,n=e.attribs;return n&&null!=n.class&&(t=n.class),t?t.trim().split(/\s+/g):[]},t.prototype.addClass=function(e,t){var n=this.classList(e),r=n.indexOf(t);-1==r&&(n.push(t),e.attribs.class=e.className=n.join(" "))},t.prototype.removeClass=function(e,t){var n=this.classList(e),r=n.indexOf(t);r>-1&&(n.splice(r,1),e.attribs.class=e.className=n.join(" "))},t.prototype.hasClass=function(e,t){return this.classList(e).indexOf(t)>-1},t.prototype.hasStyle=function(e,t,n){var r=this.getStyle(e,t)||"";return n?r==n:r.length>0},t.prototype._readStyleAttribute=function(e){var t={},n=e.attribs;if(n&&null!=n.style)for(var r=n.style,o=r.split(/;+/g),i=0;i<o.length;i++)if(o[i].length>0){var s=o[i],a=s.indexOf(":");if(-1===a)throw new Error("Invalid CSS style: "+s);t[s.substr(0,a).trim()]=s.substr(a+1).trim()}return t},t.prototype._writeStyleAttribute=function(e,t){var n="";for(var r in t){var o=t[r];o&&(n+=r+":"+t[r]+";")}e.attribs.style=n},t.prototype.setStyle=function(e,t,n){var r=this._readStyleAttribute(e);r[t]=n,this._writeStyleAttribute(e,r)},t.prototype.removeStyle=function(e,t){this.setStyle(e,t,null)},t.prototype.getStyle=function(e,t){var n=this._readStyleAttribute(e);return n.hasOwnProperty(t)?n[t]:""},t.prototype.tagName=function(e){return"style"==e.tagName?"STYLE":e.tagName},t.prototype.attributeMap=function(e){for(var t=new Map,n=M.getAttrList(e),r=0;r<n.length;r++){var o=n[r];t.set(o.name,o.value)}return t},t.prototype.hasAttribute=function(e,t){return e.attribs&&null!=e.attribs[t]},t.prototype.hasAttributeNS=function(e,t,n){return this.hasAttribute(e,n)},t.prototype.getAttribute=function(e,t){return this.hasAttribute(e,t)?e.attribs[t]:null},t.prototype.getAttributeNS=function(e,t,n){return this.getAttribute(e,n)},t.prototype.setAttribute=function(e,t,n){t&&(e.attribs[t]=n,"class"===t&&(e.className=n))},t.prototype.setAttributeNS=function(e,t,n,r){this.setAttribute(e,n,r)},t.prototype.removeAttribute=function(e,t){t&&delete e.attribs[t]},t.prototype.removeAttributeNS=function(e,t,n){throw"not implemented"},t.prototype.templateAwareRoot=function(e){return this.isTemplateElement(e)?M.getTemplateContent(e):e},t.prototype.createHtmlDocument=function(){var e=M.createDocument();e.title="fakeTitle";var t=M.createElement("head",null,[]),n=M.createElement("body","http://www.w3.org/1999/xhtml",[]);return this.appendChild(e,t),this.appendChild(e,n),e.head=t,e.body=n,e._window={},e},t.prototype.getBoundingClientRect=function(e){return{left:0,top:0,width:0,height:0}},t.prototype.getTitle=function(e){return this.getText(this.getTitleNode(e))||""},t.prototype.setTitle=function(e,t){this.setText(this.getTitleNode(e),t||"")},t.prototype.isTemplateElement=function(e){return this.isElementNode(e)&&"template"===this.tagName(e)},t.prototype.isTextNode=function(e){return M.isTextNode(e)},t.prototype.isCommentNode=function(e){return M.isCommentNode(e)},t.prototype.isElementNode=function(e){return!!e&&M.isElementNode(e)},t.prototype.hasShadowRoot=function(e){return null!=e.shadowRoot},t.prototype.isShadowRoot=function(e){return this.getShadowRoot(e)==e},t.prototype.importIntoDoc=function(e){return this.clone(e)},t.prototype.adoptNode=function(e){return e},t.prototype.getHref=function(e){return this.getAttribute(e,"href")},t.prototype.resolveAndSetHref=function(e,t,n){e.href=null==n?t:t+"/../"+n},t.prototype._buildRules=function(e,t){for(var n=[],r=0;r<e.length;r++){var o=e[r],i={};if(i.cssText=t,i.style={content:"",cssText:""},"rule"==o.type){if(i.type=1,i.selectorText=o.selectors.join(", ".replace(/\s{2,}/g," ").replace(/\s*~\s*/g," ~ ").replace(/\s*\+\s*/g," + ").replace(/\s*>\s*/g," > ").replace(/\[(\w+)=(\w+)\]/g,'[$1="$2"]')),null==o.declarations)continue;for(var s=0;s<o.declarations.length;s++){var a=o.declarations[s];i.style=a.property[a.value],i.style.cssText+=a.property+": "+a.value+";"}}else"media"==o.type&&(i.type=4,i.media={mediaText:o.media},o.rules&&(i.cssRules=this._buildRules(o.rules)));n.push(i)}return n},t.prototype.supportsDOMEvents=function(){return!1},t.prototype.supportsNativeShadowDOM=function(){return!1},t.prototype.getGlobalEventTarget=function(e,t){return"window"==t?e._window:"document"==t?e:"body"==t?e.body:void 0},t.prototype.getBaseHref=function(e){var t=this.querySelector(e,"base"),n="";return t&&(n=this.getHref(t)),null==n?null:n},t.prototype.resetBaseElement=function(){throw"not implemented"},t.prototype.getHistory=function(){throw"not implemented"},t.prototype.getLocation=function(){throw"not implemented"},t.prototype.getUserAgent=function(){return"Fake user agent"},t.prototype.getData=function(e,t){return this.getAttribute(e,"data-"+t)},t.prototype.getComputedStyle=function(e){throw"not implemented"},t.prototype.setData=function(e,t,n){this.setAttribute(e,"data-"+t,n)},t.prototype.supportsWebAnimation=function(){return!1},t.prototype.performanceNow=function(){return Date.now()},t.prototype.getAnimationPrefix=function(){return""},t.prototype.getTransitionEnd=function(){return"transitionend"},t.prototype.supportsAnimation=function(){return!0},t.prototype.replaceChild=function(e,t,n){throw new Error("not implemented")},t.prototype.parse=function(e){throw new Error("not implemented")},t.prototype.invoke=function(e,t,n){throw new Error("not implemented")},t.prototype.getEventKey=function(e){throw new Error("not implemented")},t.prototype.supportsCookies=function(){return!1},t.prototype.getCookie=function(e){throw new Error("not implemented")},t.prototype.setCookie=function(e,t){throw new Error("not implemented")},t.prototype.animate=function(e,t,n){throw new Error("not implemented")},t.prototype.getTitleNode=function(e){var t=this.querySelector(e,"title");return t||(t=this.createElement("title"),this.appendChild(this.querySelector(e,"head"),t)),t},t}(r.ɵDomAdapter),w=["webkitEntries","incremental","webkitdirectory","selectionDirection","selectionEnd","selectionStart","labels","validationMessage","validity","willValidate","width","valueAsNumber","valueAsDate","value","useMap","defaultValue","type","step","src","size","required","readOnly","placeholder","pattern","name","multiple","min","minLength","maxLength","max","list","indeterminate","height","formTarget","formNoValidate","formMethod","formEnctype","formAction","files","form","disabled","dirName","checked","defaultChecked","autofocus","autocomplete","alt","align","accept","onautocompleteerror","onautocomplete","onwaiting","onvolumechange","ontoggle","ontimeupdate","onsuspend","onsubmit","onstalled","onshow","onselect","onseeking","onseeked","onscroll","onresize","onreset","onratechange","onprogress","onplaying","onplay","onpause","onmousewheel","onmouseup","onmouseover","onmouseout","onmousemove","onmouseleave","onmouseenter","onmousedown","onloadstart","onloadedmetadata","onloadeddata","onload","onkeyup","onkeypress","onkeydown","oninvalid","oninput","onfocus","onerror","onended","onemptied","ondurationchange","ondrop","ondragstart","ondragover","ondragleave","ondragenter","ondragend","ondrag","ondblclick","oncuechange","oncontextmenu","onclose","onclick","onchange","oncanplaythrough","oncanplay","oncancel","onblur","onabort","spellcheck","isContentEditable","contentEditable","outerText","innerText","accessKey","hidden","webkitdropzone","draggable","tabIndex","dir","translate","lang","title","childElementCount","lastElementChild","firstElementChild","children","onwebkitfullscreenerror","onwebkitfullscreenchange","nextElementSibling","previousElementSibling","onwheel","onselectstart","onsearch","onpaste","oncut","oncopy","onbeforepaste","onbeforecut","onbeforecopy","shadowRoot","dataset","classList","className","outerHTML","innerHTML","scrollHeight","scrollWidth","scrollTop","scrollLeft","clientHeight","clientWidth","clientTop","clientLeft","offsetParent","offsetHeight","offsetWidth","offsetTop","offsetLeft","localName","prefix","namespaceURI","id","style","attributes","tagName","parentElement","textContent","baseURI","ownerDocument","nextSibling","previousSibling","lastChild","firstChild","childNodes","parentNode","nodeType","nodeValue","nodeName","closure_lm_714617","__jsaction"],U=[],x=function(){function e(e,t,n){this.ngZone=e,this.document=t,this.sharedStylesHost=n,this.rendererByCompId=new Map,this.schema=new s.DomElementSchemaRegistry,this.defaultRenderer=new F(t,e,this.schema)}return e.prototype.createRenderer=function(e,n){if(!e||!n)return this.defaultRenderer;switch(n.encapsulation){case t.ViewEncapsulation.Native:case t.ViewEncapsulation.Emulated:var o=this.rendererByCompId.get(n.id);return o||(o=new K(this.document,this.ngZone,this.sharedStylesHost,this.schema,n),this.rendererByCompId.set(n.id,o)),o.applyToHost(e),o;case t.ViewEncapsulation.Native:throw new Error("Native encapsulation is not supported on the server!");default:if(!this.rendererByCompId.has(n.id)){var i=r.ɵflattenStyles(n.id,n.styles,[]);this.sharedStylesHost.addStyles(i),this.rendererByCompId.set(n.id,this.defaultRenderer)}return this.defaultRenderer}},e.prototype.begin=function(){},e.prototype.end=function(){},e}();x.decorators=[{type:t.Injectable}],x.ctorParameters=function(){return[{type:t.NgZone},{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]},{type:r.ɵSharedStylesHost}]};var F=function(){function e(e,t,n){this.document=e,this.ngZone=t,this.schema=n,this.data=Object.create(null)}return e.prototype.destroy=function(){},e.prototype.createElement=function(e,t,n){return t?r.ɵgetDOM().createElementNS(r.ɵNAMESPACE_URIS[t],e):r.ɵgetDOM().createElement(e)},e.prototype.createComment=function(e,t){return r.ɵgetDOM().createComment(e)},e.prototype.createText=function(e,t){return r.ɵgetDOM().createTextNode(e)},e.prototype.appendChild=function(e,t){r.ɵgetDOM().appendChild(e,t)},e.prototype.insertBefore=function(e,t,n){e&&r.ɵgetDOM().insertBefore(e,n,t)},e.prototype.removeChild=function(e,t){e&&r.ɵgetDOM().removeChild(e,t)},e.prototype.selectRootElement=function(e,t){var n;if("string"==typeof e){if(!(n=r.ɵgetDOM().querySelector(this.document,e)))throw new Error('The selector "'+e+'" did not match any elements')}else n=e;return r.ɵgetDOM().clearNodes(n),n},e.prototype.parentNode=function(e){return r.ɵgetDOM().parentElement(e)},e.prototype.nextSibling=function(e){return r.ɵgetDOM().nextSibling(e)},e.prototype.setAttribute=function(e,t,n,o){o?r.ɵgetDOM().setAttributeNS(e,r.ɵNAMESPACE_URIS[o],o+":"+t,n):r.ɵgetDOM().setAttribute(e,t,n)},e.prototype.removeAttribute=function(e,t,n){n?r.ɵgetDOM().removeAttributeNS(e,r.ɵNAMESPACE_URIS[n],t):r.ɵgetDOM().removeAttribute(e,t)},e.prototype.addClass=function(e,t){r.ɵgetDOM().addClass(e,t)},e.prototype.removeClass=function(e,t){r.ɵgetDOM().removeClass(e,t)},e.prototype.setStyle=function(e,t,n,o){r.ɵgetDOM().setStyle(e,t,n)},e.prototype.removeStyle=function(e,t,n){r.ɵgetDOM().removeStyle(e,t)},e.prototype._isSafeToReflectProperty=function(e,t){return this.schema.securityContext(e,t,!0)===this.schema.securityContext(e,t,!1)},e.prototype.setProperty=function(e,t,n){G(t,"property"),r.ɵgetDOM().setProperty(e,t,n);var o=e.tagName.toLowerCase();null!=n&&("number"==typeof n||"string"==typeof n)&&this.schema.hasElement(o,U)&&this.schema.hasProperty(o,t,U)&&this._isSafeToReflectProperty(o,t)&&this.setAttribute(e,t,n.toString())},e.prototype.setValue=function(e,t){r.ɵgetDOM().setText(e,t)},e.prototype.listen=function(e,t,n){var o=this;G(t,"listener");var i="string"==typeof e?r.ɵgetDOM().getGlobalEventTarget(this.document,e):e,s=function(e){return o.ngZone.runGuarded(function(){return n(e)})};return this.ngZone.runOutsideAngular(function(){return r.ɵgetDOM().onAndCancel(i,t,s)})},e}(),B="@".charCodeAt(0);function G(e,t){if(e.charCodeAt(0)===B)throw new Error("Found the synthetic "+t+" "+e+'. Please include either "BrowserAnimationsModule" or "NoopAnimationsModule" in your application.')}var K=function(e){function t(t,n,o,i,s){var a=e.call(this,t,n,i)||this;a.component=s;var u=r.ɵflattenStyles(s.id,s.styles,[]);return o.addStyles(u),a.contentAttr=r.ɵshimContentAttribute(s.id),a.hostAttr=r.ɵshimHostAttribute(s.id),a}return d(t,e),t.prototype.applyToHost=function(t){e.prototype.setAttribute.call(this,t,this.hostAttr,"")},t.prototype.createElement=function(t,n){var r=e.prototype.createElement.call(this,t,n);return e.prototype.setAttribute.call(this,r,this.contentAttr,""),r},t}(F),j=function(e){function t(t,n){var o=e.call(this)||this;return o.doc=t,o.transitionId=n,o.head=null,o.head=r.ɵgetDOM().getElementsByTagName(t,"head")[0],o}return d(t,e),t.prototype._addStyle=function(e){var t=r.ɵgetDOM(),n=t.createElement("style");t.setText(n,e),this.transitionId&&t.setAttribute(n,"ng-transition",this.transitionId),t.appendChild(this.head,n)},t.prototype.onStylesAdded=function(e){var t=this;e.forEach(function(e){return t._addStyle(e)})},t}(r.ɵSharedStylesHost);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */j.decorators=[{type:t.Injectable}],j.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]},{type:void 0,decorators:[{type:t.Optional},{type:t.Inject,args:[r.ɵTRANSITION_ID]}]}]};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var Y=[{provide:r.DOCUMENT,useFactory:function(e){var t,n,o,i=e.get(O,null);return i&&i.document?(t=i.document,n=L.parse(t,{treeAdapter:L.treeAdapters.htmlparser2}),o=k(n,"html"),n.head=k(o,"head"),n.body=k(o,"body"),n._window={},n):r.ɵgetDOM().createHtmlDocument()},deps:[t.Injector]},{provide:t.PLATFORM_ID,useValue:i.ɵPLATFORM_SERVER_ID},{provide:t.PLATFORM_INITIALIZER,useFactory:function(e){return function(){H.makeCurrent()}},multi:!0,deps:[t.Injector]},{provide:i.PlatformLocation,useClass:I},E,{provide:t.ɵALLOW_MULTIPLE_PLATFORMS,useValue:!0}];function q(e,t,n){return new u.ɵAnimationRendererFactory(e,t,n)}var Q=[x,{provide:t.RendererFactory2,useFactory:q,deps:[x,o.ɵAnimationEngine,t.NgZone]},j,{provide:r.ɵSharedStylesHost,useExisting:j}],z=function(){};z.decorators=[{type:t.NgModule,args:[{exports:[r.BrowserModule],imports:[a.HttpModule,u.NoopAnimationsModule],providers:[Q,C,{provide:t.Testability,useValue:null}]}]}],z.ctorParameters=function(){return[]};var W=t.createPlatformFactory(t.platformCore,"server",Y),V=t.createPlatformFactory(s.platformCoreDynamic,"serverDynamic",Y);function X(e,t){var n=t.extraProviders?t.extraProviders:[];return e([{provide:O,useValue:{document:t.document,url:t.url}},n])}function Z(e,n){return n.then(function(n){var o=n.injector.get(r.ɵTRANSITION_ID,null);if(!o)throw new Error("renderModule[Factory]() requires the use of BrowserModule.withServerTransition() to ensure\nthe server-rendered app can be properly bootstrapped into a client app.");var i=n.injector.get(t.ApplicationRef);return f.toPromise.call(T.first.call(h.filter.call(i.isStable,function(e){return e}))).then(function(){var t=e.injector.get(E).renderToString();return e.destroy(),t})})}n(16);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var J=new t.Version("4.2.5");e.PlatformState=E,e.ServerModule=z,e.platformDynamicServer=V,e.platformServer=W,e.INITIAL_CONFIG=O,e.renderModule=function(e,t){var n=X(V,t);return Z(n,n.bootstrapModule(e))},e.renderModuleFactory=function(e,t){var n=X(W,t);return Z(n,n.bootstrapModuleFactory(e))},e.VERSION=J,e.ɵINTERNAL_SERVER_PLATFORM_PROVIDERS=Y,e.ɵSERVER_RENDER_PROVIDERS=Q,e.ɵServerRendererFactory2=x,e.ɵf=C,e.ɵc=y,e.ɵd=g,e.ɵe=v,e.ɵa=q,e.ɵb=j,Object.defineProperty(e,"__esModule",{value:!0})}(t,n(0),n(25),n(24),n(8),n(64),n(3),n(63),n(27),n(62),n(22),n(61),n(26),n(60))},function(e,t){e.exports=require("util")},function(e,t,n){"use strict";t.REPLACEMENT_CHARACTER="�",t.CODE_POINTS={EOF:-1,NULL:0,TABULATION:9,CARRIAGE_RETURN:13,LINE_FEED:10,FORM_FEED:12,SPACE:32,EXCLAMATION_MARK:33,QUOTATION_MARK:34,NUMBER_SIGN:35,AMPERSAND:38,APOSTROPHE:39,HYPHEN_MINUS:45,SOLIDUS:47,DIGIT_0:48,DIGIT_9:57,SEMICOLON:59,LESS_THAN_SIGN:60,EQUALS_SIGN:61,GREATER_THAN_SIGN:62,QUESTION_MARK:63,LATIN_CAPITAL_A:65,LATIN_CAPITAL_F:70,LATIN_CAPITAL_X:88,LATIN_CAPITAL_Z:90,GRAVE_ACCENT:96,LATIN_SMALL_A:97,LATIN_SMALL_F:102,LATIN_SMALL_X:120,LATIN_SMALL_Z:122,REPLACEMENT_CHARACTER:65533},t.CODE_POINT_SEQUENCES={DASH_DASH_STRING:[45,45],DOCTYPE_STRING:[68,79,67,84,89,80,69],CDATA_START_STRING:[91,67,68,65,84,65,91],CDATA_END_STRING:[93,93,62],SCRIPT_STRING:[115,99,114,105,112,116],PUBLIC_STRING:[80,85,66,76,73,67],SYSTEM_STRING:[83,89,83,84,69,77]}},function(e,t,n){"use strict";var r=n(58),o=n(57),i=n(6),s=n(56),a=i.CODE_POINTS,u=i.CODE_POINT_SEQUENCES,c={0:65533,13:13,128:8364,129:129,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,141:141,142:381,143:143,144:144,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,157:157,158:382,159:376},l="DATA_STATE";function p(e){return e===a.SPACE||e===a.LINE_FEED||e===a.TABULATION||e===a.FORM_FEED}function h(e){return e>=a.DIGIT_0&&e<=a.DIGIT_9}function T(e){return e>=a.LATIN_CAPITAL_A&&e<=a.LATIN_CAPITAL_Z}function f(e){return e>=a.LATIN_SMALL_A&&e<=a.LATIN_SMALL_Z}function m(e){return f(e)||T(e)}function d(e,t){return h(e)||t&&(e>=a.LATIN_CAPITAL_A&&e<=a.LATIN_CAPITAL_F||e>=a.LATIN_SMALL_A&&e<=a.LATIN_SMALL_F)}function E(e){return e+32}function _(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(e>>>10&1023|55296)+String.fromCharCode(56320|1023&e))}function A(e){return String.fromCharCode(E(e))}function y(e,t){for(var n=s[++e],r=++e,o=r+n-1;r<=o;){var i=r+o>>>1,a=s[i];if(a<t)r=i+1;else{if(!(a>t))return s[i+n];o=i-1}}return-1}var g=e.exports=function(e){this.preprocessor=new r,this.tokenQueue=[],this.allowCDATA=!1,this.state=l,this.returnState="",this.tempBuff=[],this.additionalAllowedCp=void 0,this.lastStartTagName="",this.consumedAfterSnapshot=-1,this.active=!1,this.currentCharacterToken=null,this.currentToken=null,this.currentAttr=null,e&&e.locationInfo&&o.assign(this)};g.CHARACTER_TOKEN="CHARACTER_TOKEN",g.NULL_CHARACTER_TOKEN="NULL_CHARACTER_TOKEN",g.WHITESPACE_CHARACTER_TOKEN="WHITESPACE_CHARACTER_TOKEN",g.START_TAG_TOKEN="START_TAG_TOKEN",g.END_TAG_TOKEN="END_TAG_TOKEN",g.COMMENT_TOKEN="COMMENT_TOKEN",g.DOCTYPE_TOKEN="DOCTYPE_TOKEN",g.EOF_TOKEN="EOF_TOKEN",g.HIBERNATION_TOKEN="HIBERNATION_TOKEN",g.MODE=g.prototype.MODE={DATA:l,RCDATA:"RCDATA_STATE",RAWTEXT:"RAWTEXT_STATE",SCRIPT_DATA:"SCRIPT_DATA_STATE",PLAINTEXT:"PLAINTEXT_STATE"},g.getTokenAttr=function(e,t){for(var n=e.attrs.length-1;n>=0;n--)if(e.attrs[n].name===t)return e.attrs[n].value;return null},g.prototype.getNextToken=function(){for(;!this.tokenQueue.length&&this.active;){this._hibernationSnapshot();var e=this._consume();this._ensureHibernation()||this[this.state](e)}return this.tokenQueue.shift()},g.prototype.write=function(e,t){this.active=!0,this.preprocessor.write(e,t)},g.prototype.insertHtmlAtCurrentPos=function(e){this.active=!0,this.preprocessor.insertHtmlAtCurrentPos(e)},g.prototype._hibernationSnapshot=function(){this.consumedAfterSnapshot=0},g.prototype._ensureHibernation=function(){if(this.preprocessor.endOfChunkHit){for(;this.consumedAfterSnapshot>0;this.consumedAfterSnapshot--)this.preprocessor.retreat();return this.active=!1,this.tokenQueue.push({type:g.HIBERNATION_TOKEN}),!0}return!1},g.prototype._consume=function(){return this.consumedAfterSnapshot++,this.preprocessor.advance()},g.prototype._unconsume=function(){this.consumedAfterSnapshot--,this.preprocessor.retreat()},g.prototype._unconsumeSeveral=function(e){for(;e--;)this._unconsume()},g.prototype._reconsumeInState=function(e){this.state=e,this._unconsume()},g.prototype._consumeSubsequentIfMatch=function(e,t,n){for(var r=0,o=!0,i=e.length,s=0,u=t,c=void 0;s<i;s++){if(s>0&&(u=this._consume(),r++),u===a.EOF){o=!1;break}if(u!==(c=e[s])&&(n||u!==E(c))){o=!1;break}}return o||this._unconsumeSeveral(r),o},g.prototype._lookahead=function(){var e=this._consume();return this._unconsume(),e},g.prototype.isTempBufferEqualToScriptString=function(){if(this.tempBuff.length!==u.SCRIPT_STRING.length)return!1;for(var e=0;e<this.tempBuff.length;e++)if(this.tempBuff[e]!==u.SCRIPT_STRING[e])return!1;return!0},g.prototype._createStartTagToken=function(){this.currentToken={type:g.START_TAG_TOKEN,tagName:"",selfClosing:!1,attrs:[]}},g.prototype._createEndTagToken=function(){this.currentToken={type:g.END_TAG_TOKEN,tagName:"",attrs:[]}},g.prototype._createCommentToken=function(){this.currentToken={type:g.COMMENT_TOKEN,data:""}},g.prototype._createDoctypeToken=function(e){this.currentToken={type:g.DOCTYPE_TOKEN,name:e,forceQuirks:!1,publicId:null,systemId:null}},g.prototype._createCharacterToken=function(e,t){this.currentCharacterToken={type:e,chars:t}},g.prototype._createAttr=function(e){this.currentAttr={name:e,value:""}},g.prototype._isDuplicateAttr=function(){return null!==g.getTokenAttr(this.currentToken,this.currentAttr.name)},g.prototype._leaveAttrName=function(e){this.state=e,this._isDuplicateAttr()||this.currentToken.attrs.push(this.currentAttr)},g.prototype._leaveAttrValue=function(e){this.state=e},g.prototype._isAppropriateEndTagToken=function(){return this.lastStartTagName===this.currentToken.tagName},g.prototype._emitCurrentToken=function(){this._emitCurrentCharacterToken(),this.currentToken.type===g.START_TAG_TOKEN&&(this.lastStartTagName=this.currentToken.tagName),this.tokenQueue.push(this.currentToken),this.currentToken=null},g.prototype._emitCurrentCharacterToken=function(){this.currentCharacterToken&&(this.tokenQueue.push(this.currentCharacterToken),this.currentCharacterToken=null)},g.prototype._emitEOFToken=function(){this._emitCurrentCharacterToken(),this.tokenQueue.push({type:g.EOF_TOKEN})},g.prototype._appendCharToCurrentCharacterToken=function(e,t){this.currentCharacterToken&&this.currentCharacterToken.type!==e&&this._emitCurrentCharacterToken(),this.currentCharacterToken?this.currentCharacterToken.chars+=t:this._createCharacterToken(e,t)},g.prototype._emitCodePoint=function(e){var t=g.CHARACTER_TOKEN;p(e)?t=g.WHITESPACE_CHARACTER_TOKEN:e===a.NULL&&(t=g.NULL_CHARACTER_TOKEN),this._appendCharToCurrentCharacterToken(t,_(e))},g.prototype._emitSeveralCodePoints=function(e){for(var t=0;t<e.length;t++)this._emitCodePoint(e[t])},g.prototype._emitChar=function(e){this._appendCharToCurrentCharacterToken(g.CHARACTER_TOKEN,e)},g.prototype._consumeNumericEntity=function(e){var t="",n=void 0;do{t+=_(this._consume()),n=this._lookahead()}while(n!==a.EOF&&d(n,e));this._lookahead()===a.SEMICOLON&&this._consume();var r,o=parseInt(t,e?16:10),i=c[o];return i||((r=o)>=55296&&r<=57343||r>1114111?a.REPLACEMENT_CHARACTER:o)},g.prototype._consumeNamedEntity=function(e){for(var t=null,n=0,r=null,o=0,i=!1,u=0;u>-1;){var c=s[u],l=c<7;if(l&&1&c&&(t=2&c?[s[++u],s[++u]]:[s[++u]],n=o,r===a.SEMICOLON)){i=!0;break}if(o++,(r=this._consume())===a.EOF)break;u=l?4&c?y(u,r):-1:r===c?++u:-1}if(t){if(!i&&(this._unconsumeSeveral(o-n),e)){var p=this._lookahead();if(p===a.EQUALS_SIGN||function(e){return m(e)||h(e)}(p))return this._unconsumeSeveral(n),null}return t}return this._unconsumeSeveral(o),null},g.prototype._consumeCharacterReference=function(e,t){if(p(e)||e===a.GREATER_THAN_SIGN||e===a.AMPERSAND||e===this.additionalAllowedCp||e===a.EOF)return this._unconsume(),null;if(e===a.NUMBER_SIGN){var n=!1,r=this._lookahead();return r!==a.LATIN_SMALL_X&&r!==a.LATIN_CAPITAL_X||(this._consume(),n=!0),(r=this._lookahead())!==a.EOF&&d(r,n)?[this._consumeNumericEntity(n)]:(this._unconsumeSeveral(n?2:1),null)}return this._unconsume(),this._consumeNamedEntity(t)};var N=g.prototype;N.DATA_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.AMPERSAND?this.state="CHARACTER_REFERENCE_IN_DATA_STATE":e===a.LESS_THAN_SIGN?this.state="TAG_OPEN_STATE":e===a.NULL?this._emitCodePoint(e):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.CHARACTER_REFERENCE_IN_DATA_STATE=function(e){this.additionalAllowedCp=void 0;var t=this._consumeCharacterReference(e,!1);this._ensureHibernation()||(t?this._emitSeveralCodePoints(t):this._emitChar("&"),this.state=l)},N.RCDATA_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.AMPERSAND?this.state="CHARACTER_REFERENCE_IN_RCDATA_STATE":e===a.LESS_THAN_SIGN?this.state="RCDATA_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(i.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.CHARACTER_REFERENCE_IN_RCDATA_STATE=function(e){this.additionalAllowedCp=void 0;var t=this._consumeCharacterReference(e,!1);this._ensureHibernation()||(t?this._emitSeveralCodePoints(t):this._emitChar("&"),this.state="RCDATA_STATE")},N.RAWTEXT_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.LESS_THAN_SIGN?this.state="RAWTEXT_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(i.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.SCRIPT_DATA_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(i.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.PLAINTEXT_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.NULL?this._emitChar(i.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.TAG_OPEN_STATE=function(e){e===a.EXCLAMATION_MARK?this.state="MARKUP_DECLARATION_OPEN_STATE":e===a.SOLIDUS?this.state="END_TAG_OPEN_STATE":m(e)?(this._createStartTagToken(),this._reconsumeInState("TAG_NAME_STATE")):e===a.QUESTION_MARK?this._reconsumeInState("BOGUS_COMMENT_STATE"):(this._emitChar("<"),this._reconsumeInState(l))},N.END_TAG_OPEN_STATE=function(e){m(e)?(this._createEndTagToken(),this._reconsumeInState("TAG_NAME_STATE")):e===a.GREATER_THAN_SIGN?this.state=l:e===a.EOF?(this._reconsumeInState(l),this._emitChar("<"),this._emitChar("/")):this._reconsumeInState("BOGUS_COMMENT_STATE")},N.TAG_NAME_STATE=function(e){p(e)?this.state="BEFORE_ATTRIBUTE_NAME_STATE":e===a.SOLIDUS?this.state="SELF_CLOSING_START_TAG_STATE":e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):T(e)?this.currentToken.tagName+=A(e):e===a.NULL?this.currentToken.tagName+=i.REPLACEMENT_CHARACTER:e===a.EOF?this._reconsumeInState(l):this.currentToken.tagName+=_(e)},N.RCDATA_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="RCDATA_END_TAG_OPEN_STATE"):(this._emitChar("<"),this._reconsumeInState("RCDATA_STATE"))},N.RCDATA_END_TAG_OPEN_STATE=function(e){m(e)?(this._createEndTagToken(),this._reconsumeInState("RCDATA_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("RCDATA_STATE"))},N.RCDATA_END_TAG_NAME_STATE=function(e){if(T(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(f(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(p(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this.state=l,void this._emitCurrentToken()}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("RCDATA_STATE")}},N.RAWTEXT_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="RAWTEXT_END_TAG_OPEN_STATE"):(this._emitChar("<"),this._reconsumeInState("RAWTEXT_STATE"))},N.RAWTEXT_END_TAG_OPEN_STATE=function(e){m(e)?(this._createEndTagToken(),this._reconsumeInState("RAWTEXT_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("RAWTEXT_STATE"))},N.RAWTEXT_END_TAG_NAME_STATE=function(e){if(T(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(f(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(p(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=l)}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("RAWTEXT_STATE")}},N.SCRIPT_DATA_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_END_TAG_OPEN_STATE"):e===a.EXCLAMATION_MARK?(this.state="SCRIPT_DATA_ESCAPE_START_STATE",this._emitChar("<"),this._emitChar("!")):(this._emitChar("<"),this._reconsumeInState("SCRIPT_DATA_STATE"))},N.SCRIPT_DATA_END_TAG_OPEN_STATE=function(e){m(e)?(this._createEndTagToken(),this._reconsumeInState("SCRIPT_DATA_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("SCRIPT_DATA_STATE"))},N.SCRIPT_DATA_END_TAG_NAME_STATE=function(e){if(T(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(f(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(p(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=l)}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("SCRIPT_DATA_STATE")}},N.SCRIPT_DATA_ESCAPE_START_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPE_START_DASH_STATE",this._emitChar("-")):this._reconsumeInState("SCRIPT_DATA_STATE")},N.SCRIPT_DATA_ESCAPE_START_DASH_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",this._emitChar("-")):this._reconsumeInState("SCRIPT_DATA_STATE")},N.SCRIPT_DATA_ESCAPED_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(i.REPLACEMENT_CHARACTER):e===a.EOF?this._reconsumeInState(l):this._emitCodePoint(e)},N.SCRIPT_DATA_ESCAPED_DASH_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===a.NULL?(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitChar(i.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_ESCAPED_DASH_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this._emitChar("-"):e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===a.GREATER_THAN_SIGN?(this.state="SCRIPT_DATA_STATE",this._emitChar(">")):e===a.NULL?(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitChar(i.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE"):m(e)?(this.tempBuff=[],this._emitChar("<"),this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE")):(this._emitChar("<"),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE"))},N.SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE=function(e){m(e)?(this._createEndTagToken(),this._reconsumeInState("SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE"))},N.SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE=function(e){if(T(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(f(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(p(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=l)}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE")}},N.SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE=function(e){p(e)||e===a.SOLIDUS||e===a.GREATER_THAN_SIGN?(this.state=this.isTempBufferEqualToScriptString()?"SCRIPT_DATA_DOUBLE_ESCAPED_STATE":"SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e)):T(e)?(this.tempBuff.push(E(e)),this._emitCodePoint(e)):f(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE")},N.SCRIPT_DATA_DOUBLE_ESCAPED_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChar("<")):e===a.NULL?this._emitChar(i.REPLACEMENT_CHARACTER):e===a.EOF?this._reconsumeInState(l):this._emitCodePoint(e)},N.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChar("<")):e===a.NULL?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitChar(i.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this._emitChar("-"):e===a.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChar("<")):e===a.GREATER_THAN_SIGN?(this.state="SCRIPT_DATA_STATE",this._emitChar(">")):e===a.NULL?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitChar(i.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE",this._emitChar("/")):this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPED_STATE")},N.SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE=function(e){p(e)||e===a.SOLIDUS||e===a.GREATER_THAN_SIGN?(this.state=this.isTempBufferEqualToScriptString()?"SCRIPT_DATA_ESCAPED_STATE":"SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e)):T(e)?(this.tempBuff.push(E(e)),this._emitCodePoint(e)):f(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPED_STATE")},N.BEFORE_ATTRIBUTE_NAME_STATE=function(e){p(e)||(e===a.SOLIDUS||e===a.GREATER_THAN_SIGN||e===a.EOF?this._reconsumeInState("AFTER_ATTRIBUTE_NAME_STATE"):e===a.EQUALS_SIGN?(this._createAttr("="),this.state="ATTRIBUTE_NAME_STATE"):(this._createAttr(""),this._reconsumeInState("ATTRIBUTE_NAME_STATE")))},N.ATTRIBUTE_NAME_STATE=function(e){p(e)||e===a.SOLIDUS||e===a.GREATER_THAN_SIGN||e===a.EOF?(this._leaveAttrName("AFTER_ATTRIBUTE_NAME_STATE"),this._unconsume()):e===a.EQUALS_SIGN?this._leaveAttrName("BEFORE_ATTRIBUTE_VALUE_STATE"):T(e)?this.currentAttr.name+=A(e):e===a.QUOTATION_MARK||e===a.APOSTROPHE||e===a.LESS_THAN_SIGN?this.currentAttr.name+=_(e):e===a.NULL?this.currentAttr.name+=i.REPLACEMENT_CHARACTER:this.currentAttr.name+=_(e)},N.AFTER_ATTRIBUTE_NAME_STATE=function(e){p(e)||(e===a.SOLIDUS?this.state="SELF_CLOSING_START_TAG_STATE":e===a.EQUALS_SIGN?this.state="BEFORE_ATTRIBUTE_VALUE_STATE":e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EOF?this._reconsumeInState(l):(this._createAttr(""),this._reconsumeInState("ATTRIBUTE_NAME_STATE")))},N.BEFORE_ATTRIBUTE_VALUE_STATE=function(e){p(e)||(e===a.QUOTATION_MARK?this.state="ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE":e===a.APOSTROPHE?this.state="ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE":this._reconsumeInState("ATTRIBUTE_VALUE_UNQUOTED_STATE"))},N.ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE=function(e){e===a.QUOTATION_MARK?this.state="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE":e===a.AMPERSAND?(this.additionalAllowedCp=a.QUOTATION_MARK,this.returnState=this.state,this.state="CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE"):e===a.NULL?this.currentAttr.value+=i.REPLACEMENT_CHARACTER:e===a.EOF?this._reconsumeInState(l):this.currentAttr.value+=_(e)},N.ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE=function(e){e===a.APOSTROPHE?this.state="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE":e===a.AMPERSAND?(this.additionalAllowedCp=a.APOSTROPHE,this.returnState=this.state,this.state="CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE"):e===a.NULL?this.currentAttr.value+=i.REPLACEMENT_CHARACTER:e===a.EOF?this._reconsumeInState(l):this.currentAttr.value+=_(e)},N.ATTRIBUTE_VALUE_UNQUOTED_STATE=function(e){p(e)?this._leaveAttrValue("BEFORE_ATTRIBUTE_NAME_STATE"):e===a.AMPERSAND?(this.additionalAllowedCp=a.GREATER_THAN_SIGN,this.returnState=this.state,this.state="CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE"):e===a.GREATER_THAN_SIGN?(this._leaveAttrValue(l),this._emitCurrentToken()):e===a.NULL?this.currentAttr.value+=i.REPLACEMENT_CHARACTER:e===a.QUOTATION_MARK||e===a.APOSTROPHE||e===a.LESS_THAN_SIGN||e===a.EQUALS_SIGN||e===a.GRAVE_ACCENT?this.currentAttr.value+=_(e):e===a.EOF?this._reconsumeInState(l):this.currentAttr.value+=_(e)},N.CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE=function(e){var t=this._consumeCharacterReference(e,!0);if(!this._ensureHibernation()){if(t)for(var n=0;n<t.length;n++)this.currentAttr.value+=_(t[n]);else this.currentAttr.value+="&";this.state=this.returnState}},N.AFTER_ATTRIBUTE_VALUE_QUOTED_STATE=function(e){p(e)?this._leaveAttrValue("BEFORE_ATTRIBUTE_NAME_STATE"):e===a.SOLIDUS?this._leaveAttrValue("SELF_CLOSING_START_TAG_STATE"):e===a.GREATER_THAN_SIGN?(this._leaveAttrValue(l),this._emitCurrentToken()):e===a.EOF?this._reconsumeInState(l):this._reconsumeInState("BEFORE_ATTRIBUTE_NAME_STATE")},N.SELF_CLOSING_START_TAG_STATE=function(e){e===a.GREATER_THAN_SIGN?(this.currentToken.selfClosing=!0,this.state=l,this._emitCurrentToken()):e===a.EOF?this._reconsumeInState(l):this._reconsumeInState("BEFORE_ATTRIBUTE_NAME_STATE")},N.BOGUS_COMMENT_STATE=function(){this._createCommentToken(),this._reconsumeInState("BOGUS_COMMENT_STATE_CONTINUATION")},N.BOGUS_COMMENT_STATE_CONTINUATION=function(e){for(;;){if(e===a.GREATER_THAN_SIGN){this.state=l;break}if(e===a.EOF){this._reconsumeInState(l);break}if(this.currentToken.data+=e===a.NULL?i.REPLACEMENT_CHARACTER:_(e),this._hibernationSnapshot(),e=this._consume(),this._ensureHibernation())return}this._emitCurrentToken()},N.MARKUP_DECLARATION_OPEN_STATE=function(e){var t=this._consumeSubsequentIfMatch(u.DASH_DASH_STRING,e,!0),n=!t&&this._consumeSubsequentIfMatch(u.DOCTYPE_STRING,e,!1),r=!t&&!n&&this.allowCDATA&&this._consumeSubsequentIfMatch(u.CDATA_START_STRING,e,!0);this._ensureHibernation()||(t?(this._createCommentToken(),this.state="COMMENT_START_STATE"):n?this.state="DOCTYPE_STATE":r?this.state="CDATA_SECTION_STATE":this._reconsumeInState("BOGUS_COMMENT_STATE"))},N.COMMENT_START_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_START_DASH_STATE":e===a.NULL?(this.currentToken.data+=i.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_START_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_END_STATE":e===a.NULL?(this.currentToken.data+="-",this.currentToken.data+=i.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+="-",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_END_DASH_STATE":e===a.NULL?this.currentToken.data+=i.REPLACEMENT_CHARACTER:e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.data+=_(e)},N.COMMENT_END_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_END_STATE":e===a.NULL?(this.currentToken.data+="-",this.currentToken.data+=i.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+="-",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_END_STATE=function(e){e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EXCLAMATION_MARK?this.state="COMMENT_END_BANG_STATE":e===a.HYPHEN_MINUS?this.currentToken.data+="-":e===a.NULL?(this.currentToken.data+="--",this.currentToken.data+=i.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.EOF?(this._reconsumeInState(l),this._emitCurrentToken()):(this.currentToken.data+="--",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_END_BANG_STATE=function(e){e===a.HYPHEN_MINUS?(this.currentToken.data+="--!",this.state="COMMENT_END_DASH_STATE"):e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.NULL?(this.currentToken.data+="--!",this.currentToken.data+=i.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+="--!",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.DOCTYPE_STATE=function(e){p(e)||(e===a.GREATER_THAN_SIGN?(this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.EOF?(this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):(this._createDoctypeToken(""),this._reconsumeInState("DOCTYPE_NAME_STATE")))},N.DOCTYPE_NAME_STATE=function(e){p(e)||e===a.GREATER_THAN_SIGN||e===a.EOF?this._reconsumeInState("AFTER_DOCTYPE_NAME_STATE"):T(e)?this.currentToken.name+=A(e):e===a.NULL?this.currentToken.name+=i.REPLACEMENT_CHARACTER:this.currentToken.name+=_(e)},N.AFTER_DOCTYPE_NAME_STATE=function(e){if(!p(e))if(e===a.GREATER_THAN_SIGN)this.state=l,this._emitCurrentToken();else{var t=this._consumeSubsequentIfMatch(u.PUBLIC_STRING,e,!1),n=!t&&this._consumeSubsequentIfMatch(u.SYSTEM_STRING,e,!1);this._ensureHibernation()||(t?this.state="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE":n?this.state="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE":(this.currentToken.forceQuirks=!0,this.state="BOGUS_DOCTYPE_STATE"))}},N.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE=function(e){p(e)||(e===a.QUOTATION_MARK?(this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===a.APOSTROPHE?(this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE"):(this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")))},N.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE=function(e){e===a.QUOTATION_MARK?this.state="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE":e===a.NULL?this.currentToken.publicId+=i.REPLACEMENT_CHARACTER:e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.publicId+=_(e)},N.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE=function(e){e===a.APOSTROPHE?this.state="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE":e===a.NULL?this.currentToken.publicId+=i.REPLACEMENT_CHARACTER:e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.publicId+=_(e)},N.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE=function(e){p(e)||(e===a.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=l):e===a.QUOTATION_MARK?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===a.APOSTROPHE?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):(this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")))},N.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE=function(e){p(e)||(e===a.QUOTATION_MARK?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===a.APOSTROPHE?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):(this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")))},N.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE=function(e){e===a.QUOTATION_MARK?this.state="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE":e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.NULL?this.currentToken.systemId+=i.REPLACEMENT_CHARACTER:e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.systemId+=_(e)},N.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE=function(e){e===a.APOSTROPHE?this.state="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE":e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.NULL?this.currentToken.systemId+=i.REPLACEMENT_CHARACTER:e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.systemId+=_(e)},N.AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE=function(e){p(e)||(e===a.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=l):e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.state="BOGUS_DOCTYPE_STATE")},N.BOGUS_DOCTYPE_STATE=function(e){e===a.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=l):e===a.EOF&&(this._emitCurrentToken(),this._reconsumeInState(l))},N.CDATA_SECTION_STATE=function(e){for(;;){if(e===a.EOF){this._reconsumeInState(l);break}var t=this._consumeSubsequentIfMatch(u.CDATA_END_STRING,e,!0);if(this._ensureHibernation())break;if(t){this.state=l;break}if(this._emitCodePoint(e),this._hibernationSnapshot(),e=this._consume(),this._ensureHibernation())break}}},function(e,t,n){e.exports=n(1)(7)},function(e,t,n){e.exports=n(1)(37)},function(e,t){e.exports=require("stream")},function(e,t,n){e.exports=n(1)(40)},function(e,t,n){e.exports=n(1)(62)},function(e,t,n){"use strict";e.exports=function(e,t){return[e,t=t||Object.create(null)].reduce(function(e,t){return Object.keys(t).forEach(function(n){e[n]=t[n]}),e},Object.create(null))}},function(e,t,n){"use strict";var r=n(2).DOCUMENT_MODE,o=["+//silmaril//dtd html pro v0r11 19970101//en","-//advasoft ltd//dtd html 3.0 aswedit + extensions//en","-//as//dtd html 3.0 aswedit + extensions//en","-//ietf//dtd html 2.0 level 1//en","-//ietf//dtd html 2.0 level 2//en","-//ietf//dtd html 2.0 strict level 1//en","-//ietf//dtd html 2.0 strict level 2//en","-//ietf//dtd html 2.0 strict//en","-//ietf//dtd html 2.0//en","-//ietf//dtd html 2.1e//en","-//ietf//dtd html 3.0//en","-//ietf//dtd html 3.0//en//","-//ietf//dtd html 3.2 final//en","-//ietf//dtd html 3.2//en","-//ietf//dtd html 3//en","-//ietf//dtd html level 0//en","-//ietf//dtd html level 0//en//2.0","-//ietf//dtd html level 1//en","-//ietf//dtd html level 1//en//2.0","-//ietf//dtd html level 2//en","-//ietf//dtd html level 2//en//2.0","-//ietf//dtd html level 3//en","-//ietf//dtd html level 3//en//3.0","-//ietf//dtd html strict level 0//en","-//ietf//dtd html strict level 0//en//2.0","-//ietf//dtd html strict level 1//en","-//ietf//dtd html strict level 1//en//2.0","-//ietf//dtd html strict level 2//en","-//ietf//dtd html strict level 2//en//2.0","-//ietf//dtd html strict level 3//en","-//ietf//dtd html strict level 3//en//3.0","-//ietf//dtd html strict//en","-//ietf//dtd html strict//en//2.0","-//ietf//dtd html strict//en//3.0","-//ietf//dtd html//en","-//ietf//dtd html//en//2.0","-//ietf//dtd html//en//3.0","-//metrius//dtd metrius presentational//en","-//microsoft//dtd internet explorer 2.0 html strict//en","-//microsoft//dtd internet explorer 2.0 html//en","-//microsoft//dtd internet explorer 2.0 tables//en","-//microsoft//dtd internet explorer 3.0 html strict//en","-//microsoft//dtd internet explorer 3.0 html//en","-//microsoft//dtd internet explorer 3.0 tables//en","-//netscape comm. corp.//dtd html//en","-//netscape comm. corp.//dtd strict html//en","-//o'reilly and associates//dtd html 2.0//en","-//o'reilly and associates//dtd html extended 1.0//en","-//spyglass//dtd html 2.0 extended//en","-//sq//dtd html 2.0 hotmetal + extensions//en","-//sun microsystems corp.//dtd hotjava html//en","-//sun microsystems corp.//dtd hotjava strict html//en","-//w3c//dtd html 3 1995-03-24//en","-//w3c//dtd html 3.2 draft//en","-//w3c//dtd html 3.2 final//en","-//w3c//dtd html 3.2//en","-//w3c//dtd html 3.2s draft//en","-//w3c//dtd html 4.0 frameset//en","-//w3c//dtd html 4.0 transitional//en","-//w3c//dtd html experimental 19960712//en","-//w3c//dtd html experimental 970421//en","-//w3c//dtd w3 html//en","-//w3o//dtd w3 html 3.0//en","-//w3o//dtd w3 html 3.0//en//","-//webtechs//dtd mozilla html 2.0//en","-//webtechs//dtd mozilla html//en"],i=o.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]),s=["-//w3o//dtd w3 html strict 3.0//en//","-/w3c/dtd html 4.0 transitional/en","html"],a=["-//W3C//DTD XHTML 1.0 Frameset//","-//W3C//DTD XHTML 1.0 Transitional//"],u=a.concat(["-//W3C//DTD HTML 4.01 Frameset//","-//W3C//DTD HTML 4.01 Transitional//"]);function c(e){var t=-1!==e.indexOf('"')?"'":'"';return t+e+t}function l(e,t){for(var n=0;n<t.length;n++)if(0===e.indexOf(t[n]))return!0;return!1}t.getDocumentMode=function(e,t,n){if("html"!==e)return r.QUIRKS;if(n&&"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"===n.toLowerCase())return r.QUIRKS;if(null!==t){if(t=t.toLowerCase(),s.indexOf(t)>-1)return r.QUIRKS;var c=null===n?i:o;if(l(t,c))return r.QUIRKS;if(l(t,c=null===n?a:u))return r.LIMITED_QUIRKS}return r.NO_QUIRKS},t.serializeContent=function(e,t,n){var r="!DOCTYPE ";return e&&(r+=e),null!==t?r+=" PUBLIC "+c(t):null!==n&&(r+=" SYSTEM"),null!==n&&(r+=" "+c(n)),r}},function(e,t,n){"use strict";var r=n(2).DOCUMENT_MODE;t.createDocument=function(){return{nodeName:"#document",mode:r.NO_QUIRKS,childNodes:[]}},t.createDocumentFragment=function(){return{nodeName:"#document-fragment",childNodes:[]}},t.createElement=function(e,t,n){return{nodeName:e,tagName:e,attrs:n,namespaceURI:t,childNodes:[],parentNode:null}},t.createCommentNode=function(e){return{nodeName:"#comment",data:e,parentNode:null}};var o=function(e){return{nodeName:"#text",value:e,parentNode:null}},i=t.appendChild=function(e,t){e.childNodes.push(t),t.parentNode=e},s=t.insertBefore=function(e,t,n){var r=e.childNodes.indexOf(n);e.childNodes.splice(r,0,t),t.parentNode=e};t.setTemplateContent=function(e,t){e.content=t},t.getTemplateContent=function(e){return e.content},t.setDocumentType=function(e,t,n,r){for(var o=null,s=0;s<e.childNodes.length;s++)if("#documentType"===e.childNodes[s].nodeName){o=e.childNodes[s];break}o?(o.name=t,o.publicId=n,o.systemId=r):i(e,{nodeName:"#documentType",name:t,publicId:n,systemId:r})},t.setDocumentMode=function(e,t){e.mode=t},t.getDocumentMode=function(e){return e.mode},t.detachNode=function(e){if(e.parentNode){var t=e.parentNode.childNodes.indexOf(e);e.parentNode.childNodes.splice(t,1),e.parentNode=null}},t.insertText=function(e,t){if(e.childNodes.length){var n=e.childNodes[e.childNodes.length-1];if("#text"===n.nodeName)return void(n.value+=t)}i(e,o(t))},t.insertTextBefore=function(e,t,n){var r=e.childNodes[e.childNodes.indexOf(n)-1];r&&"#text"===r.nodeName?r.value+=t:s(e,o(t),n)},t.adoptAttributes=function(e,t){for(var n=[],r=0;r<e.attrs.length;r++)n.push(e.attrs[r].name);for(var o=0;o<t.length;o++)-1===n.indexOf(t[o].name)&&e.attrs.push(t[o])},t.getFirstChild=function(e){return e.childNodes[0]},t.getChildNodes=function(e){return e.childNodes},t.getParentNode=function(e){return e.parentNode},t.getAttrList=function(e){return e.attrs},t.getTagName=function(e){return e.tagName},t.getNamespaceURI=function(e){return e.namespaceURI},t.getTextNodeContent=function(e){return e.value},t.getCommentNodeContent=function(e){return e.data},t.getDocumentTypeNodeName=function(e){return e.name},t.getDocumentTypeNodePublicId=function(e){return e.publicId},t.getDocumentTypeNodeSystemId=function(e){return e.systemId},t.isTextNode=function(e){return"#text"===e.nodeName},t.isCommentNode=function(e){return"#comment"===e.nodeName},t.isDocumentTypeNode=function(e){return"#documentType"===e.nodeName},t.isElementNode=function(e){return!!e.tagName}},function(e,t,n){"use strict";var r=n(21),o=n(18);t.parse=function(e,t){return new r(t).parse(e)},t.parseFragment=function(e,t,n){return"string"==typeof e&&(n=t,t=e,e=null),new r(n).parseFragment(t,e)},t.serialize=function(e,t){return new o(e,t).serialize()},t.treeAdapters={default:n(15),htmlparser2:n(53)},t.ParserStream=n(17),t.PlainTextConversionStream=n(52),t.SerializerStream=n(51),t.SAXParser=n(50)},function(e,t,n){"use strict";var r=n(10).Writable,o=n(5).inherits,i=n(21),s=e.exports=function(e){r.call(this),this.parser=new i(e),this.lastChunkWritten=!1,this.writeCallback=null,this.pausedByScript=!1,this.document=this.parser.treeAdapter.createDocument(),this.pendingHtmlInsertions=[],this._resume=this._resume.bind(this),this._documentWrite=this._documentWrite.bind(this),this._scriptHandler=this._scriptHandler.bind(this),this.parser._bootstrap(this.document,null)};o(s,r),s.prototype._write=function(e,t,n){this.writeCallback=n,this.parser.tokenizer.write(e.toString("utf8"),this.lastChunkWritten),this._runParsingLoop()},s.prototype.end=function(e,t,n){this.lastChunkWritten=!0,r.prototype.end.call(this,e,t,n)},s.prototype._runParsingLoop=function(){this.parser.runParsingLoopForCurrentChunk(this.writeCallback,this._scriptHandler)},s.prototype._resume=function(){if(!this.pausedByScript)throw new Error("Parser was already resumed");for(;this.pendingHtmlInsertions.length;){var e=this.pendingHtmlInsertions.pop();this.parser.tokenizer.insertHtmlAtCurrentPos(e)}this.pausedByScript=!1,this.parser.tokenizer.active&&this._runParsingLoop()},s.prototype._documentWrite=function(e){this.parser.stopped||this.pendingHtmlInsertions.push(e)},s.prototype._scriptHandler=function(e){this.listeners("script").length?(this.pausedByScript=!0,this.emit("script",e,this._documentWrite,this._resume)):this._runParsingLoop()}},function(e,t,n){"use strict";var r=n(15),o=n(14),i=n(13),s=n(2),a=s.TAG_NAMES,u=s.NAMESPACES,c={treeAdapter:r},l=/&/g,p=/\u00a0/g,h=/"/g,T=/</g,f=/>/g,m=e.exports=function(e,t){this.options=i(c,t),this.treeAdapter=this.options.treeAdapter,this.html="",this.startNode=e};m.escapeString=function(e,t){return e=e.replace(l,"&amp;").replace(p,"&nbsp;"),e=t?e.replace(h,"&quot;"):e.replace(T,"&lt;").replace(f,"&gt;")},m.prototype.serialize=function(){return this._serializeChildNodes(this.startNode),this.html},m.prototype._serializeChildNodes=function(e){var t=this.treeAdapter.getChildNodes(e);if(t)for(var n=0,r=t.length;n<r;n++){var o=t[n];this.treeAdapter.isElementNode(o)?this._serializeElement(o):this.treeAdapter.isTextNode(o)?this._serializeTextNode(o):this.treeAdapter.isCommentNode(o)?this._serializeCommentNode(o):this.treeAdapter.isDocumentTypeNode(o)&&this._serializeDocumentTypeNode(o)}},m.prototype._serializeElement=function(e){var t=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);if(this.html+="<"+t,this._serializeAttributes(e),this.html+=">",t!==a.AREA&&t!==a.BASE&&t!==a.BASEFONT&&t!==a.BGSOUND&&t!==a.BR&&t!==a.BR&&t!==a.COL&&t!==a.EMBED&&t!==a.FRAME&&t!==a.HR&&t!==a.IMG&&t!==a.INPUT&&t!==a.KEYGEN&&t!==a.LINK&&t!==a.MENUITEM&&t!==a.META&&t!==a.PARAM&&t!==a.SOURCE&&t!==a.TRACK&&t!==a.WBR){var r=t===a.TEMPLATE&&n===u.HTML?this.treeAdapter.getTemplateContent(e):e;this._serializeChildNodes(r),this.html+="</"+t+">"}},m.prototype._serializeAttributes=function(e){for(var t=this.treeAdapter.getAttrList(e),n=0,r=t.length;n<r;n++){var o=t[n],i=m.escapeString(o.value,!0);this.html+=" ",o.namespace?o.namespace===u.XML?this.html+="xml:"+o.name:o.namespace===u.XMLNS?("xmlns"!==o.name&&(this.html+="xmlns:"),this.html+=o.name):o.namespace===u.XLINK?this.html+="xlink:"+o.name:this.html+=o.namespace+":"+o.name:this.html+=o.name,this.html+='="'+i+'"'}},m.prototype._serializeTextNode=function(e){var t=this.treeAdapter.getTextNodeContent(e),n=this.treeAdapter.getParentNode(e),r=void 0;n&&this.treeAdapter.isElementNode(n)&&(r=this.treeAdapter.getTagName(n)),r===a.STYLE||r===a.SCRIPT||r===a.XMP||r===a.IFRAME||r===a.NOEMBED||r===a.NOFRAMES||r===a.PLAINTEXT||r===a.NOSCRIPT?this.html+=t:this.html+=m.escapeString(t,!1)},m.prototype._serializeCommentNode=function(e){this.html+="\x3c!--"+this.treeAdapter.getCommentNodeContent(e)+"--\x3e"},m.prototype._serializeDocumentTypeNode=function(e){var t=this.treeAdapter.getDocumentTypeNodeName(e);this.html+="<"+o.serializeContent(t,null,null)+">"}},function(e,t,n){"use strict";var r=n(7),o=n(2),i=o.TAG_NAMES,s=o.NAMESPACES,a=o.ATTRS,u={TEXT_HTML:"text/html",APPLICATION_XML:"application/xhtml+xml"},c={attributename:"attributeName",attributetype:"attributeType",basefrequency:"baseFrequency",baseprofile:"baseProfile",calcmode:"calcMode",clippathunits:"clipPathUnits",diffuseconstant:"diffuseConstant",edgemode:"edgeMode",filterunits:"filterUnits",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",limitingconeangle:"limitingConeAngle",markerheight:"markerHeight",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textlength:"textLength",viewbox:"viewBox",viewtarget:"viewTarget",xchannelselector:"xChannelSelector",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan"},l={"xlink:actuate":{prefix:"xlink",name:"actuate",namespace:s.XLINK},"xlink:arcrole":{prefix:"xlink",name:"arcrole",namespace:s.XLINK},"xlink:href":{prefix:"xlink",name:"href",namespace:s.XLINK},"xlink:role":{prefix:"xlink",name:"role",namespace:s.XLINK},"xlink:show":{prefix:"xlink",name:"show",namespace:s.XLINK},"xlink:title":{prefix:"xlink",name:"title",namespace:s.XLINK},"xlink:type":{prefix:"xlink",name:"type",namespace:s.XLINK},"xml:base":{prefix:"xml",name:"base",namespace:s.XML},"xml:lang":{prefix:"xml",name:"lang",namespace:s.XML},"xml:space":{prefix:"xml",name:"space",namespace:s.XML},xmlns:{prefix:"",name:"xmlns",namespace:s.XMLNS},"xmlns:xlink":{prefix:"xmlns",name:"xlink",namespace:s.XMLNS}},p=t.SVG_TAG_NAMES_ADJUSTMENT_MAP={altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient",textpath:"textPath"},h=Object.create(null);h[i.B]=!0,h[i.BIG]=!0,h[i.BLOCKQUOTE]=!0,h[i.BODY]=!0,h[i.BR]=!0,h[i.CENTER]=!0,h[i.CODE]=!0,h[i.DD]=!0,h[i.DIV]=!0,h[i.DL]=!0,h[i.DT]=!0,h[i.EM]=!0,h[i.EMBED]=!0,h[i.H1]=!0,h[i.H2]=!0,h[i.H3]=!0,h[i.H4]=!0,h[i.H5]=!0,h[i.H6]=!0,h[i.HEAD]=!0,h[i.HR]=!0,h[i.I]=!0,h[i.IMG]=!0,h[i.LI]=!0,h[i.LISTING]=!0,h[i.MENU]=!0,h[i.META]=!0,h[i.NOBR]=!0,h[i.OL]=!0,h[i.P]=!0,h[i.PRE]=!0,h[i.RUBY]=!0,h[i.S]=!0,h[i.SMALL]=!0,h[i.SPAN]=!0,h[i.STRONG]=!0,h[i.STRIKE]=!0,h[i.SUB]=!0,h[i.SUP]=!0,h[i.TABLE]=!0,h[i.TT]=!0,h[i.U]=!0,h[i.UL]=!0,h[i.VAR]=!0,t.causesExit=function(e){var t=e.tagName;return!!(t===i.FONT&&(null!==r.getTokenAttr(e,a.COLOR)||null!==r.getTokenAttr(e,a.SIZE)||null!==r.getTokenAttr(e,a.FACE)))||h[t]},t.adjustTokenMathMLAttrs=function(e){for(var t=0;t<e.attrs.length;t++)if("definitionurl"===e.attrs[t].name){e.attrs[t].name="definitionURL";break}},t.adjustTokenSVGAttrs=function(e){for(var t=0;t<e.attrs.length;t++){var n=c[e.attrs[t].name];n&&(e.attrs[t].name=n)}},t.adjustTokenXMLAttrs=function(e){for(var t=0;t<e.attrs.length;t++){var n=l[e.attrs[t].name];n&&(e.attrs[t].prefix=n.prefix,e.attrs[t].name=n.name,e.attrs[t].namespace=n.namespace)}},t.adjustTokenSVGTagName=function(e){var t=p[e.tagName];t&&(e.tagName=t)},t.isIntegrationPoint=function(e,t,n,r){return!(r&&r!==s.HTML||!function(e,t,n){if(t===s.MATHML&&e===i.ANNOTATION_XML)for(var r=0;r<n.length;r++)if(n[r].name===a.ENCODING){var o=n[r].value.toLowerCase();return o===u.TEXT_HTML||o===u.APPLICATION_XML}return t===s.SVG&&(e===i.FOREIGN_OBJECT||e===i.DESC||e===i.TITLE)}(e,t,n))||!(r&&r!==s.MATHML||!function(e,t){return t===s.MATHML&&(e===i.MI||e===i.MO||e===i.MN||e===i.MS||e===i.MTEXT)}(e,t))}},function(e,t,n){"use strict";var r=n(2),o=r.TAG_NAMES,i=r.NAMESPACES;function s(e){switch(e.length){case 1:return e===o.P;case 2:return e===o.RB||e===o.RP||e===o.RT||e===o.DD||e===o.DT||e===o.LI;case 3:return e===o.RTC;case 6:return e===o.OPTION;case 8:return e===o.OPTGROUP||e===o.MENUITEM}return!1}function a(e,t){switch(e.length){case 2:if(e===o.TD||e===o.TH)return t===i.HTML;if(e===o.MI||e===o.MO||e===o.MN||e===o.MS)return t===i.MATHML;break;case 4:if(e===o.HTML)return t===i.HTML;if(e===o.DESC)return t===i.SVG;break;case 5:if(e===o.TABLE)return t===i.HTML;if(e===o.MTEXT)return t===i.MATHML;if(e===o.TITLE)return t===i.SVG;break;case 6:return(e===o.APPLET||e===o.OBJECT)&&t===i.HTML;case 7:return(e===o.CAPTION||e===o.MARQUEE)&&t===i.HTML;case 8:return e===o.TEMPLATE&&t===i.HTML;case 13:return e===o.FOREIGN_OBJECT&&t===i.SVG;case 14:return e===o.ANNOTATION_XML&&t===i.MATHML}return!1}var u=e.exports=function(e,t){this.stackTop=-1,this.items=[],this.current=e,this.currentTagName=null,this.currentTmplContent=null,this.tmplCount=0,this.treeAdapter=t};u.prototype._indexOf=function(e){for(var t=-1,n=this.stackTop;n>=0;n--)if(this.items[n]===e){t=n;break}return t},u.prototype._isInTemplate=function(){return this.currentTagName===o.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===i.HTML},u.prototype._updateCurrentElement=function(){this.current=this.items[this.stackTop],this.currentTagName=this.current&&this.treeAdapter.getTagName(this.current),this.currentTmplContent=this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):null},u.prototype.push=function(e){this.items[++this.stackTop]=e,this._updateCurrentElement(),this._isInTemplate()&&this.tmplCount++},u.prototype.pop=function(){this.stackTop--,this.tmplCount>0&&this._isInTemplate()&&this.tmplCount--,this._updateCurrentElement()},u.prototype.replace=function(e,t){var n=this._indexOf(e);this.items[n]=t,n===this.stackTop&&this._updateCurrentElement()},u.prototype.insertAfter=function(e,t){var n=this._indexOf(e)+1;this.items.splice(n,0,t),n===++this.stackTop&&this._updateCurrentElement()},u.prototype.popUntilTagNamePopped=function(e){for(;this.stackTop>-1;){var t=this.currentTagName,n=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),t===e&&n===i.HTML)break}},u.prototype.popUntilElementPopped=function(e){for(;this.stackTop>-1;){var t=this.current;if(this.pop(),t===e)break}},u.prototype.popUntilNumberedHeaderPopped=function(){for(;this.stackTop>-1;){var e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===o.H1||e===o.H2||e===o.H3||e===o.H4||e===o.H5||e===o.H6&&t===i.HTML)break}},u.prototype.popUntilTableCellPopped=function(){for(;this.stackTop>-1;){var e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===o.TD||e===o.TH&&t===i.HTML)break}},u.prototype.popAllUpToHtmlElement=function(){this.stackTop=0,this._updateCurrentElement()},u.prototype.clearBackToTableContext=function(){for(;this.currentTagName!==o.TABLE&&this.currentTagName!==o.TEMPLATE&&this.currentTagName!==o.HTML||this.treeAdapter.getNamespaceURI(this.current)!==i.HTML;)this.pop()},u.prototype.clearBackToTableBodyContext=function(){for(;this.currentTagName!==o.TBODY&&this.currentTagName!==o.TFOOT&&this.currentTagName!==o.THEAD&&this.currentTagName!==o.TEMPLATE&&this.currentTagName!==o.HTML||this.treeAdapter.getNamespaceURI(this.current)!==i.HTML;)this.pop()},u.prototype.clearBackToTableRowContext=function(){for(;this.currentTagName!==o.TR&&this.currentTagName!==o.TEMPLATE&&this.currentTagName!==o.HTML||this.treeAdapter.getNamespaceURI(this.current)!==i.HTML;)this.pop()},u.prototype.remove=function(e){for(var t=this.stackTop;t>=0;t--)if(this.items[t]===e){this.items.splice(t,1),this.stackTop--,this._updateCurrentElement();break}},u.prototype.tryPeekProperlyNestedBodyElement=function(){var e=this.items[1];return e&&this.treeAdapter.getTagName(e)===o.BODY?e:null},u.prototype.contains=function(e){return this._indexOf(e)>-1},u.prototype.getCommonAncestor=function(e){var t=this._indexOf(e);return--t>=0?this.items[t]:null},u.prototype.isRootHtmlElementCurrent=function(){return 0===this.stackTop&&this.currentTagName===o.HTML},u.prototype.hasInScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]),r=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&r===i.HTML)return!0;if(a(n,r))return!1}return!0},u.prototype.hasNumberedHeaderInScope=function(){for(var e=this.stackTop;e>=0;e--){var t=this.treeAdapter.getTagName(this.items[e]),n=this.treeAdapter.getNamespaceURI(this.items[e]);if((t===o.H1||t===o.H2||t===o.H3||t===o.H4||t===o.H5||t===o.H6)&&n===i.HTML)return!0;if(a(t,n))return!1}return!0},u.prototype.hasInListItemScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]),r=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&r===i.HTML)return!0;if((n===o.UL||n===o.OL)&&r===i.HTML||a(n,r))return!1}return!0},u.prototype.hasInButtonScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]),r=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&r===i.HTML)return!0;if(n===o.BUTTON&&r===i.HTML||a(n,r))return!1}return!0},u.prototype.hasInTableScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===i.HTML){if(n===e)return!0;if(n===o.TABLE||n===o.TEMPLATE||n===o.HTML)return!1}}return!0},u.prototype.hasTableBodyContextInTableScope=function(){for(var e=this.stackTop;e>=0;e--){var t=this.treeAdapter.getTagName(this.items[e]);if(this.treeAdapter.getNamespaceURI(this.items[e])===i.HTML){if(t===o.TBODY||t===o.THEAD||t===o.TFOOT)return!0;if(t===o.TABLE||t===o.HTML)return!1}}return!0},u.prototype.hasInSelectScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===i.HTML){if(n===e)return!0;if(n!==o.OPTION&&n!==o.OPTGROUP)return!1}}return!0},u.prototype.generateImpliedEndTags=function(){for(;s(this.currentTagName);)this.pop()},u.prototype.generateImpliedEndTagsWithExclusion=function(e){for(;s(this.currentTagName)&&this.currentTagName!==e;)this.pop()}},function(e,t,n){"use strict";var r=n(7),o=n(20),i=n(55),s=n(54),a=n(15),u=n(14),c=n(19),l=n(13),p=n(6),h=n(2),T=h.TAG_NAMES,f=h.NAMESPACES,m=h.ATTRS,d={locationInfo:!1,treeAdapter:a},E="hidden",_=8,A=3,y="BEFORE_HTML_MODE",g="BEFORE_HEAD_MODE",N="IN_HEAD_MODE",S="AFTER_HEAD_MODE",v="IN_BODY_MODE",C="TEXT_MODE",O="IN_TABLE_MODE",R="IN_TABLE_TEXT_MODE",I="IN_CAPTION_MODE",M="IN_COLUMN_GROUP_MODE",L="IN_TABLE_BODY_MODE",P="IN_ROW_MODE",b="IN_CELL_MODE",D="IN_SELECT_MODE",k="IN_SELECT_IN_TABLE_MODE",H="IN_TEMPLATE_MODE",w="AFTER_BODY_MODE",U="IN_FRAMESET_MODE",x="AFTER_FRAMESET_MODE",F="AFTER_AFTER_BODY_MODE",B="AFTER_AFTER_FRAMESET_MODE",G=Object.create(null);G[T.TR]=P,G[T.TBODY]=G[T.THEAD]=G[T.TFOOT]=L,G[T.CAPTION]=I,G[T.COLGROUP]=M,G[T.TABLE]=O,G[T.BODY]=v,G[T.FRAMESET]=U;var K=Object.create(null);K[T.CAPTION]=K[T.COLGROUP]=K[T.TBODY]=K[T.TFOOT]=K[T.THEAD]=O,K[T.COL]=M,K[T.TR]=L,K[T.TD]=K[T.TH]=P;var j=Object.create(null);j.INITIAL_MODE=Object.create(null),j.INITIAL_MODE[r.CHARACTER_TOKEN]=j.INITIAL_MODE[r.NULL_CHARACTER_TOKEN]=re,j.INITIAL_MODE[r.WHITESPACE_CHARACTER_TOKEN]=J,j.INITIAL_MODE[r.COMMENT_TOKEN]=$,j.INITIAL_MODE[r.DOCTYPE_TOKEN]=function(e,t){e._setDocumentType(t);var n=t.forceQuirks?h.DOCUMENT_MODE.QUIRKS:u.getDocumentMode(t.name,t.publicId,t.systemId);e.treeAdapter.setDocumentMode(e.document,n),e.insertionMode=y},j.INITIAL_MODE[r.START_TAG_TOKEN]=j.INITIAL_MODE[r.END_TAG_TOKEN]=j.INITIAL_MODE[r.EOF_TOKEN]=re,j[y]=Object.create(null),j[y][r.CHARACTER_TOKEN]=j[y][r.NULL_CHARACTER_TOKEN]=oe,j[y][r.WHITESPACE_CHARACTER_TOKEN]=J,j[y][r.COMMENT_TOKEN]=$,j[y][r.DOCTYPE_TOKEN]=J,j[y][r.START_TAG_TOKEN]=function(e,t){t.tagName===T.HTML?(e._insertElement(t,f.HTML),e.insertionMode=g):oe(e,t)},j[y][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n!==T.HTML&&n!==T.HEAD&&n!==T.BODY&&n!==T.BR||oe(e,t)},j[y][r.EOF_TOKEN]=oe,j[g]=Object.create(null),j[g][r.CHARACTER_TOKEN]=j[g][r.NULL_CHARACTER_TOKEN]=ie,j[g][r.WHITESPACE_CHARACTER_TOKEN]=J,j[g][r.COMMENT_TOKEN]=$,j[g][r.DOCTYPE_TOKEN]=J,j[g][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.HEAD?(e._insertElement(t,f.HTML),e.headElement=e.openElements.current,e.insertionMode=N):ie(e,t)},j[g][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n!==T.HEAD&&n!==T.BODY&&n!==T.HTML&&n!==T.BR||ie(e,t)},j[g][r.EOF_TOKEN]=ie,j[N]=Object.create(null),j[N][r.CHARACTER_TOKEN]=j[N][r.NULL_CHARACTER_TOKEN]=ue,j[N][r.WHITESPACE_CHARACTER_TOKEN]=te,j[N][r.COMMENT_TOKEN]=$,j[N][r.DOCTYPE_TOKEN]=J,j[N][r.START_TAG_TOKEN]=se,j[N][r.END_TAG_TOKEN]=ae,j[N][r.EOF_TOKEN]=ue,j[S]=Object.create(null),j[S][r.CHARACTER_TOKEN]=j[S][r.NULL_CHARACTER_TOKEN]=ce,j[S][r.WHITESPACE_CHARACTER_TOKEN]=te,j[S][r.COMMENT_TOKEN]=$,j[S][r.DOCTYPE_TOKEN]=J,j[S][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.BODY?(e._insertElement(t,f.HTML),e.framesetOk=!1,e.insertionMode=v):n===T.FRAMESET?(e._insertElement(t,f.HTML),e.insertionMode=U):n===T.BASE||n===T.BASEFONT||n===T.BGSOUND||n===T.LINK||n===T.META||n===T.NOFRAMES||n===T.SCRIPT||n===T.STYLE||n===T.TEMPLATE||n===T.TITLE?(e.openElements.push(e.headElement),se(e,t),e.openElements.remove(e.headElement)):n!==T.HEAD&&ce(e,t)},j[S][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.BODY||n===T.HTML||n===T.BR?ce(e,t):n===T.TEMPLATE&&ae(e,t)},j[S][r.EOF_TOKEN]=ce,j[v]=Object.create(null),j[v][r.CHARACTER_TOKEN]=pe,j[v][r.NULL_CHARACTER_TOKEN]=J,j[v][r.WHITESPACE_CHARACTER_TOKEN]=le,j[v][r.COMMENT_TOKEN]=$,j[v][r.DOCTYPE_TOKEN]=J,j[v][r.START_TAG_TOKEN]=Ne,j[v][r.END_TAG_TOKEN]=Oe,j[v][r.EOF_TOKEN]=Re,j[C]=Object.create(null),j[C][r.CHARACTER_TOKEN]=j[C][r.NULL_CHARACTER_TOKEN]=j[C][r.WHITESPACE_CHARACTER_TOKEN]=te,j[C][r.COMMENT_TOKEN]=j[C][r.DOCTYPE_TOKEN]=j[C][r.START_TAG_TOKEN]=J,j[C][r.END_TAG_TOKEN]=function(e,t){t.tagName===T.SCRIPT&&(e.pendingScript=e.openElements.current);e.openElements.pop(),e.insertionMode=e.originalInsertionMode},j[C][r.EOF_TOKEN]=function(e,t){e.openElements.pop(),e.insertionMode=e.originalInsertionMode,e._processToken(t)},j[O]=Object.create(null),j[O][r.CHARACTER_TOKEN]=j[O][r.NULL_CHARACTER_TOKEN]=j[O][r.WHITESPACE_CHARACTER_TOKEN]=Ie,j[O][r.COMMENT_TOKEN]=$,j[O][r.DOCTYPE_TOKEN]=J,j[O][r.START_TAG_TOKEN]=Me,j[O][r.END_TAG_TOKEN]=Le,j[O][r.EOF_TOKEN]=Re,j[R]=Object.create(null),j[R][r.CHARACTER_TOKEN]=function(e,t){e.pendingCharacterTokens.push(t),e.hasNonWhitespacePendingCharacterToken=!0},j[R][r.NULL_CHARACTER_TOKEN]=J,j[R][r.WHITESPACE_CHARACTER_TOKEN]=function(e,t){e.pendingCharacterTokens.push(t)},j[R][r.COMMENT_TOKEN]=j[R][r.DOCTYPE_TOKEN]=j[R][r.START_TAG_TOKEN]=j[R][r.END_TAG_TOKEN]=j[R][r.EOF_TOKEN]=function(e,t){var n=0;if(e.hasNonWhitespacePendingCharacterToken)for(;n<e.pendingCharacterTokens.length;n++)Pe(e,e.pendingCharacterTokens[n]);else for(;n<e.pendingCharacterTokens.length;n++)e._insertCharacters(e.pendingCharacterTokens[n]);e.insertionMode=e.originalInsertionMode,e._processToken(t)},j[I]=Object.create(null),j[I][r.CHARACTER_TOKEN]=pe,j[I][r.NULL_CHARACTER_TOKEN]=J,j[I][r.WHITESPACE_CHARACTER_TOKEN]=le,j[I][r.COMMENT_TOKEN]=$,j[I][r.DOCTYPE_TOKEN]=J,j[I][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.CAPTION||n===T.COL||n===T.COLGROUP||n===T.TBODY||n===T.TD||n===T.TFOOT||n===T.TH||n===T.THEAD||n===T.TR?e.openElements.hasInTableScope(T.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(T.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=O,e._processToken(t)):Ne(e,t)},j[I][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.CAPTION||n===T.TABLE?e.openElements.hasInTableScope(T.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(T.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=O,n===T.TABLE&&e._processToken(t)):n!==T.BODY&&n!==T.COL&&n!==T.COLGROUP&&n!==T.HTML&&n!==T.TBODY&&n!==T.TD&&n!==T.TFOOT&&n!==T.TH&&n!==T.THEAD&&n!==T.TR&&Oe(e,t)},j[I][r.EOF_TOKEN]=Re,j[M]=Object.create(null),j[M][r.CHARACTER_TOKEN]=j[M][r.NULL_CHARACTER_TOKEN]=be,j[M][r.WHITESPACE_CHARACTER_TOKEN]=te,j[M][r.COMMENT_TOKEN]=$,j[M][r.DOCTYPE_TOKEN]=J,j[M][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.COL?e._appendElement(t,f.HTML):n===T.TEMPLATE?se(e,t):be(e,t)},j[M][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.COLGROUP?e.openElements.currentTagName===T.COLGROUP&&(e.openElements.pop(),e.insertionMode=O):n===T.TEMPLATE?ae(e,t):n!==T.COL&&be(e,t)},j[M][r.EOF_TOKEN]=Re,j[L]=Object.create(null),j[L][r.CHARACTER_TOKEN]=j[L][r.NULL_CHARACTER_TOKEN]=j[L][r.WHITESPACE_CHARACTER_TOKEN]=Ie,j[L][r.COMMENT_TOKEN]=$,j[L][r.DOCTYPE_TOKEN]=J,j[L][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.TR?(e.openElements.clearBackToTableBodyContext(),e._insertElement(t,f.HTML),e.insertionMode=P):n===T.TH||n===T.TD?(e.openElements.clearBackToTableBodyContext(),e._insertFakeElement(T.TR),e.insertionMode=P,e._processToken(t)):n===T.CAPTION||n===T.COL||n===T.COLGROUP||n===T.TBODY||n===T.TFOOT||n===T.THEAD?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=O,e._processToken(t)):Me(e,t)},j[L][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.TBODY||n===T.TFOOT||n===T.THEAD?e.openElements.hasInTableScope(n)&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=O):n===T.TABLE?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=O,e._processToken(t)):(n!==T.BODY&&n!==T.CAPTION&&n!==T.COL&&n!==T.COLGROUP||n!==T.HTML&&n!==T.TD&&n!==T.TH&&n!==T.TR)&&Le(e,t)},j[L][r.EOF_TOKEN]=Re,j[P]=Object.create(null),j[P][r.CHARACTER_TOKEN]=j[P][r.NULL_CHARACTER_TOKEN]=j[P][r.WHITESPACE_CHARACTER_TOKEN]=Ie,j[P][r.COMMENT_TOKEN]=$,j[P][r.DOCTYPE_TOKEN]=J,j[P][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.TH||n===T.TD?(e.openElements.clearBackToTableRowContext(),e._insertElement(t,f.HTML),e.insertionMode=b,e.activeFormattingElements.insertMarker()):n===T.CAPTION||n===T.COL||n===T.COLGROUP||n===T.TBODY||n===T.TFOOT||n===T.THEAD||n===T.TR?e.openElements.hasInTableScope(T.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=L,e._processToken(t)):Me(e,t)},j[P][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.TR?e.openElements.hasInTableScope(T.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=L):n===T.TABLE?e.openElements.hasInTableScope(T.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=L,e._processToken(t)):n===T.TBODY||n===T.TFOOT||n===T.THEAD?(e.openElements.hasInTableScope(n)||e.openElements.hasInTableScope(T.TR))&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=L,e._processToken(t)):(n!==T.BODY&&n!==T.CAPTION&&n!==T.COL&&n!==T.COLGROUP||n!==T.HTML&&n!==T.TD&&n!==T.TH)&&Le(e,t)},j[P][r.EOF_TOKEN]=Re,j[b]=Object.create(null),j[b][r.CHARACTER_TOKEN]=pe,j[b][r.NULL_CHARACTER_TOKEN]=J,j[b][r.WHITESPACE_CHARACTER_TOKEN]=le,j[b][r.COMMENT_TOKEN]=$,j[b][r.DOCTYPE_TOKEN]=J,j[b][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.CAPTION||n===T.COL||n===T.COLGROUP||n===T.TBODY||n===T.TD||n===T.TFOOT||n===T.TH||n===T.THEAD||n===T.TR?(e.openElements.hasInTableScope(T.TD)||e.openElements.hasInTableScope(T.TH))&&(e._closeTableCell(),e._processToken(t)):Ne(e,t)},j[b][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.TD||n===T.TH?e.openElements.hasInTableScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=P):n===T.TABLE||n===T.TBODY||n===T.TFOOT||n===T.THEAD||n===T.TR?e.openElements.hasInTableScope(n)&&(e._closeTableCell(),e._processToken(t)):n!==T.BODY&&n!==T.CAPTION&&n!==T.COL&&n!==T.COLGROUP&&n!==T.HTML&&Oe(e,t)},j[b][r.EOF_TOKEN]=Re,j[D]=Object.create(null),j[D][r.CHARACTER_TOKEN]=te,j[D][r.NULL_CHARACTER_TOKEN]=J,j[D][r.WHITESPACE_CHARACTER_TOKEN]=te,j[D][r.COMMENT_TOKEN]=$,j[D][r.DOCTYPE_TOKEN]=J,j[D][r.START_TAG_TOKEN]=De,j[D][r.END_TAG_TOKEN]=ke,j[D][r.EOF_TOKEN]=Re,j[k]=Object.create(null),j[k][r.CHARACTER_TOKEN]=te,j[k][r.NULL_CHARACTER_TOKEN]=J,j[k][r.WHITESPACE_CHARACTER_TOKEN]=te,j[k][r.COMMENT_TOKEN]=$,j[k][r.DOCTYPE_TOKEN]=J,j[k][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.CAPTION||n===T.TABLE||n===T.TBODY||n===T.TFOOT||n===T.THEAD||n===T.TR||n===T.TD||n===T.TH?(e.openElements.popUntilTagNamePopped(T.SELECT),e._resetInsertionMode(),e._processToken(t)):De(e,t)},j[k][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.CAPTION||n===T.TABLE||n===T.TBODY||n===T.TFOOT||n===T.THEAD||n===T.TR||n===T.TD||n===T.TH?e.openElements.hasInTableScope(n)&&(e.openElements.popUntilTagNamePopped(T.SELECT),e._resetInsertionMode(),e._processToken(t)):ke(e,t)},j[k][r.EOF_TOKEN]=Re,j[H]=Object.create(null),j[H][r.CHARACTER_TOKEN]=pe,j[H][r.NULL_CHARACTER_TOKEN]=J,j[H][r.WHITESPACE_CHARACTER_TOKEN]=le,j[H][r.COMMENT_TOKEN]=$,j[H][r.DOCTYPE_TOKEN]=J,j[H][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;if(n===T.BASE||n===T.BASEFONT||n===T.BGSOUND||n===T.LINK||n===T.META||n===T.NOFRAMES||n===T.SCRIPT||n===T.STYLE||n===T.TEMPLATE||n===T.TITLE)se(e,t);else{var r=K[n]||v;e._popTmplInsertionMode(),e._pushTmplInsertionMode(r),e.insertionMode=r,e._processToken(t)}},j[H][r.END_TAG_TOKEN]=function(e,t){t.tagName===T.TEMPLATE&&ae(e,t)},j[H][r.EOF_TOKEN]=He,j[w]=Object.create(null),j[w][r.CHARACTER_TOKEN]=j[w][r.NULL_CHARACTER_TOKEN]=we,j[w][r.WHITESPACE_CHARACTER_TOKEN]=le,j[w][r.COMMENT_TOKEN]=function(e,t){e._appendCommentNode(t,e.openElements.items[0])},j[w][r.DOCTYPE_TOKEN]=J,j[w][r.START_TAG_TOKEN]=function(e,t){t.tagName===T.HTML?Ne(e,t):we(e,t)},j[w][r.END_TAG_TOKEN]=function(e,t){t.tagName===T.HTML?e.fragmentContext||(e.insertionMode=F):we(e,t)},j[w][r.EOF_TOKEN]=ne,j[U]=Object.create(null),j[U][r.CHARACTER_TOKEN]=j[U][r.NULL_CHARACTER_TOKEN]=J,j[U][r.WHITESPACE_CHARACTER_TOKEN]=te,j[U][r.COMMENT_TOKEN]=$,j[U][r.DOCTYPE_TOKEN]=J,j[U][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.FRAMESET?e._insertElement(t,f.HTML):n===T.FRAME?e._appendElement(t,f.HTML):n===T.NOFRAMES&&se(e,t)},j[U][r.END_TAG_TOKEN]=function(e,t){t.tagName!==T.FRAMESET||e.openElements.isRootHtmlElementCurrent()||(e.openElements.pop(),e.fragmentContext||e.openElements.currentTagName===T.FRAMESET||(e.insertionMode=x))},j[U][r.EOF_TOKEN]=ne,j[x]=Object.create(null),j[x][r.CHARACTER_TOKEN]=j[x][r.NULL_CHARACTER_TOKEN]=J,j[x][r.WHITESPACE_CHARACTER_TOKEN]=te,j[x][r.COMMENT_TOKEN]=$,j[x][r.DOCTYPE_TOKEN]=J,j[x][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.NOFRAMES&&se(e,t)},j[x][r.END_TAG_TOKEN]=function(e,t){t.tagName===T.HTML&&(e.insertionMode=B)},j[x][r.EOF_TOKEN]=ne,j[F]=Object.create(null),j[F][r.CHARACTER_TOKEN]=Ue,j[F][r.NULL_CHARACTER_TOKEN]=Ue,j[F][r.WHITESPACE_CHARACTER_TOKEN]=le,j[F][r.COMMENT_TOKEN]=ee,j[F][r.DOCTYPE_TOKEN]=J,j[F][r.START_TAG_TOKEN]=function(e,t){t.tagName===T.HTML?Ne(e,t):Ue(e,t)},j[F][r.END_TAG_TOKEN]=Ue,j[F][r.EOF_TOKEN]=ne,j[B]=Object.create(null),j[B][r.CHARACTER_TOKEN]=j[B][r.NULL_CHARACTER_TOKEN]=J,j[B][r.WHITESPACE_CHARACTER_TOKEN]=le,j[B][r.COMMENT_TOKEN]=ee,j[B][r.DOCTYPE_TOKEN]=J,j[B][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.NOFRAMES&&se(e,t)},j[B][r.END_TAG_TOKEN]=J,j[B][r.EOF_TOKEN]=ne;var Y=e.exports=function(e){this.options=l(d,e),this.treeAdapter=this.options.treeAdapter,this.pendingScript=null,this.options.locationInfo&&s.assign(this)};function q(e,t){var n=e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);return n?e.openElements.contains(n.element)?e.openElements.hasInScope(t.tagName)||(n=null):(e.activeFormattingElements.removeEntry(n),n=null):Ce(e,t),n}function Q(e,t){for(var n=null,r=e.openElements.stackTop;r>=0;r--){var o=e.openElements.items[r];if(o===t.element)break;e._isSpecialElement(o)&&(n=o)}return n||(e.openElements.popUntilElementPopped(t.element),e.activeFormattingElements.removeEntry(t)),n}function z(e,t,n){for(var r=t,o=e.openElements.getCommonAncestor(t),i=0,s=o;s!==n;i++,s=o){o=e.openElements.getCommonAncestor(s);var a=e.activeFormattingElements.getElementEntry(s),u=a&&i>=A;!a||u?(u&&e.activeFormattingElements.removeEntry(a),e.openElements.remove(s)):(s=W(e,a),r===t&&(e.activeFormattingElements.bookmark=a),e.treeAdapter.detachNode(r),e.treeAdapter.appendChild(s,r),r=s)}return r}function W(e,t){var n=e.treeAdapter.getNamespaceURI(t.element),r=e.treeAdapter.createElement(t.token.tagName,n,t.token.attrs);return e.openElements.replace(t.element,r),t.element=r,r}function V(e,t,n){if(e._isElementCausesFosterParenting(t))e._fosterParentElement(n);else{var r=e.treeAdapter.getTagName(t),o=e.treeAdapter.getNamespaceURI(t);r===T.TEMPLATE&&o===f.HTML&&(t=e.treeAdapter.getTemplateContent(t)),e.treeAdapter.appendChild(t,n)}}function X(e,t,n){var r=e.treeAdapter.getNamespaceURI(n.element),o=n.token,i=e.treeAdapter.createElement(o.tagName,r,o.attrs);e._adoptNodes(t,i),e.treeAdapter.appendChild(t,i),e.activeFormattingElements.insertElementAfterBookmark(i,n.token),e.activeFormattingElements.removeEntry(n),e.openElements.remove(n.element),e.openElements.insertAfter(t,i)}function Z(e,t){for(var n,r=0;r<_&&(n=q(e,t));r++){var o=Q(e,n);if(!o)break;e.activeFormattingElements.bookmark=n;var i=z(e,o,n.element),s=e.openElements.getCommonAncestor(n.element);e.treeAdapter.detachNode(i),V(e,s,i),X(e,o,n)}}function J(){}function $(e,t){e._appendCommentNode(t,e.openElements.currentTmplContent||e.openElements.current)}function ee(e,t){e._appendCommentNode(t,e.document)}function te(e,t){e._insertCharacters(t)}function ne(e){e.stopped=!0}function re(e,t){e.treeAdapter.setDocumentMode(e.document,h.DOCUMENT_MODE.QUIRKS),e.insertionMode=y,e._processToken(t)}function oe(e,t){e._insertFakeRootElement(),e.insertionMode=g,e._processToken(t)}function ie(e,t){e._insertFakeElement(T.HEAD),e.headElement=e.openElements.current,e.insertionMode=N,e._processToken(t)}function se(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.BASE||n===T.BASEFONT||n===T.BGSOUND||n===T.LINK||n===T.META?e._appendElement(t,f.HTML):n===T.TITLE?e._switchToTextParsing(t,r.MODE.RCDATA):n===T.NOSCRIPT||n===T.NOFRAMES||n===T.STYLE?e._switchToTextParsing(t,r.MODE.RAWTEXT):n===T.SCRIPT?e._switchToTextParsing(t,r.MODE.SCRIPT_DATA):n===T.TEMPLATE?(e._insertTemplate(t,f.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1,e.insertionMode=H,e._pushTmplInsertionMode(H)):n!==T.HEAD&&ue(e,t)}function ae(e,t){var n=t.tagName;n===T.HEAD?(e.openElements.pop(),e.insertionMode=S):n===T.BODY||n===T.BR||n===T.HTML?ue(e,t):n===T.TEMPLATE&&e.openElements.tmplCount>0&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(T.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode())}function ue(e,t){e.openElements.pop(),e.insertionMode=S,e._processToken(t)}function ce(e,t){e._insertFakeElement(T.BODY),e.insertionMode=v,e._processToken(t)}function le(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t)}function pe(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t),e.framesetOk=!1}function he(e,t){e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e._insertElement(t,f.HTML)}function Te(e,t){e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e._insertElement(t,f.HTML),e.skipNextNewLine=!0,e.framesetOk=!1}function fe(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t)}function me(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1}function de(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,f.HTML),e.framesetOk=!1}function Ee(e,t){e._appendElement(t,f.HTML)}function _e(e,t){e._switchToTextParsing(t,r.MODE.RAWTEXT)}function Ae(e,t){e.openElements.currentTagName===T.OPTION&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML)}function ye(e,t){e.openElements.hasInScope(T.RUBY)&&e.openElements.generateImpliedEndTags(),e._insertElement(t,f.HTML)}function ge(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML)}function Ne(e,t){var n=t.tagName;switch(n.length){case 1:n===T.I||n===T.S||n===T.B||n===T.U?fe(e,t):n===T.P?he(e,t):n===T.A?function(e,t){var n=e.activeFormattingElements.getElementEntryInScopeWithTagName(T.A);n&&(Z(e,t),e.openElements.remove(n.element),e.activeFormattingElements.removeEntry(n)),e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t)}(e,t):ge(e,t);break;case 2:n===T.DL||n===T.OL||n===T.UL?he(e,t):n===T.H1||n===T.H2||n===T.H3||n===T.H4||n===T.H5||n===T.H6?function(e,t){e.openElements.hasInButtonScope(T.P)&&e._closePElement();var n=e.openElements.currentTagName;n!==T.H1&&n!==T.H2&&n!==T.H3&&n!==T.H4&&n!==T.H5&&n!==T.H6||e.openElements.pop(),e._insertElement(t,f.HTML)}(e,t):n===T.LI||n===T.DD||n===T.DT?function(e,t){e.framesetOk=!1;for(var n=t.tagName,r=e.openElements.stackTop;r>=0;r--){var o=e.openElements.items[r],i=e.treeAdapter.getTagName(o),s=null;if(n===T.LI&&i===T.LI?s=T.LI:n!==T.DD&&n!==T.DT||i!==T.DD&&i!==T.DT||(s=i),s){e.openElements.generateImpliedEndTagsWithExclusion(s),e.openElements.popUntilTagNamePopped(s);break}if(i!==T.ADDRESS&&i!==T.DIV&&i!==T.P&&e._isSpecialElement(o))break}e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e._insertElement(t,f.HTML)}(e,t):n===T.EM||n===T.TT?fe(e,t):n===T.BR?de(e,t):n===T.HR?function(e,t){e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e.openElements.currentTagName===T.MENUITEM&&e.openElements.pop(),e._appendElement(t,f.HTML),e.framesetOk=!1}(e,t):n===T.RB?ye(e,t):n===T.RT||n===T.RP?function(e,t){e.openElements.hasInScope(T.RUBY)&&e.openElements.generateImpliedEndTagsWithExclusion(T.RTC),e._insertElement(t,f.HTML)}(e,t):n!==T.TH&&n!==T.TD&&n!==T.TR&&ge(e,t);break;case 3:n===T.DIV||n===T.DIR||n===T.NAV?he(e,t):n===T.PRE?Te(e,t):n===T.BIG?fe(e,t):n===T.IMG||n===T.WBR?de(e,t):n===T.XMP?function(e,t){e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e._reconstructActiveFormattingElements(),e.framesetOk=!1,e._switchToTextParsing(t,r.MODE.RAWTEXT)}(e,t):n===T.SVG?function(e,t){e._reconstructActiveFormattingElements(),c.adjustTokenSVGAttrs(t),c.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,f.SVG):e._insertElement(t,f.SVG)}(e,t):n===T.RTC?ye(e,t):n!==T.COL&&ge(e,t);break;case 4:n===T.HTML?function(e,t){0===e.openElements.tmplCount&&e.treeAdapter.adoptAttributes(e.openElements.items[0],t.attrs)}(e,t):n===T.BASE||n===T.LINK||n===T.META?se(e,t):n===T.BODY?function(e,t){var n=e.openElements.tryPeekProperlyNestedBodyElement();n&&0===e.openElements.tmplCount&&(e.framesetOk=!1,e.treeAdapter.adoptAttributes(n,t.attrs))}(e,t):n===T.MAIN?he(e,t):n===T.FORM?function(e,t){var n=e.openElements.tmplCount>0;e.formElement&&!n||(e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e._insertElement(t,f.HTML),n||(e.formElement=e.openElements.current))}(e,t):n===T.CODE||n===T.FONT?fe(e,t):n===T.NOBR?function(e,t){e._reconstructActiveFormattingElements(),e.openElements.hasInScope(T.NOBR)&&(Z(e,t),e._reconstructActiveFormattingElements()),e._insertElement(t,f.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t)}(e,t):n===T.AREA?de(e,t):n===T.MATH?function(e,t){e._reconstructActiveFormattingElements(),c.adjustTokenMathMLAttrs(t),c.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,f.MATHML):e._insertElement(t,f.MATHML)}(e,t):n===T.MENU?function(e,t){e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e.openElements.currentTagName===T.MENUITEM&&e.openElements.pop(),e._insertElement(t,f.HTML)}(e,t):n!==T.HEAD&&ge(e,t);break;case 5:n===T.STYLE||n===T.TITLE?se(e,t):n===T.ASIDE?he(e,t):n===T.SMALL?fe(e,t):n===T.TABLE?function(e,t){e.treeAdapter.getDocumentMode(e.document)!==h.DOCUMENT_MODE.QUIRKS&&e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e._insertElement(t,f.HTML),e.framesetOk=!1,e.insertionMode=O}(e,t):n===T.EMBED?de(e,t):n===T.INPUT?function(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,f.HTML);var n=r.getTokenAttr(t,m.TYPE);n&&n.toLowerCase()===E||(e.framesetOk=!1)}(e,t):n===T.PARAM||n===T.TRACK?Ee(e,t):n===T.IMAGE?function(e,t){t.tagName=T.IMG,de(e,t)}(e,t):n!==T.FRAME&&n!==T.TBODY&&n!==T.TFOOT&&n!==T.THEAD&&ge(e,t);break;case 6:n===T.SCRIPT?se(e,t):n===T.CENTER||n===T.FIGURE||n===T.FOOTER||n===T.HEADER||n===T.HGROUP?he(e,t):n===T.BUTTON?function(e,t){e.openElements.hasInScope(T.BUTTON)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(T.BUTTON)),e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML),e.framesetOk=!1}(e,t):n===T.STRIKE||n===T.STRONG?fe(e,t):n===T.APPLET||n===T.OBJECT?me(e,t):n===T.KEYGEN?de(e,t):n===T.SOURCE?Ee(e,t):n===T.IFRAME?function(e,t){e.framesetOk=!1,e._switchToTextParsing(t,r.MODE.RAWTEXT)}(e,t):n===T.SELECT?function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML),e.framesetOk=!1,e.insertionMode===O||e.insertionMode===I||e.insertionMode===L||e.insertionMode===P||e.insertionMode===b?e.insertionMode=k:e.insertionMode=D}(e,t):n===T.OPTION?Ae(e,t):ge(e,t);break;case 7:n===T.BGSOUND?se(e,t):n===T.DETAILS||n===T.ADDRESS||n===T.ARTICLE||n===T.SECTION||n===T.SUMMARY?he(e,t):n===T.LISTING?Te(e,t):n===T.MARQUEE?me(e,t):n===T.NOEMBED?_e(e,t):n!==T.CAPTION&&ge(e,t);break;case 8:n===T.BASEFONT?se(e,t):n===T.MENUITEM?function(e,t){e.openElements.currentTagName===T.MENUITEM&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,f.HTML)}(e,t):n===T.FRAMESET?function(e,t){var n=e.openElements.tryPeekProperlyNestedBodyElement();e.framesetOk&&n&&(e.treeAdapter.detachNode(n),e.openElements.popAllUpToHtmlElement(),e._insertElement(t,f.HTML),e.insertionMode=U)}(e,t):n===T.FIELDSET?he(e,t):n===T.TEXTAREA?function(e,t){e._insertElement(t,f.HTML),e.skipNextNewLine=!0,e.tokenizer.state=r.MODE.RCDATA,e.originalInsertionMode=e.insertionMode,e.framesetOk=!1,e.insertionMode=C}(e,t):n===T.TEMPLATE?se(e,t):n===T.NOSCRIPT?_e(e,t):n===T.OPTGROUP?Ae(e,t):n!==T.COLGROUP&&ge(e,t);break;case 9:n===T.PLAINTEXT?function(e,t){e.openElements.hasInButtonScope(T.P)&&e._closePElement(),e._insertElement(t,f.HTML),e.tokenizer.state=r.MODE.PLAINTEXT}(e,t):ge(e,t);break;case 10:n===T.BLOCKQUOTE||n===T.FIGCAPTION?he(e,t):ge(e,t);break;default:ge(e,t)}}function Se(e,t){var n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n))}function ve(e,t){var n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker())}function Ce(e,t){for(var n=t.tagName,r=e.openElements.stackTop;r>0;r--){var o=e.openElements.items[r];if(e.treeAdapter.getTagName(o)===n){e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilElementPopped(o);break}if(e._isSpecialElement(o))break}}function Oe(e,t){var n=t.tagName;switch(n.length){case 1:n===T.A||n===T.B||n===T.I||n===T.S||n===T.U?Z(e,t):n===T.P?function(e){e.openElements.hasInButtonScope(T.P)||e._insertFakeElement(T.P),e._closePElement()}(e):Ce(e,t);break;case 2:n===T.DL||n===T.UL||n===T.OL?Se(e,t):n===T.LI?function(e){e.openElements.hasInListItemScope(T.LI)&&(e.openElements.generateImpliedEndTagsWithExclusion(T.LI),e.openElements.popUntilTagNamePopped(T.LI))}(e):n===T.DD||n===T.DT?function(e,t){var n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilTagNamePopped(n))}(e,t):n===T.H1||n===T.H2||n===T.H3||n===T.H4||n===T.H5||n===T.H6?function(e){e.openElements.hasNumberedHeaderInScope()&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilNumberedHeaderPopped())}(e):n===T.BR?function(e){e._reconstructActiveFormattingElements(),e._insertFakeElement(T.BR),e.openElements.pop(),e.framesetOk=!1}(e):n===T.EM||n===T.TT?Z(e,t):Ce(e,t);break;case 3:n===T.BIG?Z(e,t):n===T.DIR||n===T.DIV||n===T.NAV?Se(e,t):Ce(e,t);break;case 4:n===T.BODY?function(e){e.openElements.hasInScope(T.BODY)&&(e.insertionMode=w)}(e):n===T.HTML?function(e,t){e.openElements.hasInScope(T.BODY)&&(e.insertionMode=w,e._processToken(t))}(e,t):n===T.FORM?function(e){var t=e.openElements.tmplCount>0,n=e.formElement;t||(e.formElement=null),(n||t)&&e.openElements.hasInScope(T.FORM)&&(e.openElements.generateImpliedEndTags(),t?e.openElements.popUntilTagNamePopped(T.FORM):e.openElements.remove(n))}(e):n===T.CODE||n===T.FONT||n===T.NOBR?Z(e,t):n===T.MAIN||n===T.MENU?Se(e,t):Ce(e,t);break;case 5:n===T.ASIDE?Se(e,t):n===T.SMALL?Z(e,t):Ce(e,t);break;case 6:n===T.CENTER||n===T.FIGURE||n===T.FOOTER||n===T.HEADER||n===T.HGROUP?Se(e,t):n===T.APPLET||n===T.OBJECT?ve(e,t):n===T.STRIKE||n===T.STRONG?Z(e,t):Ce(e,t);break;case 7:n===T.ADDRESS||n===T.ARTICLE||n===T.DETAILS||n===T.SECTION||n===T.SUMMARY?Se(e,t):n===T.MARQUEE?ve(e,t):Ce(e,t);break;case 8:n===T.FIELDSET?Se(e,t):n===T.TEMPLATE?ae(e,t):Ce(e,t);break;case 10:n===T.BLOCKQUOTE||n===T.FIGCAPTION?Se(e,t):Ce(e,t);break;default:Ce(e,t)}}function Re(e,t){e.tmplInsertionModeStackTop>-1?He(e,t):e.stopped=!0}function Ie(e,t){var n=e.openElements.currentTagName;n===T.TABLE||n===T.TBODY||n===T.TFOOT||n===T.THEAD||n===T.TR?(e.pendingCharacterTokens=[],e.hasNonWhitespacePendingCharacterToken=!1,e.originalInsertionMode=e.insertionMode,e.insertionMode=R,e._processToken(t)):Pe(e,t)}function Me(e,t){var n=t.tagName;switch(n.length){case 2:n===T.TD||n===T.TH||n===T.TR?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(T.TBODY),e.insertionMode=L,e._processToken(t)}(e,t):Pe(e,t);break;case 3:n===T.COL?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(T.COLGROUP),e.insertionMode=M,e._processToken(t)}(e,t):Pe(e,t);break;case 4:n===T.FORM?function(e,t){e.formElement||0!==e.openElements.tmplCount||(e._insertElement(t,f.HTML),e.formElement=e.openElements.current,e.openElements.pop())}(e,t):Pe(e,t);break;case 5:n===T.TABLE?function(e,t){e.openElements.hasInTableScope(T.TABLE)&&(e.openElements.popUntilTagNamePopped(T.TABLE),e._resetInsertionMode(),e._processToken(t))}(e,t):n===T.STYLE?se(e,t):n===T.TBODY||n===T.TFOOT||n===T.THEAD?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,f.HTML),e.insertionMode=L}(e,t):n===T.INPUT?function(e,t){var n=r.getTokenAttr(t,m.TYPE);n&&n.toLowerCase()===E?e._appendElement(t,f.HTML):Pe(e,t)}(e,t):Pe(e,t);break;case 6:n===T.SCRIPT?se(e,t):Pe(e,t);break;case 7:n===T.CAPTION?function(e,t){e.openElements.clearBackToTableContext(),e.activeFormattingElements.insertMarker(),e._insertElement(t,f.HTML),e.insertionMode=I}(e,t):Pe(e,t);break;case 8:n===T.COLGROUP?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,f.HTML),e.insertionMode=M}(e,t):n===T.TEMPLATE?se(e,t):Pe(e,t);break;default:Pe(e,t)}}function Le(e,t){var n=t.tagName;n===T.TABLE?e.openElements.hasInTableScope(T.TABLE)&&(e.openElements.popUntilTagNamePopped(T.TABLE),e._resetInsertionMode()):n===T.TEMPLATE?ae(e,t):n!==T.BODY&&n!==T.CAPTION&&n!==T.COL&&n!==T.COLGROUP&&n!==T.HTML&&n!==T.TBODY&&n!==T.TD&&n!==T.TFOOT&&n!==T.TH&&n!==T.THEAD&&n!==T.TR&&Pe(e,t)}function Pe(e,t){var n=e.fosterParentingEnabled;e.fosterParentingEnabled=!0,e._processTokenInBodyMode(t),e.fosterParentingEnabled=n}function be(e,t){e.openElements.currentTagName===T.COLGROUP&&(e.openElements.pop(),e.insertionMode=O,e._processToken(t))}function De(e,t){var n=t.tagName;n===T.HTML?Ne(e,t):n===T.OPTION?(e.openElements.currentTagName===T.OPTION&&e.openElements.pop(),e._insertElement(t,f.HTML)):n===T.OPTGROUP?(e.openElements.currentTagName===T.OPTION&&e.openElements.pop(),e.openElements.currentTagName===T.OPTGROUP&&e.openElements.pop(),e._insertElement(t,f.HTML)):n===T.INPUT||n===T.KEYGEN||n===T.TEXTAREA||n===T.SELECT?e.openElements.hasInSelectScope(T.SELECT)&&(e.openElements.popUntilTagNamePopped(T.SELECT),e._resetInsertionMode(),n!==T.SELECT&&e._processToken(t)):n!==T.SCRIPT&&n!==T.TEMPLATE||se(e,t)}function ke(e,t){var n=t.tagName;if(n===T.OPTGROUP){var r=e.openElements.items[e.openElements.stackTop-1],o=r&&e.treeAdapter.getTagName(r);e.openElements.currentTagName===T.OPTION&&o===T.OPTGROUP&&e.openElements.pop(),e.openElements.currentTagName===T.OPTGROUP&&e.openElements.pop()}else n===T.OPTION?e.openElements.currentTagName===T.OPTION&&e.openElements.pop():n===T.SELECT&&e.openElements.hasInSelectScope(T.SELECT)?(e.openElements.popUntilTagNamePopped(T.SELECT),e._resetInsertionMode()):n===T.TEMPLATE&&ae(e,t)}function He(e,t){e.openElements.tmplCount>0?(e.openElements.popUntilTagNamePopped(T.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode(),e._processToken(t)):e.stopped=!0}function we(e,t){e.insertionMode=v,e._processToken(t)}function Ue(e,t){e.insertionMode=v,e._processToken(t)}Y.prototype.parse=function(e){var t=this.treeAdapter.createDocument();return this._bootstrap(t,null),this.tokenizer.write(e,!0),this._runParsingLoop(null),t},Y.prototype.parseFragment=function(e,t){t||(t=this.treeAdapter.createElement(T.TEMPLATE,f.HTML,[]));var n=this.treeAdapter.createElement("documentmock",f.HTML,[]);this._bootstrap(n,t),this.treeAdapter.getTagName(t)===T.TEMPLATE&&this._pushTmplInsertionMode(H),this._initTokenizerForFragmentParsing(),this._insertFakeRootElement(),this._resetInsertionMode(),this._findFormInFragmentContext(),this.tokenizer.write(e,!0),this._runParsingLoop(null);var r=this.treeAdapter.getFirstChild(n),o=this.treeAdapter.createDocumentFragment();return this._adoptNodes(r,o),o},Y.prototype._bootstrap=function(e,t){this.tokenizer=new r(this.options),this.stopped=!1,this.insertionMode="INITIAL_MODE",this.originalInsertionMode="",this.document=e,this.fragmentContext=t,this.headElement=null,this.formElement=null,this.openElements=new o(this.document,this.treeAdapter),this.activeFormattingElements=new i(this.treeAdapter),this.tmplInsertionModeStack=[],this.tmplInsertionModeStackTop=-1,this.currentTmplInsertionMode=null,this.pendingCharacterTokens=[],this.hasNonWhitespacePendingCharacterToken=!1,this.framesetOk=!0,this.skipNextNewLine=!1,this.fosterParentingEnabled=!1},Y.prototype._runParsingLoop=function(e){for(;!this.stopped;){this._setupTokenizerCDATAMode();var t=this.tokenizer.getNextToken();if(t.type===r.HIBERNATION_TOKEN)break;if(this.skipNextNewLine&&(this.skipNextNewLine=!1,t.type===r.WHITESPACE_CHARACTER_TOKEN&&"\n"===t.chars[0])){if(1===t.chars.length)continue;t.chars=t.chars.substr(1)}if(this._processInputToken(t),e&&this.pendingScript)break}},Y.prototype.runParsingLoopForCurrentChunk=function(e,t){if(this._runParsingLoop(t),t&&this.pendingScript){var n=this.pendingScript;return this.pendingScript=null,void t(n)}e&&e()},Y.prototype._setupTokenizerCDATAMode=function(){var e=this._getAdjustedCurrentElement();this.tokenizer.allowCDATA=e&&e!==this.document&&this.treeAdapter.getNamespaceURI(e)!==f.HTML&&!this._isIntegrationPoint(e)},Y.prototype._switchToTextParsing=function(e,t){this._insertElement(e,f.HTML),this.tokenizer.state=t,this.originalInsertionMode=this.insertionMode,this.insertionMode=C},Y.prototype.switchToPlaintextParsing=function(){this.insertionMode=C,this.originalInsertionMode=v,this.tokenizer.state=r.MODE.PLAINTEXT},Y.prototype._getAdjustedCurrentElement=function(){return 0===this.openElements.stackTop&&this.fragmentContext?this.fragmentContext:this.openElements.current},Y.prototype._findFormInFragmentContext=function(){var e=this.fragmentContext;do{if(this.treeAdapter.getTagName(e)===T.FORM){this.formElement=e;break}e=this.treeAdapter.getParentNode(e)}while(e)},Y.prototype._initTokenizerForFragmentParsing=function(){if(this.treeAdapter.getNamespaceURI(this.fragmentContext)===f.HTML){var e=this.treeAdapter.getTagName(this.fragmentContext);e===T.TITLE||e===T.TEXTAREA?this.tokenizer.state=r.MODE.RCDATA:e===T.STYLE||e===T.XMP||e===T.IFRAME||e===T.NOEMBED||e===T.NOFRAMES||e===T.NOSCRIPT?this.tokenizer.state=r.MODE.RAWTEXT:e===T.SCRIPT?this.tokenizer.state=r.MODE.SCRIPT_DATA:e===T.PLAINTEXT&&(this.tokenizer.state=r.MODE.PLAINTEXT)}},Y.prototype._setDocumentType=function(e){this.treeAdapter.setDocumentType(this.document,e.name,e.publicId,e.systemId)},Y.prototype._attachElementToTree=function(e){if(this._shouldFosterParentOnInsertion())this._fosterParentElement(e);else{var t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.appendChild(t,e)}},Y.prototype._appendElement=function(e,t){var n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n)},Y.prototype._insertElement=function(e,t){var n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n),this.openElements.push(n)},Y.prototype._insertFakeElement=function(e){var t=this.treeAdapter.createElement(e,f.HTML,[]);this._attachElementToTree(t),this.openElements.push(t)},Y.prototype._insertTemplate=function(e){var t=this.treeAdapter.createElement(e.tagName,f.HTML,e.attrs),n=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(t,n),this._attachElementToTree(t),this.openElements.push(t)},Y.prototype._insertFakeRootElement=function(){var e=this.treeAdapter.createElement(T.HTML,f.HTML,[]);this.treeAdapter.appendChild(this.openElements.current,e),this.openElements.push(e)},Y.prototype._appendCommentNode=function(e,t){var n=this.treeAdapter.createCommentNode(e.data);this.treeAdapter.appendChild(t,n)},Y.prototype._insertCharacters=function(e){if(this._shouldFosterParentOnInsertion())this._fosterParentText(e.chars);else{var t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.insertText(t,e.chars)}},Y.prototype._adoptNodes=function(e,t){for(;;){var n=this.treeAdapter.getFirstChild(e);if(!n)break;this.treeAdapter.detachNode(n),this.treeAdapter.appendChild(t,n)}},Y.prototype._shouldProcessTokenInForeignContent=function(e){var t=this._getAdjustedCurrentElement();if(!t||t===this.document)return!1;var n=this.treeAdapter.getNamespaceURI(t);if(n===f.HTML)return!1;if(this.treeAdapter.getTagName(t)===T.ANNOTATION_XML&&n===f.MATHML&&e.type===r.START_TAG_TOKEN&&e.tagName===T.SVG)return!1;var o=e.type===r.CHARACTER_TOKEN||e.type===r.NULL_CHARACTER_TOKEN||e.type===r.WHITESPACE_CHARACTER_TOKEN;return(!(e.type===r.START_TAG_TOKEN&&e.tagName!==T.MGLYPH&&e.tagName!==T.MALIGNMARK)&&!o||!this._isIntegrationPoint(t,f.MATHML))&&((e.type!==r.START_TAG_TOKEN&&!o||!this._isIntegrationPoint(t,f.HTML))&&e.type!==r.EOF_TOKEN)},Y.prototype._processToken=function(e){j[this.insertionMode][e.type](this,e)},Y.prototype._processTokenInBodyMode=function(e){j[v][e.type](this,e)},Y.prototype._processTokenInForeignContent=function(e){e.type===r.CHARACTER_TOKEN?function(e,t){e._insertCharacters(t),e.framesetOk=!1}(this,e):e.type===r.NULL_CHARACTER_TOKEN?function(e,t){t.chars=p.REPLACEMENT_CHARACTER,e._insertCharacters(t)}(this,e):e.type===r.WHITESPACE_CHARACTER_TOKEN?te(this,e):e.type===r.COMMENT_TOKEN?$(this,e):e.type===r.START_TAG_TOKEN?function(e,t){if(c.causesExit(t)&&!e.fragmentContext){for(;e.treeAdapter.getNamespaceURI(e.openElements.current)!==f.HTML&&!e._isIntegrationPoint(e.openElements.current);)e.openElements.pop();e._processToken(t)}else{var n=e._getAdjustedCurrentElement(),r=e.treeAdapter.getNamespaceURI(n);r===f.MATHML?c.adjustTokenMathMLAttrs(t):r===f.SVG&&(c.adjustTokenSVGTagName(t),c.adjustTokenSVGAttrs(t)),c.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,r):e._insertElement(t,r)}}(this,e):e.type===r.END_TAG_TOKEN&&function(e,t){for(var n=e.openElements.stackTop;n>0;n--){var r=e.openElements.items[n];if(e.treeAdapter.getNamespaceURI(r)===f.HTML){e._processToken(t);break}if(e.treeAdapter.getTagName(r).toLowerCase()===t.tagName){e.openElements.popUntilElementPopped(r);break}}}(this,e)},Y.prototype._processInputToken=function(e){this._shouldProcessTokenInForeignContent(e)?this._processTokenInForeignContent(e):this._processToken(e)},Y.prototype._isIntegrationPoint=function(e,t){var n=this.treeAdapter.getTagName(e),r=this.treeAdapter.getNamespaceURI(e),o=this.treeAdapter.getAttrList(e);return c.isIntegrationPoint(n,r,o,t)},Y.prototype._reconstructActiveFormattingElements=function(){var e=this.activeFormattingElements.length;if(e){var t=e,n=null;do{if(t--,(n=this.activeFormattingElements.entries[t]).type===i.MARKER_ENTRY||this.openElements.contains(n.element)){t++;break}}while(t>0);for(var r=t;r<e;r++)n=this.activeFormattingElements.entries[r],this._insertElement(n.token,this.treeAdapter.getNamespaceURI(n.element)),n.element=this.openElements.current}},Y.prototype._closeTableCell=function(){this.openElements.generateImpliedEndTags(),this.openElements.popUntilTableCellPopped(),this.activeFormattingElements.clearToLastMarker(),this.insertionMode=P},Y.prototype._closePElement=function(){this.openElements.generateImpliedEndTagsWithExclusion(T.P),this.openElements.popUntilTagNamePopped(T.P)},Y.prototype._resetInsertionMode=function(){for(var e=this.openElements.stackTop,t=!1;e>=0;e--){var n=this.openElements.items[e];0===e&&(t=!0,this.fragmentContext&&(n=this.fragmentContext));var r=this.treeAdapter.getTagName(n),o=G[r];if(o){this.insertionMode=o;break}if(!(t||r!==T.TD&&r!==T.TH)){this.insertionMode=b;break}if(!t&&r===T.HEAD){this.insertionMode=N;break}if(r===T.SELECT){this._resetInsertionModeForSelect(e);break}if(r===T.TEMPLATE){this.insertionMode=this.currentTmplInsertionMode;break}if(r===T.HTML){this.insertionMode=this.headElement?S:g;break}if(t){this.insertionMode=v;break}}},Y.prototype._resetInsertionModeForSelect=function(e){if(e>0)for(var t=e-1;t>0;t--){var n=this.openElements.items[t],r=this.treeAdapter.getTagName(n);if(r===T.TEMPLATE)break;if(r===T.TABLE)return void(this.insertionMode=k)}this.insertionMode=D},Y.prototype._pushTmplInsertionMode=function(e){this.tmplInsertionModeStack.push(e),this.tmplInsertionModeStackTop++,this.currentTmplInsertionMode=e},Y.prototype._popTmplInsertionMode=function(){this.tmplInsertionModeStack.pop(),this.tmplInsertionModeStackTop--,this.currentTmplInsertionMode=this.tmplInsertionModeStack[this.tmplInsertionModeStackTop]},Y.prototype._isElementCausesFosterParenting=function(e){var t=this.treeAdapter.getTagName(e);return t===T.TABLE||t===T.TBODY||t===T.TFOOT||t===T.THEAD||t===T.TR},Y.prototype._shouldFosterParentOnInsertion=function(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.current)},Y.prototype._findFosterParentingLocation=function(){for(var e={parent:null,beforeElement:null},t=this.openElements.stackTop;t>=0;t--){var n=this.openElements.items[t],r=this.treeAdapter.getTagName(n),o=this.treeAdapter.getNamespaceURI(n);if(r===T.TEMPLATE&&o===f.HTML){e.parent=this.treeAdapter.getTemplateContent(n);break}if(r===T.TABLE){e.parent=this.treeAdapter.getParentNode(n),e.parent?e.beforeElement=n:e.parent=this.openElements.items[t-1];break}}return e.parent||(e.parent=this.openElements.items[0]),e},Y.prototype._fosterParentElement=function(e){var t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertBefore(t.parent,e,t.beforeElement):this.treeAdapter.appendChild(t.parent,e)},Y.prototype._fosterParentText=function(e){var t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertTextBefore(t.parent,e,t.beforeElement):this.treeAdapter.insertText(t.parent,e)},Y.prototype._isSpecialElement=function(e){var t=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);return h.SPECIAL_ELEMENTS[n][t]}},function(e,t){e.exports=require("url")},function(e,t,n){e.exports=n(1)(36)},function(e,t,n){
/**
 * @license Angular v4.4.7
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
!function(e,t){"use strict";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};function r(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}
/**
 * @license Angular v4.4.7
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function o(e){switch(e.length){case 0:return new t.NoopAnimationPlayer;case 1:return e[0];default:return new t.ɵAnimationGroupPlayer(e)}}function i(e,n,r,o,i,s){void 0===i&&(i={}),void 0===s&&(s={});var a=[],u=[],c=-1,l=null;if(o.forEach(function(e){var r=e.offset,o=r==c,p=o&&l||{};Object.keys(e).forEach(function(r){var o=r,u=e[r];if("offset"!==r)switch(o=n.normalizePropertyName(o,a),u){case t.ɵPRE_STYLE:u=i[r];break;case t.AUTO_STYLE:u=s[r];break;default:u=n.normalizeStyleValue(r,o,u,a)}p[o]=u}),o||u.push(p),l=p,c=r}),a.length)throw new Error("Unable to animate due to the following errors:\n - "+a.join("\n - "));return u}function s(e,t,n,r){switch(t){case"start":e.onStart(function(){return r(n&&a(n,"start",e.totalTime))});break;case"done":e.onDone(function(){return r(n&&a(n,"done",e.totalTime))});break;case"destroy":e.onDestroy(function(){return r(n&&a(n,"destroy",e.totalTime))})}}function a(e,t,n){var r=u(e.element,e.triggerName,e.fromState,e.toState,t||e.phaseName,void 0==n?e.totalTime:n),o=e._data;return null!=o&&(r._data=o),r}function u(e,t,n,r,o,i){return void 0===o&&(o=""),void 0===i&&(i=0),{element:e,triggerName:t,fromState:n,toState:r,phaseName:o,totalTime:i}}function c(e,t,n){var r;return e instanceof Map?(r=e.get(t))||e.set(t,r=n):(r=e[t])||(r=e[t]=n),r}function l(e){var t=e.indexOf(":"),n=e.substring(1,t),r=e.substr(t+1);return[n,r]}var p=function(e,t){return!1},h=function(e,t){return!1},T=function(e,t,n){return[]};if("undefined"!=typeof Element){if(p=function(e,t){return e.contains(t)},Element.prototype.matches)h=function(e,t){return e.matches(t)};else{var f=Element.prototype,m=f.matchesSelector||f.mozMatchesSelector||f.msMatchesSelector||f.oMatchesSelector||f.webkitMatchesSelector;m&&(h=function(e,t){return m.apply(e,[t])})}T=function(e,t,n){var r=[];if(n)r.push.apply(r,e.querySelectorAll(t));else{var o=e.querySelector(t);o&&r.push(o)}return r}}var d=h,E=p,_=T,A=function(){function e(){}return e.prototype.matchesElement=function(e,t){return d(e,t)},e.prototype.containsElement=function(e,t){return E(e,t)},e.prototype.query=function(e,t,n){return _(e,t,n)},e.prototype.computeStyle=function(e,t,n){return n||""},e.prototype.animate=function(e,n,r,o,i,s){return void 0===s&&(s=[]),new t.NoopAnimationPlayer},e}(),y=function(){};y.NOOP=new A;
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var g=1e3,N=".ng-enter",S=".ng-leave",v=".ng-trigger",C=".ng-animating";function O(e){if("number"==typeof e)return e;var t=e.match(/^(-?[\.\d]+)(m?s)/);return!t||t.length<2?0:R(parseFloat(t[1]),t[2])}function R(e,t){switch(t){case"s":return e*g;default:return e}}function I(e,t,n){return e.hasOwnProperty("duration")?e:function(e,t,n){var r,o=0,i="";if("string"==typeof e){var s=e.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);if(null===s)return t.push('The provided timing value "'+e+'" is invalid.'),{duration:0,delay:0,easing:""};r=R(parseFloat(s[1]),s[2]);var a=s[3];null!=a&&(o=R(Math.floor(parseFloat(a)),s[4]));var u=s[5];u&&(i=u)}else r=e;if(!n){var c=!1,l=t.length;r<0&&(t.push("Duration values below 0 are not allowed for this animation step."),c=!0),o<0&&(t.push("Delay values below 0 are not allowed for this animation step."),c=!0),c&&t.splice(l,0,'The provided timing value "'+e+'" is invalid.')}return{duration:r,delay:o,easing:i}}(e,t,n)}function M(e,t){return void 0===t&&(t={}),Object.keys(e).forEach(function(n){t[n]=e[n]}),t}function L(e){var t={};return Array.isArray(e)?e.forEach(function(e){return P(e,!1,t)}):P(e,!1,t),t}function P(e,t,n){if(void 0===n&&(n={}),t)for(var r in e)n[r]=e[r];else M(e,n);return n}function b(e,t){e.style&&Object.keys(t).forEach(function(n){var r=B(n);e.style[r]=t[n]})}function D(e,t){e.style&&Object.keys(t).forEach(function(t){var n=B(t);e.style[n]=""})}function k(e){return Array.isArray(e)?1==e.length?e[0]:t.sequence(e):e}var H=new RegExp("{{\\s*(.+?)\\s*}}","g");function w(e){var t=[];if("string"==typeof e){for(var n=e.toString(),r=void 0;r=H.exec(n);)t.push(r[1]);H.lastIndex=0}return t}function U(e,t,n){var r=e.toString(),o=r.replace(H,function(e,r){var o=t[r];return t.hasOwnProperty(r)||(n.push("Please provide a value for the animation param "+r),o=""),o.toString()});return o==r?e:o}function x(e){for(var t=[],n=e.next();!n.done;)t.push(n.value),n=e.next();return t}var F=/-+([a-z0-9])/g;function B(e){return e.replace(F,function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e[1].toUpperCase()})}function G(e,t,n){switch(t.type){case 7:return e.visitTrigger(t,n);case 0:return e.visitState(t,n);case 1:return e.visitTransition(t,n);case 2:return e.visitSequence(t,n);case 3:return e.visitGroup(t,n);case 4:return e.visitAnimate(t,n);case 5:return e.visitKeyframes(t,n);case 6:return e.visitStyle(t,n);case 8:return e.visitReference(t,n);case 9:return e.visitAnimateChild(t,n);case 10:return e.visitAnimateRef(t,n);case 11:return e.visitQuery(t,n);case 12:return e.visitStagger(t,n);default:throw new Error("Unable to resolve animation metadata node #"+t.type)}}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var K="*";function j(e,t){var n=[];return"string"==typeof e?e.split(/\s*,\s*/).forEach(function(e){return function(e,t,n){":"==e[0]&&(e=function(e,t){switch(e){case":enter":return"void => *";case":leave":return"* => void";default:return t.push('The transition alias value "'+e+'" is not supported'),"* => *"}}(e,n));var r=e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);if(null==r||r.length<4)return n.push('The provided transition expression "'+e+'" is not supported'),t;var o=r[1],i=r[2],s=r[3];t.push(Q(o,s));var a=o==K&&s==K;"<"!=i[0]||a||t.push(Q(s,o))}(e,n,t)}):n.push(e),n}var Y=new Set;Y.add("true"),Y.add("1");var q=new Set;function Q(e,t){var n=Y.has(e)||q.has(e),r=Y.has(t)||q.has(t);return function(o,i){var s=e==K||e==o,a=t==K||t==i;return!s&&n&&"boolean"==typeof o&&(s=o?Y.has(e):q.has(e)),!a&&r&&"boolean"==typeof i&&(a=i?Y.has(t):q.has(t)),s&&a}}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */q.add("false"),q.add("0");var z=":self",W=new RegExp("s*"+z+"s*,?","g");function V(e,t){return(new J).build(e,t)}var X=new RegExp(":leave","g"),Z=new RegExp(":enter","g"),J=function(){function e(){}return e.prototype.build=function(e,t){var n=new $(t);return this._resetContextStyleTimingState(n),G(this,k(e),n)},e.prototype._resetContextStyleTimingState=function(e){e.currentQuerySelector="",e.collectedStyles={},e.collectedStyles[""]={},e.currentTime=0},e.prototype.visitTrigger=function(e,t){var n=this,r=t.queryCount=0,o=t.depCount=0,i=[],s=[];return e.definitions.forEach(function(e){if(n._resetContextStyleTimingState(t),0==e.type){var a=e,u=a.name;u.split(/\s*,\s*/).forEach(function(e){a.name=e,i.push(n.visitState(a,t))}),a.name=u}else if(1==e.type){var c=n.visitTransition(e,t);r+=c.queryCount,o+=c.depCount,s.push(c)}else t.errors.push("only state() and transition() definitions can sit inside of a trigger()")}),{type:7,name:e.name,states:i,transitions:s,queryCount:r,depCount:o,options:null}},e.prototype.visitState=function(e,t){var n=this.visitStyle(e.styles,t),r=e.options&&e.options.params||null;if(n.containsDynamicStyles){var o=new Set,i=r||{};if(n.styles.forEach(function(e){if(ee(e)){var t=e;Object.keys(t).forEach(function(e){w(t[e]).forEach(function(e){i.hasOwnProperty(e)||o.add(e)})})}}),o.size){var s=x(o.values());t.errors.push('state("'+e.name+'", ...) must define default values for all the following style substitutions: '+s.join(", "))}}return{type:0,name:e.name,style:n,options:r?{params:r}:null}},e.prototype.visitTransition=function(e,t){t.queryCount=0,t.depCount=0;var n=G(this,k(e.animation),t),r=j(e.expr,t.errors);return{type:1,matchers:r,animation:n,queryCount:t.queryCount,depCount:t.depCount,options:te(e.options)}},e.prototype.visitSequence=function(e,t){var n=this;return{type:2,steps:e.steps.map(function(e){return G(n,e,t)}),options:te(e.options)}},e.prototype.visitGroup=function(e,t){var n=this,r=t.currentTime,o=0,i=e.steps.map(function(e){t.currentTime=r;var i=G(n,e,t);return o=Math.max(o,t.currentTime),i});return t.currentTime=o,{type:3,steps:i,options:te(e.options)}},e.prototype.visitAnimate=function(e,n){var r,o=function(e,t){var n=null;if(e.hasOwnProperty("duration"))n=e;else if("number"==typeof e){var r=I(e,t).duration;return ne(r,0,"")}var o=e;if(o.split(/\s+/).some(function(e){return"{"==e.charAt(0)&&"{"==e.charAt(1)})){var i=ne(0,0,"");return i.dynamic=!0,i.strValue=o,i}return ne((n=n||I(o,t)).duration,n.delay,n.easing)}(e.timings,n.errors);n.currentAnimateTimings=o;var i=e.styles?e.styles:t.style({});if(5==i.type)r=this.visitKeyframes(i,n);else{var s=e.styles,a=!1;if(!s){a=!0;var u={};o.easing&&(u.easing=o.easing),s=t.style(u)}n.currentTime+=o.duration+o.delay;var c=this.visitStyle(s,n);c.isEmptyStep=a,r=c}return n.currentAnimateTimings=null,{type:4,timings:o,style:r,options:null}},e.prototype.visitStyle=function(e,t){var n=this._makeStyleAst(e,t);return this._validateStyleAst(n,t),n},e.prototype._makeStyleAst=function(e,n){var r=[];Array.isArray(e.styles)?e.styles.forEach(function(e){"string"==typeof e?e==t.AUTO_STYLE?r.push(e):n.errors.push("The provided style string value "+e+" is not allowed."):r.push(e)}):r.push(e.styles);var o=!1,i=null;return r.forEach(function(e){if(ee(e)){var t=e,n=t.easing;if(n&&(i=n,delete t.easing),!o)for(var r in t){var s=t[r];if(s.toString().indexOf("{{")>=0){o=!0;break}}}}),{type:6,styles:r,easing:i,offset:e.offset,containsDynamicStyles:o,options:null}},e.prototype._validateStyleAst=function(e,t){var n=t.currentAnimateTimings,r=t.currentTime,o=t.currentTime;n&&o>0&&(o-=n.duration+n.delay),e.styles.forEach(function(e){"string"!=typeof e&&Object.keys(e).forEach(function(n){var i,s,a,u,c,l=t.collectedStyles[t.currentQuerySelector],p=l[n],h=!0;p&&(o!=r&&o>=p.startTime&&r<=p.endTime&&(t.errors.push('The CSS property "'+n+'" that exists between the times of "'+p.startTime+'ms" and "'+p.endTime+'ms" is also being animated in a parallel animation between the times of "'+o+'ms" and "'+r+'ms"'),h=!1),o=p.startTime),h&&(l[n]={startTime:o,endTime:r}),t.options&&(i=e[n],s=t.options,a=t.errors,u=s.params||{},(c=w(i)).length&&c.forEach(function(e){u.hasOwnProperty(e)||a.push("Unable to resolve the local animation param "+e+" in the given list of values")}))})})},e.prototype.visitKeyframes=function(e,t){var n=this,r={type:5,styles:[],options:null};if(!t.currentAnimateTimings)return t.errors.push("keyframes() must be placed inside of a call to animate()"),r;var o=0,i=[],s=!1,a=!1,u=0,c=e.steps.map(function(e){var r=n._makeStyleAst(e,t),c=null!=r.offset?r.offset:function(e){if("string"==typeof e)return null;var t=null;if(Array.isArray(e))e.forEach(function(e){if(ee(e)&&e.hasOwnProperty("offset")){var n=e;t=parseFloat(n.offset),delete n.offset}});else if(ee(e)&&e.hasOwnProperty("offset")){var n=e;t=parseFloat(n.offset),delete n.offset}return t}(r.styles),l=0;return null!=c&&(o++,l=r.offset=c),a=a||l<0||l>1,s=s||l<u,u=l,i.push(l),r});a&&t.errors.push("Please ensure that all keyframe offsets are between 0 and 1"),s&&t.errors.push("Please ensure that all keyframe offsets are in order");var l=e.steps.length,p=0;o>0&&o<l?t.errors.push("Not all style() steps within the declared keyframes() contain offsets"):0==o&&(p=1/(l-1));var h=l-1,T=t.currentTime,f=t.currentAnimateTimings,m=f.duration;return c.forEach(function(e,o){var s=p>0?o==h?1:p*o:i[o],a=s*m;t.currentTime=T+f.delay+a,f.duration=a,n._validateStyleAst(e,t),e.offset=s,r.styles.push(e)}),r},e.prototype.visitReference=function(e,t){return{type:8,animation:G(this,k(e.animation),t),options:te(e.options)}},e.prototype.visitAnimateChild=function(e,t){return t.depCount++,{type:9,options:te(e.options)}},e.prototype.visitAnimateRef=function(e,t){return{type:10,animation:this.visitReference(e.animation,t),options:te(e.options)}},e.prototype.visitQuery=function(e,t){var n=t.currentQuerySelector,r=e.options||{};t.queryCount++,t.currentQuery=e;var o=function(e){var t=!!e.split(/\s*,\s*/).find(function(e){return e==z});return t&&(e=e.replace(W,"")),[e=e.replace(Z,N).replace(X,S).replace(/@\*/g,v).replace(/@\w+/g,function(e){return v+"-"+e.substr(1)}).replace(/:animating/g,C),t]}(e.selector),i=o[0],s=o[1];t.currentQuerySelector=n.length?n+" "+i:i,c(t.collectedStyles,t.currentQuerySelector,{});var a=G(this,k(e.animation),t);return t.currentQuery=null,t.currentQuerySelector=n,{type:11,selector:i,limit:r.limit||0,optional:!!r.optional,includeSelf:s,animation:a,originalSelector:e.selector,options:te(e.options)}},e.prototype.visitStagger=function(e,t){t.currentQuery||t.errors.push("stagger() can only be used inside of query()");var n="full"===e.timings?{duration:0,delay:0,easing:"full"}:I(e.timings,t.errors,!0);return{type:12,animation:G(this,k(e.animation),t),timings:n,options:null}},e}(),$=function(e){this.errors=e,this.queryCount=0,this.depCount=0,this.currentTransition=null,this.currentQuery=null,this.currentQuerySelector=null,this.currentAnimateTimings=null,this.currentTime=0,this.collectedStyles={},this.options=null};function ee(e){return!Array.isArray(e)&&"object"==typeof e}function te(e){var t;return e?(e=M(e)).params&&(e.params=(t=e.params)?M(t):null):e={},e}function ne(e,t,n){return{duration:e,delay:t,easing:n}}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function re(e,t,n,r,o,i,s,a){return void 0===s&&(s=null),void 0===a&&(a=!1),{type:1,element:e,keyframes:t,preStyleProps:n,postStyleProps:r,duration:o,delay:i,totalTime:o+i,easing:s,subTimeline:a}}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var oe=function(){function e(){this._map=new Map}return e.prototype.consume=function(e){var t=this._map.get(e);return t?this._map.delete(e):t=[],t},e.prototype.append=function(e,t){var n=this._map.get(e);n||this._map.set(e,n=[]),n.push.apply(n,t)},e.prototype.has=function(e){return this._map.has(e)},e.prototype.clear=function(){this._map.clear()},e}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function ie(e,t,n,r,o,i,s,a){return void 0===r&&(r={}),void 0===o&&(o={}),void 0===a&&(a=[]),(new se).buildKeyframes(e,t,n,r,o,i,s,a)}var se=function(){function e(){}return e.prototype.buildKeyframes=function(e,t,n,r,o,i,s,a){void 0===a&&(a=[]),s=s||new oe;var u=new ue(e,t,s,a,[]);u.options=i,u.currentTimeline.setStyles([r],null,u.errors,i),G(this,n,u);var c=u.timelines.filter(function(e){return e.containsAnimation()});if(c.length&&Object.keys(o).length){var l=c[c.length-1];l.allowOnlyTimelineStyles()||l.setStyles([o],null,u.errors,i)}return c.length?c.map(function(e){return e.buildKeyframes()}):[re(t,[],[],[],0,0,"",!1)]},e.prototype.visitTrigger=function(e,t){},e.prototype.visitState=function(e,t){},e.prototype.visitTransition=function(e,t){},e.prototype.visitAnimateChild=function(e,t){var n=t.subInstructions.consume(t.element);if(n){var r=t.createSubContext(e.options),o=t.currentTimeline.currentTime,i=this._visitSubInstructions(n,r,r.options);o!=i&&t.transformIntoNewTimeline(i)}t.previousNode=e},e.prototype.visitAnimateRef=function(e,t){var n=t.createSubContext(e.options);n.transformIntoNewTimeline(),this.visitReference(e.animation,n),t.transformIntoNewTimeline(n.currentTimeline.currentTime),t.previousNode=e},e.prototype._visitSubInstructions=function(e,t,n){var r=t.currentTimeline.currentTime,o=r,i=null!=n.duration?O(n.duration):null,s=null!=n.delay?O(n.delay):null;return 0!==i&&e.forEach(function(e){var n=t.appendInstructionToTimeline(e,i,s);o=Math.max(o,n.duration+n.delay)}),o},e.prototype.visitReference=function(e,t){t.updateOptions(e.options,!0),G(this,e.animation,t),t.previousNode=e},e.prototype.visitSequence=function(e,t){var n=this,r=t.subContextCount,o=t,i=e.options;if(i&&(i.params||i.delay)&&((o=t.createSubContext(i)).transformIntoNewTimeline(),null!=i.delay)){6==o.previousNode.type&&(o.currentTimeline.snapshotCurrentStyles(),o.previousNode=ae);var s=O(i.delay);o.delayNextStep(s)}e.steps.length&&(e.steps.forEach(function(e){return G(n,e,o)}),o.currentTimeline.applyStylesToKeyframe(),o.subContextCount>r&&o.transformIntoNewTimeline()),t.previousNode=e},e.prototype.visitGroup=function(e,t){var n=this,r=[],o=t.currentTimeline.currentTime,i=e.options&&e.options.delay?O(e.options.delay):0;e.steps.forEach(function(s){var a=t.createSubContext(e.options);i&&a.delayNextStep(i),G(n,s,a),o=Math.max(o,a.currentTimeline.currentTime),r.push(a.currentTimeline)}),r.forEach(function(e){return t.currentTimeline.mergeTimelineCollectedStyles(e)}),t.transformIntoNewTimeline(o),t.previousNode=e},e.prototype._visitTiming=function(e,t){if(e.dynamic){var n=e.strValue,r=t.params?U(n,t.params,t.errors):n;return I(r,t.errors)}return{duration:e.duration,delay:e.delay,easing:e.easing}},e.prototype.visitAnimate=function(e,t){var n=t.currentAnimateTimings=this._visitTiming(e.timings,t),r=t.currentTimeline;n.delay&&(t.incrementTime(n.delay),r.snapshotCurrentStyles());var o=e.style;5==o.type?this.visitKeyframes(o,t):(t.incrementTime(n.duration),this.visitStyle(o,t),r.applyStylesToKeyframe()),t.currentAnimateTimings=null,t.previousNode=e},e.prototype.visitStyle=function(e,t){var n=t.currentTimeline,r=t.currentAnimateTimings;!r&&n.getCurrentStyleProperties().length&&n.forwardFrame();var o=r&&r.easing||e.easing;e.isEmptyStep?n.applyEmptyStep(o):n.setStyles(e.styles,o,t.errors,t.options),t.previousNode=e},e.prototype.visitKeyframes=function(e,t){var n=t.currentAnimateTimings,r=t.currentTimeline.duration,o=n.duration,i=t.createSubContext(),s=i.currentTimeline;s.easing=n.easing,e.styles.forEach(function(e){var n=e.offset||0;s.forwardTime(n*o),s.setStyles(e.styles,e.easing,t.errors,t.options),s.applyStylesToKeyframe()}),t.currentTimeline.mergeTimelineCollectedStyles(s),t.transformIntoNewTimeline(r+o),t.previousNode=e},e.prototype.visitQuery=function(e,t){var n=this,r=t.currentTimeline.currentTime,o=e.options||{},i=o.delay?O(o.delay):0;i&&(6===t.previousNode.type||0==r&&t.currentTimeline.getCurrentStyleProperties().length)&&(t.currentTimeline.snapshotCurrentStyles(),t.previousNode=ae);var s=r,a=t.invokeQuery(e.selector,e.originalSelector,e.limit,e.includeSelf,!!o.optional,t.errors);t.currentQueryTotal=a.length;var u=null;a.forEach(function(r,o){t.currentQueryIndex=o;var a=t.createSubContext(e.options,r);i&&a.delayNextStep(i),r===t.element&&(u=a.currentTimeline),G(n,e.animation,a),a.currentTimeline.applyStylesToKeyframe();var c=a.currentTimeline.currentTime;s=Math.max(s,c)}),t.currentQueryIndex=0,t.currentQueryTotal=0,t.transformIntoNewTimeline(s),u&&(t.currentTimeline.mergeTimelineCollectedStyles(u),t.currentTimeline.snapshotCurrentStyles()),t.previousNode=e},e.prototype.visitStagger=function(e,t){var n=t.parentContext,r=t.currentTimeline,o=e.timings,i=Math.abs(o.duration),s=i*(t.currentQueryTotal-1),a=i*t.currentQueryIndex,u=o.duration<0?"reverse":o.easing;switch(u){case"reverse":a=s-a;break;case"full":a=n.currentStaggerTime}var c=t.currentTimeline;a&&c.delayNextStep(a);var l=c.currentTime;G(this,e.animation,t),t.previousNode=e,n.currentStaggerTime=r.currentTime-l+(r.startTime-n.currentTimeline.startTime)},e}(),ae={},ue=function(){function e(e,t,n,r,o,i){this._driver=e,this.element=t,this.subInstructions=n,this.errors=r,this.timelines=o,this.parentContext=null,this.currentAnimateTimings=null,this.previousNode=ae,this.subContextCount=0,this.options={},this.currentQueryIndex=0,this.currentQueryTotal=0,this.currentStaggerTime=0,this.currentTimeline=i||new ce(t,0),o.push(this.currentTimeline)}return Object.defineProperty(e.prototype,"params",{get:function(){return this.options.params},enumerable:!0,configurable:!0}),e.prototype.updateOptions=function(e,t){var n=this;if(e){var r=e,o=this.options;null!=r.duration&&(o.duration=O(r.duration)),null!=r.delay&&(o.delay=O(r.delay));var i=r.params;if(i){var s=o.params;s||(s=this.options.params={}),Object.keys(i).forEach(function(e){t&&s.hasOwnProperty(e)||(s[e]=U(i[e],s,n.errors))})}}},e.prototype._copyOptions=function(){var e={};if(this.options){var t=this.options.params;if(t){var n=e.params={};Object.keys(t).forEach(function(e){n[e]=t[e]})}}return e},e.prototype.createSubContext=function(t,n,r){void 0===t&&(t=null);var o=n||this.element,i=new e(this._driver,o,this.subInstructions,this.errors,this.timelines,this.currentTimeline.fork(o,r||0));return i.previousNode=this.previousNode,i.currentAnimateTimings=this.currentAnimateTimings,i.options=this._copyOptions(),i.updateOptions(t),i.currentQueryIndex=this.currentQueryIndex,i.currentQueryTotal=this.currentQueryTotal,i.parentContext=this,this.subContextCount++,i},e.prototype.transformIntoNewTimeline=function(e){return this.previousNode=ae,this.currentTimeline=this.currentTimeline.fork(this.element,e),this.timelines.push(this.currentTimeline),this.currentTimeline},e.prototype.appendInstructionToTimeline=function(e,t,n){var r={duration:null!=t?t:e.duration,delay:this.currentTimeline.currentTime+(null!=n?n:0)+e.delay,easing:""},o=new le(e.element,e.keyframes,e.preStyleProps,e.postStyleProps,r,e.stretchStartingKeyframe);return this.timelines.push(o),r},e.prototype.incrementTime=function(e){this.currentTimeline.forwardTime(this.currentTimeline.duration+e)},e.prototype.delayNextStep=function(e){e>0&&this.currentTimeline.delayNextStep(e)},e.prototype.invokeQuery=function(e,t,n,r,o,i){var s=[];if(r&&s.push(this.element),e.length>0){var a=1!=n,u=this._driver.query(this.element,e,a);0!==n&&(u=u.slice(0,n)),s.push.apply(s,u)}return o||0!=s.length||i.push('`query("'+t+'")` returned zero elements. (Use `query("'+t+'", { optional: true })` if you wish to allow this.)'),s},e}(),ce=function(){function e(e,t,n){this.element=e,this.startTime=t,this._elementTimelineStylesLookup=n,this.duration=0,this._previousKeyframe={},this._currentKeyframe={},this._keyframes=new Map,this._styleSummary={},this._pendingStyles={},this._backFill={},this._currentEmptyStepKeyframe=null,this._elementTimelineStylesLookup||(this._elementTimelineStylesLookup=new Map),this._localTimelineStyles=Object.create(this._backFill,{}),this._globalTimelineStyles=this._elementTimelineStylesLookup.get(e),this._globalTimelineStyles||(this._globalTimelineStyles=this._localTimelineStyles,this._elementTimelineStylesLookup.set(e,this._localTimelineStyles)),this._loadKeyframe()}return e.prototype.containsAnimation=function(){switch(this._keyframes.size){case 0:return!1;case 1:return this.getCurrentStyleProperties().length>0;default:return!0}},e.prototype.getCurrentStyleProperties=function(){return Object.keys(this._currentKeyframe)},Object.defineProperty(e.prototype,"currentTime",{get:function(){return this.startTime+this.duration},enumerable:!0,configurable:!0}),e.prototype.delayNextStep=function(e){var t=1==this._keyframes.size&&Object.keys(this._pendingStyles).length;this.duration||t?(this.forwardTime(this.currentTime+e),t&&this.snapshotCurrentStyles()):this.startTime+=e},e.prototype.fork=function(t,n){return this.applyStylesToKeyframe(),new e(t,n||this.currentTime,this._elementTimelineStylesLookup)},e.prototype._loadKeyframe=function(){this._currentKeyframe&&(this._previousKeyframe=this._currentKeyframe),this._currentKeyframe=this._keyframes.get(this.duration),this._currentKeyframe||(this._currentKeyframe=Object.create(this._backFill,{}),this._keyframes.set(this.duration,this._currentKeyframe))},e.prototype.forwardFrame=function(){this.duration+=1,this._loadKeyframe()},e.prototype.forwardTime=function(e){this.applyStylesToKeyframe(),this.duration=e,this._loadKeyframe()},e.prototype._updateStyle=function(e,t){this._localTimelineStyles[e]=t,this._globalTimelineStyles[e]=t,this._styleSummary[e]={time:this.currentTime,value:t}},e.prototype.allowOnlyTimelineStyles=function(){return this._currentEmptyStepKeyframe!==this._currentKeyframe},e.prototype.applyEmptyStep=function(e){var n=this;e&&(this._previousKeyframe.easing=e),Object.keys(this._globalTimelineStyles).forEach(function(e){n._backFill[e]=n._globalTimelineStyles[e]||t.AUTO_STYLE,n._currentKeyframe[e]=t.AUTO_STYLE}),this._currentEmptyStepKeyframe=this._currentKeyframe},e.prototype.setStyles=function(e,n,r,o){var i=this;n&&(this._previousKeyframe.easing=n);var s=o&&o.params||{},a=function(e,n){var r,o={};return e.forEach(function(e){"*"===e?(r=r||Object.keys(n)).forEach(function(e){o[e]=t.AUTO_STYLE}):P(e,!1,o)}),o}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */(e,this._globalTimelineStyles);Object.keys(a).forEach(function(e){var n=U(a[e],s,r);i._pendingStyles[e]=n,i._localTimelineStyles.hasOwnProperty(e)||(i._backFill[e]=i._globalTimelineStyles.hasOwnProperty(e)?i._globalTimelineStyles[e]:t.AUTO_STYLE),i._updateStyle(e,n)})},e.prototype.applyStylesToKeyframe=function(){var e=this,t=this._pendingStyles,n=Object.keys(t);0!=n.length&&(this._pendingStyles={},n.forEach(function(n){var r=t[n];e._currentKeyframe[n]=r}),Object.keys(this._localTimelineStyles).forEach(function(t){e._currentKeyframe.hasOwnProperty(t)||(e._currentKeyframe[t]=e._localTimelineStyles[t])}))},e.prototype.snapshotCurrentStyles=function(){var e=this;Object.keys(this._localTimelineStyles).forEach(function(t){var n=e._localTimelineStyles[t];e._pendingStyles[t]=n,e._updateStyle(t,n)})},e.prototype.getFinalKeyframe=function(){return this._keyframes.get(this.duration)},Object.defineProperty(e.prototype,"properties",{get:function(){var e=[];for(var t in this._currentKeyframe)e.push(t);return e},enumerable:!0,configurable:!0}),e.prototype.mergeTimelineCollectedStyles=function(e){var t=this;Object.keys(e._styleSummary).forEach(function(n){var r=t._styleSummary[n],o=e._styleSummary[n];(!r||o.time>r.time)&&t._updateStyle(n,o.value)})},e.prototype.buildKeyframes=function(){var e=this;this.applyStylesToKeyframe();var n=new Set,r=new Set,o=1===this._keyframes.size&&0===this.duration,i=[];this._keyframes.forEach(function(s,a){var u=P(s,!0);Object.keys(u).forEach(function(e){var o=u[e];o==t.ɵPRE_STYLE?n.add(e):o==t.AUTO_STYLE&&r.add(e)}),o||(u.offset=a/e.duration),i.push(u)});var s=n.size?x(n.values()):[],a=r.size?x(r.values()):[];if(o){var u=i[0],c=M(u);u.offset=0,c.offset=1,i=[u,c]}return re(this.element,i,s,a,this.duration,this.startTime,this.easing,!1)},e}(),le=function(e){function t(t,n,r,o,i,s){void 0===s&&(s=!1);var a=e.call(this,t,i.delay)||this;return a.element=t,a.keyframes=n,a.preStyleProps=r,a.postStyleProps=o,a._stretchStartingKeyframe=s,a.timings={duration:i.duration,delay:i.delay,easing:i.easing},a}return r(t,e),t.prototype.containsAnimation=function(){return this.keyframes.length>1},t.prototype.buildKeyframes=function(){var e=this.keyframes,t=this.timings,n=t.delay,r=t.duration,o=t.easing;if(this._stretchStartingKeyframe&&n){var i=[],s=r+n,a=n/s,u=P(e[0],!1);u.offset=0,i.push(u);var c=P(e[0],!1);c.offset=pe(a),i.push(c);for(var l=e.length-1,p=1;p<=l;p++){var h=P(e[p],!1),T=h.offset,f=n+T*r;h.offset=pe(f/s),i.push(h)}r=s,n=0,o="",e=i}return re(this.element,e,this.preStyleProps,this.postStyleProps,r,n,o,!0)},t}(ce);function pe(e,t){void 0===t&&(t=3);var n=Math.pow(10,t-1);return Math.round(e*n)/n}var he,Te,fe=function(){function e(e,t){this._driver=e;var n=[],r=V(t,n);if(n.length){var o="animation validation failed:\n"+n.join("\n");throw new Error(o)}this._animationAst=r}return e.prototype.buildTimelines=function(e,t,n,r,o){var i=Array.isArray(t)?L(t):t,s=Array.isArray(n)?L(n):n,a=[];o=o||new oe;var u=ie(this._driver,e,this._animationAst,i,s,r,o,a);if(a.length){var c="animation building failed:\n"+a.join("\n");throw new Error(c)}return u},e}(),me=function(){},de=function(){function e(){}return e.prototype.normalizePropertyName=function(e,t){return e},e.prototype.normalizeStyleValue=function(e,t,n,r){return n},e}(),Ee=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r(t,e),t.prototype.normalizePropertyName=function(e,t){return B(e)},t.prototype.normalizeStyleValue=function(e,t,n,r){var o="",i=n.toString().trim();if(_e[t]&&0!==n&&"0"!==n)if("number"==typeof n)o="px";else{var s=n.match(/^[+-]?[\d\.]+([a-z]*)$/);s&&0==s[1].length&&r.push("Please provide a CSS unit value for "+e+":"+n)}return i+o},t}(me),_e=(he="width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(","),Te={},he.forEach(function(e){return Te[e]=!0}),Te);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function Ae(e,t,n,r,o,i,s,a,u,c,l,p){return{type:0,element:e,triggerName:t,isRemovalTransition:o,fromState:n,fromStyles:i,toState:r,toStyles:s,timelines:a,queriedElements:u,preStyleProps:c,postStyleProps:l,errors:p}}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ye={},ge=function(){function e(e,t,n){this._triggerName=e,this.ast=t,this._stateStyles=n}return e.prototype.match=function(e,t){return function(e,t,n){return e.some(function(e){return e(t,n)})}(this.ast.matchers,e,t)},e.prototype.buildStyles=function(e,t,n){var r=this._stateStyles["*"],o=this._stateStyles[e],i=r?r.buildStyles(t,n):{};return o?o.buildStyles(t,n):i},e.prototype.build=function(e,t,n,r,o,i,s){var a=[],u=this.ast.options&&this.ast.options.params||ye,l=o&&o.params||ye,p=this.buildStyles(n,l,a),h=i&&i.params||ye,T=this.buildStyles(r,h,a),f=new Set,m=new Map,d=new Map,E="void"===r,_={params:Object.assign({},u,h)},A=ie(e,t,this.ast.animation,p,T,_,s,a);if(a.length)return Ae(t,this._triggerName,n,r,E,p,T,[],[],m,d,a);A.forEach(function(e){var n=e.element,r=c(m,n,{});e.preStyleProps.forEach(function(e){return r[e]=!0});var o=c(d,n,{});e.postStyleProps.forEach(function(e){return o[e]=!0}),n!==t&&f.add(n)});var y=x(f.values());return Ae(t,this._triggerName,n,r,E,p,T,A,y,m,d)},e}(),Ne=function(){function e(e,t){this.styles=e,this.defaultParams=t}return e.prototype.buildStyles=function(e,t){var n={},r=M(this.defaultParams);return Object.keys(e).forEach(function(t){var n=e[t];null!=n&&(r[t]=n)}),this.styles.styles.forEach(function(e){if("string"!=typeof e){var o=e;Object.keys(o).forEach(function(e){var i=o[e];i.length>1&&(i=U(i,r,t)),n[e]=i})}}),n},e}(),Se=function(){function e(e,t){var n,r,o=this;this.name=e,this.ast=t,this.transitionFactories=[],this.states={},t.states.forEach(function(e){var t=e.options&&e.options.params||{};o.states[e.name]=new Ne(e.style,t)}),ve(this.states,"true","1"),ve(this.states,"false","0"),t.transitions.forEach(function(t){o.transitionFactories.push(new ge(e,t,o.states))}),this.fallbackTransition=(n=e,r=this.states,new ge(n,{type:1,animation:{type:2,steps:[],options:null},matchers:[function(e,t){return!0}],options:null,queryCount:0,depCount:0},r))}return Object.defineProperty(e.prototype,"containsQueries",{get:function(){return this.ast.queryCount>0},enumerable:!0,configurable:!0}),e.prototype.matchTransition=function(e,t){var n=this.transitionFactories.find(function(n){return n.match(e,t)});return n||null},e.prototype.matchStyles=function(e,t,n){return this.fallbackTransition.buildStyles(e,t,n)},e}();function ve(e,t,n){e.hasOwnProperty(t)?e.hasOwnProperty(n)||(e[n]=e[t]):e.hasOwnProperty(n)&&(e[t]=e[n])}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Ce=new oe,Oe=function(){function e(e,t){this._driver=e,this._normalizer=t,this._animations={},this._playersById={},this.players=[]}return e.prototype.register=function(e,t){var n=[],r=V(t,n);if(n.length)throw new Error("Unable to build the animation due to the following errors: "+n.join("\n"));this._animations[e]=r},e.prototype._buildPlayer=function(e,t,n){var r=e.element,o=i(this._driver,this._normalizer,0,e.keyframes,t,n);return this._driver.animate(r,o,e.duration,e.delay,e.easing,[])},e.prototype.create=function(e,n,r){var i=this;void 0===r&&(r={});var s,a=[],u=this._animations[e],l=new Map;if(u?(s=ie(this._driver,n,u,{},{},r,Ce,a)).forEach(function(e){var t=c(l,e.element,{});e.postStyleProps.forEach(function(e){return t[e]=null})}):(a.push("The requested animation doesn't exist or has already been destroyed"),s=[]),a.length)throw new Error("Unable to create the animation due to the following errors: "+a.join("\n"));l.forEach(function(e,n){Object.keys(e).forEach(function(r){e[r]=i._driver.computeStyle(n,r,t.AUTO_STYLE)})});var p=s.map(function(e){var t=l.get(e.element);return i._buildPlayer(e,{},t)}),h=o(p);return this._playersById[e]=h,h.onDestroy(function(){return i.destroy(e)}),this.players.push(h),h},e.prototype.destroy=function(e){var t=this._getPlayer(e);t.destroy(),delete this._playersById[e];var n=this.players.indexOf(t);n>=0&&this.players.splice(n,1)},e.prototype._getPlayer=function(e){var t=this._playersById[e];if(!t)throw new Error("Unable to find the timeline player referenced by "+e);return t},e.prototype.listen=function(e,t,n,r){var o=u(t,"","","");return s(this._getPlayer(e),n,o,r),function(){}},e.prototype.command=function(e,t,n,r){if("register"!=n)if("create"!=n){var o=this._getPlayer(e);switch(n){case"play":o.play();break;case"pause":o.pause();break;case"reset":o.reset();break;case"restart":o.restart();break;case"finish":o.finish();break;case"init":o.init();break;case"setPosition":o.setPosition(parseFloat(r[0]));break;case"destroy":this.destroy(e)}}else{var i=r[0]||{};this.create(e,t,i)}else this.register(e,r[0])},e}(),Re=[],Ie={namespaceId:"",setForRemoval:null,hasAnimation:!1,removedBeforeQueried:!1},Me={namespaceId:"",setForRemoval:null,hasAnimation:!1,removedBeforeQueried:!0},Le="__ng_removed",Pe=function(){function e(e){var t=e&&e.hasOwnProperty("value"),n=t?e.value:e;if(this.value=function(e){return null!=e?e:null}(n),t){var r=M(e);delete r.value,this.options=r}else this.options={};this.options.params||(this.options.params={})}return Object.defineProperty(e.prototype,"params",{get:function(){return this.options.params},enumerable:!0,configurable:!0}),e.prototype.absorbOptions=function(e){var t=e.params;if(t){var n=this.options.params;Object.keys(t).forEach(function(e){null==n[e]&&(n[e]=t[e])})}},e}(),be=new Pe("void"),De=new Pe("DELETED"),ke=function(){function e(e,t,n){this.id=e,this.hostElement=t,this._engine=n,this.players=[],this._triggers={},this._queue=[],this._elementListeners=new Map,this._hostClassName="ng-tns-"+e,Ge(t,this._hostClassName)}return e.prototype.listen=function(e,t,n,r){var o,i=this;if(!this._triggers.hasOwnProperty(t))throw new Error('Unable to listen on the animation trigger event "'+n+'" because the animation trigger "'+t+"\" doesn't exist!");if(null==n||0==n.length)throw new Error('Unable to listen on the animation trigger "'+t+'" because the provided event is undefined!');if("start"!=(o=n)&&"done"!=o)throw new Error('The provided animation trigger event "'+n+'" for the animation trigger "'+t+'" is not supported!');var s=c(this._elementListeners,e,[]),a={name:t,phase:n,callback:r};s.push(a);var u=c(this._engine.statesByElement,e,{});return u.hasOwnProperty(t)||(Ge(e,"ng-trigger"),Ge(e,"ng-trigger-"+t),u[t]=null),function(){i._engine.afterFlush(function(){var e=s.indexOf(a);e>=0&&s.splice(e,1),i._triggers[t]||delete u[t]})}},e.prototype.register=function(e,t){return!this._triggers[e]&&(this._triggers[e]=t,!0)},e.prototype._getTrigger=function(e){var t=this._triggers[e];if(!t)throw new Error('The provided animation trigger "'+e+'" has not been registered!');return t},e.prototype.trigger=function(e,t,n,r){var o=this;void 0===r&&(r=!0);var i=this._getTrigger(t),s=new we(this.id,t,e),a=this._engine.statesByElement.get(e);a||(Ge(e,"ng-trigger"),Ge(e,"ng-trigger-"+t),this._engine.statesByElement.set(e,a={}));var u=a[t],l=new Pe(n),p=n&&n.hasOwnProperty("value");if(!p&&u&&l.absorbOptions(u.options),a[t]=l,u){if(u===De)return s}else u=be;var h="void"===l.value;if(h||u.value!==l.value){var T=c(this._engine.playersByElement,e,[]);T.forEach(function(e){e.namespaceId==o.id&&e.triggerName==t&&e.queued&&e.destroy()});var f=i.matchTransition(u.value,l.value),m=!1;if(!f){if(!r)return;f=i.fallbackTransition,m=!0}return this._engine.totalQueuedPlayers++,this._queue.push({element:e,triggerName:t,transition:f,fromState:u,toState:l,player:s,isFallbackTransition:m}),m||(Ge(e,"ng-animate-queued"),s.onStart(function(){Ke(e,"ng-animate-queued")})),s.onDone(function(){var t=o.players.indexOf(s);t>=0&&o.players.splice(t,1);var n=o._engine.playersByElement.get(e);if(n){var r=n.indexOf(s);r>=0&&n.splice(r,1)}}),this.players.push(s),T.push(s),s}if(!function(e,t){var n=Object.keys(e),r=Object.keys(t);if(n.length!=r.length)return!1;for(var o=0;o<n.length;o++){var i=n[o];if(!t.hasOwnProperty(i)||e[i]!==t[i])return!1}return!0}(u.params,l.params)){var d=[],E=i.matchStyles(u.value,u.params,d),_=i.matchStyles(l.value,l.params,d);d.length?this._engine.reportError(d):this._engine.afterFlush(function(){D(e,E),b(e,_)})}},e.prototype.deregister=function(e){var t=this;delete this._triggers[e],this._engine.statesByElement.forEach(function(t,n){delete t[e]}),this._elementListeners.forEach(function(n,r){t._elementListeners.set(r,n.filter(function(t){return t.name!=e}))})},e.prototype.clearElementCache=function(e){this._engine.statesByElement.delete(e),this._elementListeners.delete(e);var t=this._engine.playersByElement.get(e);t&&(t.forEach(function(e){return e.destroy()}),this._engine.playersByElement.delete(e))},e.prototype._destroyInnerNodes=function(e,t,n){var r=this;void 0===n&&(n=!1),this._engine.driver.query(e,v,!0).forEach(function(e){if(n&&function(e,t){if(e.classList)return e.classList.contains(t);var n=e[Be];return n&&n[t]}(e,r._hostClassName)){var o=r._engine.namespacesByHostElement.get(e);o&&o.removeNode(e,t,!0),r.removeNode(e,t,!0)}else r.clearElementCache(e)})},e.prototype.removeNode=function(e,t,n){var r=this,i=this._engine;!n&&e.childElementCount&&this._destroyInnerNodes(e,t,!0);var s=i.statesByElement.get(e);if(s){var a=[];if(Object.keys(s).forEach(function(t){if(r._triggers[t]){var n=r.trigger(e,t,"void",!1);n&&a.push(n)}}),a.length)return i.markElementAsRemoved(this.id,e,!0,t),void o(a).onDone(function(){return i.processLeaveNode(e)})}var u=!1;if(i.totalAnimations){var c=i.players.length?i.playersByQueriedElement.get(e):[];if(c&&c.length)u=!0;else for(var l=e;l=l.parentNode;){var p=i.statesByElement.get(l);if(p){u=!0;break}}}var h=this._elementListeners.get(e);if(h){var T=new Set;h.forEach(function(t){var n=t.name;if(!T.has(n)){T.add(n);var o=r._triggers[n],s=o.fallbackTransition,a=i.statesByElement.get(e),u=a[n]||be,c=new Pe("void"),l=new we(r.id,n,e);r._engine.totalQueuedPlayers++,r._queue.push({element:e,triggerName:n,transition:s,fromState:u,toState:c,player:l,isFallbackTransition:!0})}})}u?i.markElementAsRemoved(this.id,e,!1,t):(i.afterFlush(function(){return r.clearElementCache(e)}),i.destroyInnerAnimations(e),i._onRemovalComplete(e,t))},e.prototype.insertNode=function(e,t){Ge(e,this._hostClassName)},e.prototype.drainQueuedTransitions=function(e){var t=this,n=[];return this._queue.forEach(function(r){var o=r.player;if(!o.destroyed){var i=r.element,a=t._elementListeners.get(i);a&&a.forEach(function(t){if(t.name==r.triggerName){var n=u(i,r.triggerName,r.fromState.value,r.toState.value);n._data=e,s(r.player,t.phase,n,t.callback)}}),o.markedForDestroy?t._engine.afterFlush(function(){o.destroy()}):n.push(r)}}),this._queue=[],n.sort(function(e,n){var r=e.transition.ast.depCount,o=n.transition.ast.depCount;return 0==r||0==o?r-o:t._engine.driver.containsElement(e.element,n.element)?1:-1})},e.prototype.destroy=function(e){this.players.forEach(function(e){return e.destroy()}),this._destroyInnerNodes(this.hostElement,e)},e.prototype.elementContainsData=function(e){var t=!1;return this._elementListeners.has(e)&&(t=!0),t=!!this._queue.find(function(t){return t.element===e})||t},e}(),He=function(){function e(e,t){this.driver=e,this._normalizer=t,this.players=[],this.newHostElements=new Map,this.playersByElement=new Map,this.playersByQueriedElement=new Map,this.statesByElement=new Map,this.disabledNodes=new Set,this.totalAnimations=0,this.totalQueuedPlayers=0,this._namespaceLookup={},this._namespaceList=[],this._flushFns=[],this._whenQuietFns=[],this.namespacesByHostElement=new Map,this.collectedEnterElements=[],this.collectedLeaveElements=[],this.onRemovalComplete=function(e,t){}}return e.prototype._onRemovalComplete=function(e,t){this.onRemovalComplete(e,t)},Object.defineProperty(e.prototype,"queuedPlayers",{get:function(){var e=[];return this._namespaceList.forEach(function(t){t.players.forEach(function(t){t.queued&&e.push(t)})}),e},enumerable:!0,configurable:!0}),e.prototype.createNamespace=function(e,t){var n=new ke(e,t,this);return t.parentNode?this._balanceNamespaceList(n,t):(this.newHostElements.set(t,n),this.collectEnterElement(t)),this._namespaceLookup[e]=n},e.prototype._balanceNamespaceList=function(e,t){var n=this._namespaceList.length-1;if(n>=0){for(var r=!1,o=n;o>=0;o--){var i=this._namespaceList[o];if(this.driver.containsElement(i.hostElement,t)){this._namespaceList.splice(o+1,0,e),r=!0;break}}r||this._namespaceList.splice(0,0,e)}else this._namespaceList.push(e);return this.namespacesByHostElement.set(t,e),e},e.prototype.register=function(e,t){var n=this._namespaceLookup[e];return n||(n=this.createNamespace(e,t)),n},e.prototype.registerTrigger=function(e,t,n){var r=this._namespaceLookup[e];r&&r.register(t,n)&&this.totalAnimations++},e.prototype.destroy=function(e,t){var n=this;if(e){var r=this._fetchNamespace(e);this.afterFlush(function(){n.namespacesByHostElement.delete(r.hostElement),delete n._namespaceLookup[e];var t=n._namespaceList.indexOf(r);t>=0&&n._namespaceList.splice(t,1)}),this.afterFlushAnimationsDone(function(){return r.destroy(t)})}},e.prototype._fetchNamespace=function(e){return this._namespaceLookup[e]},e.prototype.trigger=function(e,t,n,r){return!!Ue(t)&&(this._fetchNamespace(e).trigger(t,n,r),!0)},e.prototype.insertNode=function(e,t,n,r){if(Ue(t)){var o=t[Le];o&&o.setForRemoval&&(o.setForRemoval=!1),e&&this._fetchNamespace(e).insertNode(t,n),r&&this.collectEnterElement(t)}},e.prototype.collectEnterElement=function(e){this.collectedEnterElements.push(e)},e.prototype.markElementAsDisabled=function(e,t){t?this.disabledNodes.has(e)||(this.disabledNodes.add(e),Ge(e,"ng-animate-disabled")):this.disabledNodes.has(e)&&(this.disabledNodes.delete(e),Ke(e,"ng-animate-disabled"))},e.prototype.removeNode=function(e,t,n,r){if(Ue(t)){var o=e?this._fetchNamespace(e):null;o?o.removeNode(t,n,r):this.markElementAsRemoved(e,t,!1,n)}else this._onRemovalComplete(t,n)},e.prototype.markElementAsRemoved=function(e,t,n,r){this.collectedLeaveElements.push(t),t[Le]={namespaceId:e,setForRemoval:r,hasAnimation:n,removedBeforeQueried:!1}},e.prototype.listen=function(e,t,n,r,o){return Ue(t)?this._fetchNamespace(e).listen(t,n,r,o):function(){}},e.prototype._buildInstruction=function(e,t){return e.transition.build(this.driver,e.element,e.fromState.value,e.toState.value,e.fromState.options,e.toState.options,t)},e.prototype.destroyInnerAnimations=function(e){var t=this,n=this.driver.query(e,v,!0);n.forEach(function(e){var n=t.playersByElement.get(e);n&&n.forEach(function(e){e.queued?e.markedForDestroy=!0:e.destroy()});var r=t.statesByElement.get(e);r&&Object.keys(r).forEach(function(e){return r[e]=De})}),0!=this.playersByQueriedElement.size&&(n=this.driver.query(e,C,!0)).length&&n.forEach(function(e){var n=t.playersByQueriedElement.get(e);n&&n.forEach(function(e){return e.finish()})})},e.prototype.whenRenderingDone=function(){var e=this;return new Promise(function(t){if(e.players.length)return o(e.players).onDone(function(){return t()});t()})},e.prototype.processLeaveNode=function(e){var t=this,n=e[Le];if(n&&n.setForRemoval){if(e[Le]=Ie,n.namespaceId){this.destroyInnerAnimations(e);var r=this._fetchNamespace(n.namespaceId);r&&r.clearElementCache(e)}this._onRemovalComplete(e,n.setForRemoval)}this.driver.matchesElement(e,".ng-animate-disabled")&&this.markElementAsDisabled(e,!1),this.driver.query(e,".ng-animate-disabled",!0).forEach(function(n){t.markElementAsDisabled(e,!1)})},e.prototype.flush=function(e){var t=this;void 0===e&&(e=-1);var n=[];if(this.newHostElements.size&&(this.newHostElements.forEach(function(e,n){return t._balanceNamespaceList(e,n)}),this.newHostElements.clear()),this._namespaceList.length&&(this.totalQueuedPlayers||this.collectedLeaveElements.length)){var r=[];try{n=this._flushAnimations(r,e)}finally{for(var i=0;i<r.length;i++)r[i]()}}else for(var i=0;i<this.collectedLeaveElements.length;i++){var s=this.collectedLeaveElements[i];this.processLeaveNode(s)}if(this.totalQueuedPlayers=0,this.collectedEnterElements.length=0,this.collectedLeaveElements.length=0,this._flushFns.forEach(function(e){return e()}),this._flushFns=[],this._whenQuietFns.length){var a=this._whenQuietFns;this._whenQuietFns=[],n.length?o(n).onDone(function(){a.forEach(function(e){return e()})}):a.forEach(function(e){return e()})}},e.prototype.reportError=function(e){throw new Error("Unable to process animations due to the following failed trigger transitions\n "+e.join("\n"))},e.prototype._flushAnimations=function(e,n){var r=this,i=new oe,s=[],a=new Map,u=[],l=new Map,p=new Map,h=new Map,T=new Set;this.disabledNodes.forEach(function(e){T.add(e);for(var t=r.driver.query(e,".ng-animate-queued",!0),n=0;n<t.length;n++)T.add(t[n])});for(var f,m,d,E,_="undefined"!=typeof document?document.body:null,A=this.collectedEnterElements.length?this.collectedEnterElements.filter((f=this.collectedEnterElements,d=new Set(f),E=new Set,m=function(e){return!e||!d.has(e.parentNode)&&(!!E.has(e.parentNode)||!!m(e.parentNode)&&(E.add(e),!0))})):[],y=0;y<A.length;y++)Ge(A[y],"ng-enter");for(var g=[],N=new Set,y=0;y<this.collectedLeaveElements.length;y++){var S=this.collectedLeaveElements[y],v=S[Le];v&&v.setForRemoval&&(Ge(S,"ng-leave"),g.push(S),v.hasAnimation||N.add(S))}e.push(function(){A.forEach(function(e){return Ke(e,"ng-enter")}),g.forEach(function(e){Ke(e,"ng-leave"),r.processLeaveNode(e)})});for(var O=[],R=[],y=this._namespaceList.length-1;y>=0;y--){var I=this._namespaceList[y];I.drainQueuedTransitions(n).forEach(function(e){var t=e.player;O.push(t);var n=e.element;if(_&&r.driver.containsElement(_,n)){var o=r._buildInstruction(e,i);if(o.errors&&o.errors.length)R.push(o);else{if(e.isFallbackTransition)return t.onStart(function(){return D(n,o.fromStyles)}),t.onDestroy(function(){return b(n,o.toStyles)}),void s.push(t);o.timelines.forEach(function(e){return e.stretchStartingKeyframe=!0}),i.append(n,o.timelines);var a={instruction:o,player:t,element:n};u.push(a),o.queriedElements.forEach(function(e){return c(l,e,[]).push(t)}),o.preStyleProps.forEach(function(e,t){var n=Object.keys(e);if(n.length){var r=p.get(t);r||p.set(t,r=new Set),n.forEach(function(e){return r.add(e)})}}),o.postStyleProps.forEach(function(e,t){var n=Object.keys(e),r=h.get(t);r||h.set(t,r=new Set),n.forEach(function(e){return r.add(e)})})}}else t.destroy()})}if(R.length){var M=[];R.forEach(function(e){M.push("@"+e.triggerName+" has failed due to:\n"),e.errors.forEach(function(e){return M.push("- "+e+"\n")})}),O.forEach(function(e){return e.destroy()}),this.reportError(M)}for(var L=new Set,y=0;y<A.length;y++){var S=A[y];i.has(S)||L.add(S)}var P=new Map,k=[];u.forEach(function(e){var t=e.element;i.has(t)&&(k.unshift(t),r._beforeAnimationBuild(e.player.namespaceId,e.instruction,P))}),s.forEach(function(e){var t=e.element,n=r._getPreviousPlayers(t,!1,e.namespaceId,e.triggerName,null);n.forEach(function(e){c(P,t,[]).push(e),e.destroy()})});var H=g.filter(function(e){return Ye(e,p,h)}),w=Fe(this.driver,N,h,t.AUTO_STYLE),U=w[0],x=w[1];x.forEach(function(e){Ye(e,p,h)&&H.push(e)});var F=(p.size?Fe(this.driver,L,p,t.ɵPRE_STYLE):[new Map])[0];H.forEach(function(e){var t=U.get(e),n=F.get(e);U.set(e,Object.assign({},t,n))});var B=[],G=[];u.forEach(function(e){var t=e.element,n=e.player,u=e.instruction;if(i.has(t)){if(T.has(t))return void s.push(n);var c=r._buildAnimation(n.namespaceId,u,P,a,F,U);n.setRealPlayer(c);for(var l=null,p=0;p<k.length;p++){var h=k[p];if(h===t)break;if(r.driver.containsElement(h,t)){l=h;break}}if(l){var f=r.playersByElement.get(l);f&&f.length&&(n.parentPlayer=o(f)),s.push(n)}else B.push(n)}else D(t,u.fromStyles),n.onDestroy(function(){return b(t,u.toStyles)}),G.push(n),T.has(t)&&s.push(n)}),G.forEach(function(e){var t=a.get(e.element);if(t&&t.length){var n=o(t);e.setRealPlayer(n)}}),s.forEach(function(e){e.parentPlayer?e.parentPlayer.onDestroy(function(){return e.destroy()}):e.destroy()});for(var y=0;y<g.length;y++){var S=g[y],v=S[Le];if(Ke(S,"ng-leave"),!v||!v.hasAnimation){var K=[];if(l.size){var j=l.get(S);j&&j.length&&K.push.apply(K,j);for(var Y=this.driver.query(S,C,!0),q=0;q<Y.length;q++){var Q=l.get(Y[q]);Q&&Q.length&&K.push.apply(K,Q)}}var z=K.filter(function(e){return!e.destroyed});z.length?je(this,S,z):this.processLeaveNode(S)}}return g.length=0,B.forEach(function(e){r.players.push(e),e.onDone(function(){e.destroy();var t=r.players.indexOf(e);r.players.splice(t,1)}),e.play()}),B},e.prototype.elementContainsData=function(e,t){var n=!1,r=t[Le];return r&&r.setForRemoval&&(n=!0),this.playersByElement.has(t)&&(n=!0),this.playersByQueriedElement.has(t)&&(n=!0),this.statesByElement.has(t)&&(n=!0),this._fetchNamespace(e).elementContainsData(t)||n},e.prototype.afterFlush=function(e){this._flushFns.push(e)},e.prototype.afterFlushAnimationsDone=function(e){this._whenQuietFns.push(e)},e.prototype._getPreviousPlayers=function(e,t,n,r,o){var i=[];if(t){var s=this.playersByQueriedElement.get(e);s&&(i=s)}else{var a=this.playersByElement.get(e);if(a){var u=!o||"void"==o;a.forEach(function(e){e.queued||(u||e.triggerName==r)&&i.push(e)})}}return(n||r)&&(i=i.filter(function(e){return!(n&&n!=e.namespaceId||r&&r!=e.triggerName)})),i},e.prototype._beforeAnimationBuild=function(e,t,n){var r=this,o=t.triggerName,i=t.element,s=t.isRemovalTransition?void 0:e,a=t.isRemovalTransition?void 0:o;t.timelines.map(function(e){var o=e.element,u=o!==i,l=c(n,o,[]),p=r._getPreviousPlayers(o,u,s,a,t.toState);p.forEach(function(e){var t=e.getRealPlayer();t.beforeDestroy&&t.beforeDestroy(),e.destroy(),l.push(e)})}),D(i,t.fromStyles)},e.prototype._buildAnimation=function(e,n,r,s,a,u){var l=this,p=n.triggerName,h=n.element,T=[],f=new Set,m=new Set,d=n.timelines.map(function(n){var o=n.element;f.add(o);var c=o[Le];if(c&&c.removedBeforeQueried)return new t.NoopAnimationPlayer;var d,E,_=o!==h,A=(d=(r.get(o)||Re).map(function(e){return e.getRealPlayer()}),E=[],function e(n,r){for(var o=0;o<n.length;o++){var i=n[o];i instanceof t.ɵAnimationGroupPlayer?e(i.players,r):r.push(i)}}(d,E),E).filter(function(e){var t=e;return!!t.element&&t.element===o}),y=a.get(o),g=u.get(o),N=i(l.driver,l._normalizer,0,n.keyframes,y,g),S=l._buildPlayer(n,N,A);if(n.subTimeline&&s&&m.add(o),_){var v=new we(e,p,o);v.setRealPlayer(S),T.push(v)}return S});T.forEach(function(e){c(l.playersByQueriedElement,e.element,[]).push(e),e.onDone(function(){return function(e,t,n){var r;if(e instanceof Map){if(r=e.get(t)){if(r.length){var o=r.indexOf(n);r.splice(o,1)}0==r.length&&e.delete(t)}}else if(r=e[t]){if(r.length){var o=r.indexOf(n);r.splice(o,1)}0==r.length&&delete e[t]}return r}(l.playersByQueriedElement,e.element,e)})}),f.forEach(function(e){return Ge(e,"ng-animating")});var E=o(d);return E.onDestroy(function(){f.forEach(function(e){return Ke(e,"ng-animating")}),b(h,n.toStyles)}),m.forEach(function(e){c(s,e,[]).push(E)}),E},e.prototype._buildPlayer=function(e,n,r){return n.length>0?this.driver.animate(e.element,n,e.duration,e.delay,e.easing,r):new t.NoopAnimationPlayer},e}(),we=function(){function e(e,n,r){this.namespaceId=e,this.triggerName=n,this.element=r,this._player=new t.NoopAnimationPlayer,this._containsRealPlayer=!1,this._queuedCallbacks={},this._destroyed=!1,this.markedForDestroy=!1}return Object.defineProperty(e.prototype,"queued",{get:function(){return 0==this._containsRealPlayer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"destroyed",{get:function(){return this._destroyed},enumerable:!0,configurable:!0}),e.prototype.setRealPlayer=function(e){var t=this;this._containsRealPlayer||(this._player=e,Object.keys(this._queuedCallbacks).forEach(function(n){t._queuedCallbacks[n].forEach(function(t){return s(e,n,void 0,t)})}),this._queuedCallbacks={},this._containsRealPlayer=!0)},e.prototype.getRealPlayer=function(){return this._player},e.prototype._queueEvent=function(e,t){c(this._queuedCallbacks,e,[]).push(t)},e.prototype.onDone=function(e){this.queued&&this._queueEvent("done",e),this._player.onDone(e)},e.prototype.onStart=function(e){this.queued&&this._queueEvent("start",e),this._player.onStart(e)},e.prototype.onDestroy=function(e){this.queued&&this._queueEvent("destroy",e),this._player.onDestroy(e)},e.prototype.init=function(){this._player.init()},e.prototype.hasStarted=function(){return!this.queued&&this._player.hasStarted()},e.prototype.play=function(){!this.queued&&this._player.play()},e.prototype.pause=function(){!this.queued&&this._player.pause()},e.prototype.restart=function(){!this.queued&&this._player.restart()},e.prototype.finish=function(){this._player.finish()},e.prototype.destroy=function(){this._destroyed=!0,this._player.destroy()},e.prototype.reset=function(){!this.queued&&this._player.reset()},e.prototype.setPosition=function(e){this.queued||this._player.setPosition(e)},e.prototype.getPosition=function(){return this.queued?0:this._player.getPosition()},Object.defineProperty(e.prototype,"totalTime",{get:function(){return this._player.totalTime},enumerable:!0,configurable:!0}),e}();function Ue(e){return e&&1===e.nodeType}function xe(e,t){var n=e.style.display;return e.style.display=null!=t?t:"none",n}function Fe(e,t,n,r){var o=[];t.forEach(function(e){return o.push(xe(e))});var i=new Map,s=[];n.forEach(function(t,n){var o={};t.forEach(function(t){var i=o[t]=e.computeStyle(n,t,r);i&&0!=i.length||(n[Le]=Me,s.push(n))}),i.set(n,o)});var a=0;return t.forEach(function(e){return xe(e,o[a++])}),[i,s]}var Be="$$classes";function Ge(e,t){if(e.classList)e.classList.add(t);else{var n=e[Be];n||(n=e[Be]={}),n[t]=!0}}function Ke(e,t){if(e.classList)e.classList.remove(t);else{var n=e[Be];n&&delete n[t]}}function je(e,t,n){o(n).onDone(function(){return e.processLeaveNode(t)})}function Ye(e,t,n){var r=n.get(e);if(!r)return!1;var o=t.get(e);return o?r.forEach(function(e){return o.add(e)}):t.set(e,r),n.delete(e),!0}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var qe=function(){function e(e,t){var n=this;this._triggerCache={},this.onRemovalComplete=function(e,t){},this._transitionEngine=new He(e,t),this._timelineEngine=new Oe(e,t),this._transitionEngine.onRemovalComplete=function(e,t){return n.onRemovalComplete(e,t)}}return e.prototype.registerTrigger=function(e,t,n,r,o){var i=e+"-"+r,s=this._triggerCache[i];if(!s){var a=[],u=V(o,a);if(a.length)throw new Error('The animation trigger "'+r+'" has failed to build due to the following errors:\n - '+a.join("\n - "));s=
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function(e,t){return new Se(e,t)}(r,u),this._triggerCache[i]=s}this._transitionEngine.registerTrigger(t,r,s)},e.prototype.register=function(e,t){this._transitionEngine.register(e,t)},e.prototype.destroy=function(e,t){this._transitionEngine.destroy(e,t)},e.prototype.onInsert=function(e,t,n,r){this._transitionEngine.insertNode(e,t,n,r)},e.prototype.onRemove=function(e,t,n){this._transitionEngine.removeNode(e,t,n)},e.prototype.disableAnimations=function(e,t){this._transitionEngine.markElementAsDisabled(e,t)},e.prototype.process=function(e,t,n,r){if("@"==n.charAt(0)){var o=l(n),i=o[0],s=o[1],a=r;this._timelineEngine.command(i,t,s,a)}else this._transitionEngine.trigger(e,t,n,r)},e.prototype.listen=function(e,t,n,r,o){if("@"==n.charAt(0)){var i=l(n),s=i[0],a=i[1];return this._timelineEngine.listen(s,t,a,o)}return this._transitionEngine.listen(e,t,n,r,o)},e.prototype.flush=function(e){void 0===e&&(e=-1),this._transitionEngine.flush(e)},Object.defineProperty(e.prototype,"players",{get:function(){return this._transitionEngine.players.concat(this._timelineEngine.players)},enumerable:!0,configurable:!0}),e.prototype.whenRenderingDone=function(){return this._transitionEngine.whenRenderingDone()},e}(),Qe=function(){function e(e,t,n,r){void 0===r&&(r=[]);var o,i,s=this;this.element=e,this.keyframes=t,this.options=n,this.previousPlayers=r,this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._initialized=!1,this._finished=!1,this._started=!1,this._destroyed=!1,this.time=0,this.parentPlayer=null,this.previousStyles={},this.currentSnapshot={},this._duration=n.duration,this._delay=n.delay||0,this.time=this._duration+this._delay,o=this._duration,i=this._delay,(0===o||0===i)&&r.forEach(function(e){var t=e.currentSnapshot;Object.keys(t).forEach(function(e){return s.previousStyles[e]=t[e]})})}return e.prototype._onFinish=function(){this._finished||(this._finished=!0,this._onDoneFns.forEach(function(e){return e()}),this._onDoneFns=[])},e.prototype.init=function(){this._buildPlayer(),this._preparePlayerBeforeStart()},e.prototype._buildPlayer=function(){var e=this;if(!this._initialized){this._initialized=!0;var t=this.keyframes.map(function(e){return P(e,!1)}),n=Object.keys(this.previousStyles);if(n.length){var r=t[0],o=[];if(n.forEach(function(t){r.hasOwnProperty(t)||o.push(t),r[t]=e.previousStyles[t]}),o.length)for(var i=this,s=function(){var e=t[a];o.forEach(function(t){e[t]=ze(i.element,t)})},a=1;a<t.length;a++)s()}this._player=this._triggerWebAnimation(this.element,t,this.options),this._finalKeyframe=t.length?t[t.length-1]:{},this._player.addEventListener("finish",function(){return e._onFinish()})}},e.prototype._preparePlayerBeforeStart=function(){this._delay?this._resetDomPlayerState():this._player.pause()},e.prototype._triggerWebAnimation=function(e,t,n){return e.animate(t,n)},Object.defineProperty(e.prototype,"domPlayer",{get:function(){return this._player},enumerable:!0,configurable:!0}),e.prototype.onStart=function(e){this._onStartFns.push(e)},e.prototype.onDone=function(e){this._onDoneFns.push(e)},e.prototype.onDestroy=function(e){this._onDestroyFns.push(e)},e.prototype.play=function(){this._buildPlayer(),this.hasStarted()||(this._onStartFns.forEach(function(e){return e()}),this._onStartFns=[],this._started=!0),this._player.play()},e.prototype.pause=function(){this.init(),this._player.pause()},e.prototype.finish=function(){this.init(),this._onFinish(),this._player.finish()},e.prototype.reset=function(){this._resetDomPlayerState(),this._destroyed=!1,this._finished=!1,this._started=!1},e.prototype._resetDomPlayerState=function(){this._player&&this._player.cancel()},e.prototype.restart=function(){this.reset(),this.play()},e.prototype.hasStarted=function(){return this._started},e.prototype.destroy=function(){this._destroyed||(this._destroyed=!0,this._resetDomPlayerState(),this._onFinish(),this._onDestroyFns.forEach(function(e){return e()}),this._onDestroyFns=[])},e.prototype.setPosition=function(e){this._player.currentTime=e*this.time},e.prototype.getPosition=function(){return this._player.currentTime/this.time},Object.defineProperty(e.prototype,"totalTime",{get:function(){return this._delay+this._duration},enumerable:!0,configurable:!0}),e.prototype.beforeDestroy=function(){var e=this,t={};this.hasStarted()&&Object.keys(this._finalKeyframe).forEach(function(n){"offset"!=n&&(t[n]=e._finished?e._finalKeyframe[n]:ze(e.element,n))}),this.currentSnapshot=t},e}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function ze(e,t){return window.getComputedStyle(e)[t]}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var We=function(){function e(){}return e.prototype.matchesElement=function(e,t){return d(e,t)},e.prototype.containsElement=function(e,t){return E(e,t)},e.prototype.query=function(e,t,n){return _(e,t,n)},e.prototype.computeStyle=function(e,t,n){return window.getComputedStyle(e)[t]},e.prototype.animate=function(e,t,n,r,o,i){void 0===i&&(i=[]);var s=0==r?"both":"forwards",a={duration:n,delay:r,fill:s};o&&(a.easing=o);var u=i.filter(function(e){return e instanceof Qe});return new Qe(e,t,a,u)},e}();e.AnimationDriver=y,e.ɵAnimation=fe,e.ɵAnimationStyleNormalizer=me,e.ɵNoopAnimationStyleNormalizer=de,e.ɵWebAnimationsStyleNormalizer=Ee,e.ɵNoopAnimationDriver=A,e.ɵAnimationEngine=qe,e.ɵWebAnimationsDriver=We,e.ɵsupportsWebAnimations=function(){return"undefined"!=typeof Element&&"function"==typeof Element.prototype.animate},e.ɵWebAnimationsPlayer=Qe,Object.defineProperty(e,"__esModule",{value:!0})}(t,n(23))},function(e,t,n){e.exports=n(1)(5)},function(e,t,n){e.exports=n(1)(83)},function(e,t,n){e.exports=n(1)(0)},function(e,t,n){e.exports=n(1)(41)},function(e,t,n){"use strict";n.r(t);n(67),n(66),n(65);var r=n(8),o=n(0),i=n(4),s=n(28),a=n(9),u=n(3),c=n(11),l=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},p=function(){function e(){}return e=l([Object(o.Component)({selector:"app",template:n(43),styles:[n(42)]})],e)}(),h=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},T=function(){function e(){}return e=h([Object(o.Component)({selector:"nav-menu",template:n(40),styles:[n(39)]})],e)}(),f=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},m=function(){function e(){}return e=f([Object(o.Component)({selector:"home",template:n(37)})],e)}(),d=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},E=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},_=function(e,t){return function(n,r){t(n,r,e)}},A=function(){function e(e,t){var n=this;e.get(t+"api/SampleData/WeatherForecasts").subscribe(function(e){n.forecasts=e.json()},function(e){return console.error(e)})}return e=d([Object(o.Component)({selector:"fetchdata",template:n(36)}),_(1,Object(o.Inject)("BASE_URL")),E("design:paramtypes",[u.Http,String])],e)}(),y=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},g=function(){function e(){this.currentCount=0}return e.prototype.incrementCounter=function(){this.currentCount++},e=y([Object(o.Component)({selector:"counter",template:n(35)})],e)}(),N=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},S=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},v=function(e,t){return function(n,r){t(n,r,e)}},C=function(){function e(e,t){this.http=e,this.baseUrl=t,this.http.get(this.baseUrl+"api/notes/").subscribe(function(e){var t=e.json(),n=e.json();console.log(t),console.log(n)},function(e){return console.error(e)}),this.notes=[new O(0,"test description 1",new Date(2018,6,8,11,28,30)),new O(1,"test description 2",new Date(2017,5,4,10,30,1))]}return e.prototype.getAllNotes=function(){return this.notes.slice()},e.prototype.getNote=function(e){return this.notes[e]},e.prototype.createNote=function(e){return this.http.post(this.baseUrl+"api/notes/",e)},e=N([Object(o.Injectable)(),v(1,Object(o.Inject)("BASE_URL")),S("design:paramtypes",[u.Http,String])],e)}(),O=(function(){}(),function(){}(),function(){return function(e,t,n){this.id=e,this.description=t,this.date=n}}()),R=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},I=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},M=function(){function e(e){this.notesService=e}return e.prototype.ngOnInit=function(){this.notes=this.notesService.getAllNotes()},e=R([Object(o.Component)({selector:"nots-list",template:n(34)}),I("design:paramtypes",[C])],e)}(),L=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},P=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},b=function(){function e(e,t){var n=this;this.notesService=e,this.activatedRoute=t,this.activatedRoute.params.subscribe(function(e){return n.id=+e.id})}return e.prototype.ngOnInit=function(){this.note=this.notesService.getNote(this.id)},e=L([Object(o.Component)({selector:"note-details",template:n(33)}),P("design:paramtypes",[C,c.ActivatedRoute])],e)}(),D=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},k=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},H=function(){function e(e,t){this.notesService=e,this.formbuilder=t,this.description=""}return e.prototype.ngOnInit=function(){this.createComponentForm=this.formbuilder.group({description:["",[a.Validators.required]],file:null})},e.prototype.onSubmit=function(e){console.log(e)},e.prototype.onFileChange=function(e){var t=this,n=new FileReader;if(e.target.files&&e.target.files.length>0){var r=e.target.files[0];n.readAsDataURL(r),n.onload=function(){t.createComponentForm.controls.file.setValue({filename:r.name,filetype:r.type,value:n.result.split(",")[1]})}}},e=D([Object(o.Component)({selector:"note-create",template:n(32),styles:[n(31)]}),k("design:paramtypes",[C,a.FormBuilder])],e)}(),w=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},U=function(){function e(){}return e=w([Object(o.NgModule)({declarations:[p,T,g,A,m,M,b,H],providers:[C],imports:[r.CommonModule,u.HttpModule,a.ReactiveFormsModule,c.RouterModule.forRoot([{path:"",redirectTo:"home",pathMatch:"full"},{path:"home",component:m},{path:"counter",component:g},{path:"fetch-data",component:A},{path:"notes-list",component:M},{path:"note-details/:id",component:b},{path:"note-create",component:H},{path:"**",redirectTo:"home"}])]})],e)}(),x=function(e,t,n,r){var o,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,n,s):o(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},F=function(){function e(){}return e=x([Object(o.NgModule)({bootstrap:[p],imports:[i.ServerModule,U]})],e)}();Object(o.enableProdMode)();t.default=Object(s.createServerRenderer)(function(e){var t=[{provide:i.INITIAL_CONFIG,useValue:{document:"<app></app>",url:e.url}},{provide:r.APP_BASE_HREF,useValue:e.baseUrl},{provide:"BASE_URL",useValue:e.origin+e.baseUrl}];return Object(i.platformDynamicServer)(t).bootstrapModule(F).then(function(e){var t=e.injector.get(o.ApplicationRef),n=e.injector.get(i.PlatformState),r=e.injector.get(o.NgZone);return new Promise(function(o,i){r.onError.subscribe(function(e){return i(e)}),t.isStable.first(function(e){return e}).subscribe(function(){setImmediate(function(){o({html:n.renderToString()}),e.destroy()})})})})})},function(e,t,n){(e.exports=n(12)(void 0)).push([e.i,"textarea.ng-invalid {\r\n    border: 1px red solid;\r\n}\r\n",""])},function(e,t,n){var r=n(30);e.exports="string"==typeof r?r:r.toString()},function(e,t){e.exports='<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n    <p>Note create component</p>\r\n    <form [formGroup]=\'createComponentForm\' (ngSubmit)="onSubmit(createComponentForm)">\r\n        <textarea class="form-control" formControlName="description" placeholder="description"></textarea>\r\n        <div *ngIf="createComponentForm.controls[\'description\'].touched && createComponentForm.controls[\'description\'].valid">\r\n            <span *ngIf="createComponentForm.controls[\'description\'].hasError(\'required\')">Description is required</span>\r\n        </div>\r\n\r\n        \x3c!-- File uploading --\x3e\r\n        <div class="form-group">\r\n            <label for="photo">Photo</label>\r\n            <input type="file" id="photo" (change)="onFileChange($event)" #fileInput />\r\n        </div>\r\n\r\n        <button type="submit" class="btn btn-primary" [disabled]=\'!createComponentForm.valid\'>Create</button>\r\n    </form>\r\n</body>\r\n</html>'},function(e,t){e.exports='<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n    <p>{{ note.date }}</p>\r\n    <p>{{ note.description }}</p>\r\n</body>\r\n</html>'},function(e,t){e.exports='<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title></title>\r\n</head>\r\n<body>    \r\n    <div class="col-xs-8">\r\n        <a class="btn btn-success" [routerLink]="[\'/note-create\']">Create note</a>\r\n        <div class="list-group">\r\n            <a *ngFor="let note of notes" style="cursor: pointer" class="list-group-item" [routerLink]="[\'/note-details\', note.id]" routerLinkActive="active">\r\n                {{ note.id }} {{ note.description }} {{ note.date | date : \'short\' }}\r\n            </a>\r\n        </div>\r\n    </div>    \r\n</body>\r\n</html>'},function(e,t){e.exports='<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p>Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button (click)="incrementCounter()">Increment</button>\r\n'},function(e,t){e.exports='<h1>Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf="!forecasts"><em>Loading...</em></p>\r\n\r\n<table class=\'table\' *ngIf="forecasts">\r\n    <thead>\r\n        <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor="let forecast of forecasts">\r\n            <td>{{ forecast.dateFormatted }}</td>\r\n            <td>{{ forecast.temperatureC }}</td>\r\n            <td>{{ forecast.temperatureF }}</td>\r\n            <td>{{ forecast.summary }}</td>\r\n        </tr>\r\n        <tr *ngFor="let note of notes">\r\n            <td>{{ note.description }}</td>\r\n            <td>{{ note.date }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n'},function(e,t){e.exports="<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n    <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n    <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n    <li><a href='https://webpack.github.io/'>Webpack</a> for building and bundling client-side resources</li>\r\n    <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n    <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n    <li><strong>Server-side prerendering</strong>. For faster initial loading and improved SEO, your Angular app is prerendered on the server. The resulting HTML is then transferred to the browser where a client-side copy of the app takes over.</li>\r\n    <li><strong>Webpack dev middleware</strong>. In development mode, there's no need to run the <code>webpack</code> build tool. Your client-side resources are dynamically built on demand. Updates are available as soon as you modify any file.</li>\r\n    <li><strong>Hot module replacement</strong>. In development mode, you don't even need to reload the page after making most changes. Within seconds of saving changes to files, your Angular app will be rebuilt and a new instance injected into the page.</li>\r\n    <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and the <code>webpack</code> build tool produces minified static CSS and JavaScript files.</li>\r\n</ul>\r\n"},function(e,t,n){(e.exports=n(12)(void 0)).push([e.i,"li .glyphicon {\r\n    margin-right: 10px;\r\n}\r\n\r\n/* Highlighting rules for nav menu items */\r\nli.link-active a,\r\nli.link-active a:hover,\r\nli.link-active a:focus {\r\n    background-color: #4189C7;\r\n    color: white;\r\n}\r\n\r\n/* Keep the nav menu independent of scrolling and on top of other items */\r\n.main-nav {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    /* On small screens, convert the nav menu to a vertical sidebar */\r\n    .main-nav {\r\n        height: 100%;\r\n        width: calc(25% - 20px);\r\n    }\r\n    .navbar {\r\n        border-radius: 0px;\r\n        border-width: 0px;\r\n        height: 100%;\r\n    }\r\n    .navbar-header {\r\n        float: none;\r\n    }\r\n    .navbar-collapse {\r\n        border-top: 1px solid #444;\r\n        padding: 0px;\r\n    }\r\n    .navbar ul {\r\n        float: none;\r\n    }\r\n    .navbar li {\r\n        float: none;\r\n        font-size: 15px;\r\n        margin: 6px;\r\n    }\r\n    .navbar li a {\r\n        padding: 10px 16px;\r\n        border-radius: 4px;\r\n    }\r\n    .navbar a {\r\n        /* If a menu item's text is too long, truncate it */\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n}\r\n",""])},function(e,t,n){var r=n(38);e.exports="string"==typeof r?r:r.toString()},function(e,t){e.exports="<div class='main-nav'>\r\n    <div class='navbar navbar-inverse'>\r\n        <div class='navbar-header'>\r\n            <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\r\n                <span class='sr-only'>Toggle navigation</span>\r\n                <span class='icon-bar'></span>\r\n                <span class='icon-bar'></span>\r\n                <span class='icon-bar'></span>\r\n            </button>\r\n            <a class='navbar-brand' [routerLink]=\"['/home']\">MyDiary.WebApp</a>\r\n        </div>\r\n        <div class='clearfix'></div>\r\n        <div class='navbar-collapse collapse'>\r\n            <ul class='nav navbar-nav'>\r\n                <li [routerLinkActive]=\"['link-active']\">\r\n                    <a [routerLink]=\"['/home']\">\r\n                        <span class='glyphicon glyphicon-home'></span> Home\r\n                    </a>\r\n                </li>\r\n                <li [routerLinkActive]=\"['link-active']\">\r\n                    <a [routerLink]=\"['/counter']\">\r\n                        <span class='glyphicon glyphicon-education'></span> Counter\r\n                    </a>\r\n                </li>\r\n                <li [routerLinkActive]=\"['link-active']\">\r\n                    <a [routerLink]=\"['/fetch-data']\">\r\n                        <span class='glyphicon glyphicon-th-list'></span> Fetch data\r\n                    </a>\r\n                </li>\r\n                <li [routerLinkActive]=\"['link-active']\">\r\n                    <a [routerLink]=\"['/notes-list']\">\r\n                        <span class='glyphicon glyphicon-th-list'></span> Notes\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n"},function(e,t,n){(e.exports=n(12)(void 0)).push([e.i,"@media (max-width: 767px) {\r\n    /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\r\n    .body-content {\r\n        padding-top: 50px;\r\n    }\r\n}\r\n",""])},function(e,t,n){var r=n(41);e.exports="string"==typeof r?r:r.toString()},function(e,t){e.exports="<div class='container-fluid'>\r\n    <div class='row'>\r\n        <div class='col-sm-3'>\r\n            <nav-menu></nav-menu>\r\n        </div>\r\n        <div class='col-sm-9 body-content'>\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n"},function(e,t){e.exports=require("os")},function(e,t){e.exports=require("https")},function(e,t){e.exports=require("http")},function(e,t,n){(function(){var t,r,o,i,s,a,u,c,l,p,h,T,f=function(e,t){for(var n in t)m.call(t,n)&&(e[n]=t[n]);function r(){this.constructor=e}return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e},m={}.hasOwnProperty;u=function(){function e(){this.onloadstart=null,this.onprogress=null,this.onabort=null,this.onerror=null,this.onload=null,this.ontimeout=null,this.onloadend=null,this._listeners={}}return e.prototype.onloadstart=null,e.prototype.onprogress=null,e.prototype.onabort=null,e.prototype.onerror=null,e.prototype.onload=null,e.prototype.ontimeout=null,e.prototype.onloadend=null,e.prototype.addEventListener=function(e,t){var n;e=e.toLowerCase(),(n=this._listeners)[e]||(n[e]=[]),this._listeners[e].push(t)},e.prototype.removeEventListener=function(e,t){var n;e=e.toLowerCase(),this._listeners[e]&&-1!==(n=this._listeners[e].indexOf(t))&&this._listeners[e].splice(n,1)},e.prototype.dispatchEvent=function(e){var t,n,r,o,i;if(e.currentTarget=e.target=this,t=e.type,i=this._listeners[t])for(n=0,r=i.length;n<r;n++)(o=i[n]).call(this,e);(o=this["on"+t])&&o.call(this,e)},e}(),l=n(46),p=n(45),h=n(44),T=n(22),a=function(e){function n(e){n.__super__.constructor.call(this),this.onreadystatechange=null,this._anonymous=e&&e.anon,this.readyState=n.UNSENT,this.response=null,this.responseText="",this.responseType="",this.responseURL="",this.status=0,this.statusText="",this.timeout=0,this.upload=new c(this),this._method=null,this._url=null,this._sync=!1,this._headers=null,this._loweredHeaders=null,this._mimeOverride=null,this._request=null,this._response=null,this._responseParts=null,this._responseHeaders=null,this._aborting=null,this._error=null,this._loadedBytes=0,this._totalBytes=0,this._lengthComputable=!1}return f(n,u),n.prototype.onreadystatechange=null,n.prototype.readyState=null,n.prototype.response=null,n.prototype.responseText=null,n.prototype.responseType=null,n.prototype.status=null,n.prototype.timeout=null,n.prototype.upload=null,n.prototype.open=function(e,t,r,o,s){var a;if((e=e.toUpperCase())in this._restrictedMethods)throw new i("HTTP method "+e+" is not allowed in XHR");switch(a=this._parseUrl(t),void 0===r&&(r=!0),this.readyState){case n.UNSENT:case n.OPENED:case n.DONE:break;case n.HEADERS_RECEIVED:case n.LOADING:}this._method=e,this._url=a,this._sync=!r,this._headers={},this._loweredHeaders={},this._mimeOverride=null,this._setReadyState(n.OPENED),this._request=null,this._response=null,this.status=0,this.statusText="",this._responseParts=[],this._responseHeaders=null,this._loadedBytes=0,this._totalBytes=0,this._lengthComputable=!1},n.prototype.setRequestHeader=function(e,r){var o;if(this.readyState!==n.OPENED)throw new t("XHR readyState must be OPENED");o=e.toLowerCase(),this._restrictedHeaders[o]||/^sec\-/.test(o)||/^proxy-/.test(o)?console.warn('Refused to set unsafe header "'+e+'"'):(r=r.toString(),o in this._loweredHeaders?(e=this._loweredHeaders[o],this._headers[e]=this._headers[e]+", "+r):(this._loweredHeaders[o]=e,this._headers[e]=r))},n.prototype.send=function(e){if(this.readyState!==n.OPENED)throw new t("XHR readyState must be OPENED");if(this._request)throw new t("send() already called");switch(this._url.protocol){case"file:":this._sendFile(e);break;case"http:":case"https:":this._sendHttp(e);break;default:throw new r("Unsupported protocol "+this._url.protocol)}},n.prototype.abort=function(){this._request&&(this._request.abort(),this._setError(),this._dispatchProgress("abort"),this._dispatchProgress("loadend"))},n.prototype.getResponseHeader=function(e){var t;return this._responseHeaders&&(t=e.toLowerCase())in this._responseHeaders?this._responseHeaders[t]:null},n.prototype.getAllResponseHeaders=function(){var e,t;return this._responseHeaders?function(){var n,r;for(e in r=[],n=this._responseHeaders)t=n[e],r.push(e+": "+t);return r}.call(this).join("\r\n"):""},n.prototype.overrideMimeType=function(e){if(this.readyState===n.LOADING||this.readyState===n.DONE)throw new t("overrideMimeType() not allowed in LOADING or DONE");this._mimeOverride=e.toLowerCase()},n.prototype.nodejsSet=function(e){var t;if("httpAgent"in e&&(this.nodejsHttpAgent=e.httpAgent),"httpsAgent"in e&&(this.nodejsHttpsAgent=e.httpsAgent),"baseUrl"in e){if(null!==(t=e.baseUrl)&&!T.parse(t,!1,!0).protocol)throw new s("baseUrl must be an absolute URL");this.nodejsBaseUrl=t}},n.nodejsSet=function(e){n.prototype.nodejsSet(e)},n.prototype.UNSENT=0,n.UNSENT=0,n.prototype.OPENED=1,n.OPENED=1,n.prototype.HEADERS_RECEIVED=2,n.HEADERS_RECEIVED=2,n.prototype.LOADING=3,n.LOADING=3,n.prototype.DONE=4,n.DONE=4,n.prototype.nodejsHttpAgent=l.globalAgent,n.prototype.nodejsHttpsAgent=p.globalAgent,n.prototype.nodejsBaseUrl=null,n.prototype._restrictedMethods={CONNECT:!0,TRACE:!0,TRACK:!0},n.prototype._restrictedHeaders={"accept-charset":!0,"accept-encoding":!0,"access-control-request-headers":!0,"access-control-request-method":!0,connection:!0,"content-length":!0,cookie:!0,cookie2:!0,date:!0,dnt:!0,expect:!0,host:!0,"keep-alive":!0,origin:!0,referer:!0,te:!0,trailer:!0,"transfer-encoding":!0,upgrade:!0,"user-agent":!0,via:!0},n.prototype._privateHeaders={"set-cookie":!0,"set-cookie2":!0},n.prototype._userAgent="Mozilla/5.0 ("+h.type()+" "+h.arch()+") node.js/"+process.versions.node+" v8/"+process.versions.v8,n.prototype._setReadyState=function(e){var t;this.readyState=e,t=new o("readystatechange"),this.dispatchEvent(t)},n.prototype._sendFile=function(){if("GET"!==this._url.method)throw new r("The file protocol only supports GET");throw new Error("Protocol file: not implemented")},n.prototype._sendHttp=function(e){if(this._sync)throw new Error("Synchronous XHR processing not implemented");null==e||"GET"!==this._method&&"HEAD"!==this._method?e||(e=""):(console.warn("Discarding entity body for "+this._method+" requests"),e=null),this.upload._setData(e),this._finalizeHeaders(),this._sendHxxpRequest()},n.prototype._sendHxxpRequest=function(){var e,t,n,r;"http:"===this._url.protocol?(t=l,e=this.nodejsHttpAgent):(t=p,e=this.nodejsHttpsAgent),n=t.request({hostname:this._url.hostname,port:this._url.port,path:this._url.path,auth:this._url.auth,method:this._method,headers:this._headers,agent:e}),this._request=n,this.timeout&&n.setTimeout(this.timeout,(r=this,function(){return r._onHttpTimeout(n)})),n.on("response",function(e){return function(t){return e._onHttpResponse(n,t)}}(this)),n.on("error",function(e){return function(t){return e._onHttpRequestError(n,t)}}(this)),this.upload._startUpload(n),this._request===n&&this._dispatchProgress("loadstart")},n.prototype._finalizeHeaders=function(){this._headers.Connection="keep-alive",this._headers.Host=this._url.host,this._anonymous&&(this._headers.Referer="about:blank"),this._headers["User-Agent"]=this._userAgent,this.upload._finalizeHeaders(this._headers,this._loweredHeaders)},n.prototype._onHttpResponse=function(e,t){var r;if(this._request===e){switch(t.statusCode){case 301:case 302:case 303:case 307:case 308:return this._url=this._parseUrl(t.headers.location),this._method="GET","content-type"in this._loweredHeaders&&(delete this._headers[this._loweredHeaders["content-type"]],delete this._loweredHeaders["content-type"]),"Content-Type"in this._headers&&delete this._headers["Content-Type"],delete this._headers["Content-Length"],this.upload._reset(),this._finalizeHeaders(),void this._sendHxxpRequest()}var o;return this._response=t,this._response.on("data",(o=this,function(e){return o._onHttpResponseData(t,e)})),this._response.on("end",function(e){return function(){return e._onHttpResponseEnd(t)}}(this)),this._response.on("close",function(e){return function(){return e._onHttpResponseClose(t)}}(this)),this.responseURL=this._url.href.split("#")[0],this.status=this._response.statusCode,this.statusText=l.STATUS_CODES[this.status],this._parseResponseHeaders(t),(r=this._responseHeaders["content-length"])?(this._totalBytes=parseInt(r),this._lengthComputable=!0):this._lengthComputable=!1,this._setReadyState(n.HEADERS_RECEIVED)}},n.prototype._onHttpResponseData=function(e,t){if(this._response===e)return this._responseParts.push(t),this._loadedBytes+=t.length,this.readyState!==n.LOADING&&this._setReadyState(n.LOADING),this._dispatchProgress("progress")},n.prototype._onHttpResponseEnd=function(e){if(this._response===e)return this._parseResponse(),this._request=null,this._response=null,this._setReadyState(n.DONE),this._dispatchProgress("load"),this._dispatchProgress("loadend")},n.prototype._onHttpResponseClose=function(e){var t;if(this._response===e)return t=this._request,this._setError(),t.abort(),this._setReadyState(n.DONE),this._dispatchProgress("error"),this._dispatchProgress("loadend")},n.prototype._onHttpTimeout=function(e){if(this._request===e)return this._setError(),e.abort(),this._setReadyState(n.DONE),this._dispatchProgress("timeout"),this._dispatchProgress("loadend")},n.prototype._onHttpRequestError=function(e,t){if(this._request===e)return this._setError(),e.abort(),this._setReadyState(n.DONE),this._dispatchProgress("error"),this._dispatchProgress("loadend")},n.prototype._dispatchProgress=function(e){var t;(t=new o(e)).lengthComputable=this._lengthComputable,t.loaded=this._loadedBytes,t.total=this._totalBytes,this.dispatchEvent(t)},n.prototype._setError=function(){this._request=null,this._response=null,this._responseHeaders=null,this._responseParts=null},n.prototype._parseUrl=function(e){var t,n,r,o,i;return t=null===this.nodejsBaseUrl?e:T.resolve(this.nodejsBaseUrl,e),(i=T.parse(t,!1,!0)).hash=null,i.auth&&(void 0!==o&&null!==o||void 0!==r&&null!==r)&&(-1===(n=i.auth.indexOf(":"))?o||(o=i.auth):(o||(o=i.substring(0,n)),r||(r=i.substring(n+1)))),(o||r)&&(i.auth=o+":"+r),i},n.prototype._parseResponseHeaders=function(e){var t,n,r,o;for(n in this._responseHeaders={},r=e.headers)o=r[n],t=n.toLowerCase(),this._privateHeaders[t]||(null!==this._mimeOverride&&"content-type"===t&&(o=this._mimeOverride),this._responseHeaders[t]=o);null===this._mimeOverride||"content-type"in this._responseHeaders||(this._responseHeaders["content-type"]=this._mimeOverride)},n.prototype._parseResponse=function(){var e,t,n,r,o,i;switch(t=Buffer.concat?Buffer.concat(this._responseParts):this._concatBuffers(this._responseParts),this._responseParts=null,this.responseType){case"text":this._parseTextResponse(t);break;case"json":this.responseText=null;try{this.response=JSON.parse(t.toString("utf-8"))}catch(e){e,this.response=null}break;case"buffer":this.responseText=null,this.response=t;break;case"arraybuffer":for(this.responseText=null,e=new ArrayBuffer(t.length),i=new Uint8Array(e),n=r=0,o=t.length;0<=o?r<o:r>o;n=0<=o?++r:--r)i[n]=t[n];this.response=e;break;default:this._parseTextResponse(t)}},n.prototype._parseTextResponse=function(e){try{this.responseText=e.toString(this._parseResponseEncoding())}catch(t){t,this.responseText=e.toString("binary")}this.response=this.responseText},n.prototype._parseResponseEncoding=function(){var e,t;return null,(e=this._responseHeaders["content-type"])&&(t=/\;\s*charset\=(.*)$/.exec(e))?t[1]:"utf-8"},n.prototype._concatBuffers=function(e){var t,n,r,o,i,s,a;if(0===e.length)return new Buffer(0);if(1===e.length)return e[0];for(s=0,n=0,o=e.length;n<o;n++)s+=(t=e[n]).length;for(a=new Buffer(s),s=0,r=0,i=e.length;r<i;r++)(t=e[r]).copy(a,s),s+=t.length;return a},n}(),e.exports=a,a.XMLHttpRequest=a,i=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return f(t,e),t}(Error),a.SecurityError=i,t=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return f(t,e),t}(Error),t=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return f(t,e),t}(Error),a.InvalidStateError=t,r=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return f(t,e),t}(Error),a.SyntaxError=s,s=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return f(t,e),t}(Error),o=function(){function e(e){this.type=e,this.target=null,this.currentTarget=null,this.lengthComputable=!1,this.loaded=0,this.total=0}return e.prototype.bubbles=!1,e.prototype.cancelable=!1,e.prototype.target=null,e.prototype.loaded=null,e.prototype.lengthComputable=null,e.prototype.total=null,e}(),a.ProgressEvent=o,c=function(e){function t(e){t.__super__.constructor.call(this),this._request=e,this._reset()}return f(t,u),t.prototype._reset=function(){this._contentType=null,this._body=null},t.prototype._setData=function(e){var t,n,r,o,i,s,a,u;if(void 0!==e&&null!==e)if("string"==typeof e)0!==e.length&&(this._contentType="text/plain;charset=UTF-8"),this._body=new Buffer(e,"utf8");else if(Buffer.isBuffer(e))this._body=e;else if(e instanceof ArrayBuffer){for(t=new Buffer(e.byteLength),u=new Uint8Array(e),n=r=0,s=e.byteLength;0<=s?r<s:r>s;n=0<=s?++r:--r)t[n]=u[n];this._body=t}else{if(!(e.buffer&&e.buffer instanceof ArrayBuffer))throw new Error("Unsupported send() data "+e);for(t=new Buffer(e.byteLength),i=e.byteOffset,u=new Uint8Array(e.buffer),n=o=0,a=e.byteLength;0<=a?o<a:o>a;n=0<=a?++o:--o)t[n]=u[n+i];this._body=t}},t.prototype._finalizeHeaders=function(e,t){this._contentType&&("content-type"in t||(e["Content-Type"]=this._contentType)),this._body&&(e["Content-Length"]=this._body.length.toString())},t.prototype._startUpload=function(e){this._body&&e.write(this._body),e.end()},t}(),a.XMLHttpRequestUpload=c}).call(this)},function(e,t,n){"use strict";var r=n(7),o=n(19),i=n(6),s=n(2),a=s.TAG_NAMES,u=s.NAMESPACES,c=e.exports=function(e){this.tokenizer=e,this.namespaceStack=[],this.namespaceStackTop=-1,this._enterNamespace(u.HTML)};c.prototype.getNextToken=function(){var e=this.tokenizer.getNextToken();if(e.type===r.START_TAG_TOKEN)this._handleStartTagToken(e);else if(e.type===r.END_TAG_TOKEN)this._handleEndTagToken(e);else if(e.type===r.NULL_CHARACTER_TOKEN&&this.inForeignContent)e.type=r.CHARACTER_TOKEN,e.chars=i.REPLACEMENT_CHARACTER;else if(this.skipNextNewLine&&(e.type!==r.HIBERNATION_TOKEN&&(this.skipNextNewLine=!1),e.type===r.WHITESPACE_CHARACTER_TOKEN&&"\n"===e.chars[0])){if(1===e.chars.length)return this.getNextToken();e.chars=e.chars.substr(1)}return e},c.prototype._enterNamespace=function(e){this.namespaceStackTop++,this.namespaceStack.push(e),this.inForeignContent=e!==u.HTML,this.currentNamespace=e,this.tokenizer.allowCDATA=this.inForeignContent},c.prototype._leaveCurrentNamespace=function(){this.namespaceStackTop--,this.namespaceStack.pop(),this.currentNamespace=this.namespaceStack[this.namespaceStackTop],this.inForeignContent=this.currentNamespace!==u.HTML,this.tokenizer.allowCDATA=this.inForeignContent},c.prototype._ensureTokenizerMode=function(e){e===a.TEXTAREA||e===a.TITLE?this.tokenizer.state=r.MODE.RCDATA:e===a.PLAINTEXT?this.tokenizer.state=r.MODE.PLAINTEXT:e===a.SCRIPT?this.tokenizer.state=r.MODE.SCRIPT_DATA:e!==a.STYLE&&e!==a.IFRAME&&e!==a.XMP&&e!==a.NOEMBED&&e!==a.NOFRAMES&&e!==a.NOSCRIPT||(this.tokenizer.state=r.MODE.RAWTEXT)},c.prototype._handleStartTagToken=function(e){var t=e.tagName;if(t===a.SVG?this._enterNamespace(u.SVG):t===a.MATH&&this._enterNamespace(u.MATHML),this.inForeignContent){if(o.causesExit(e))return void this._leaveCurrentNamespace();var n=this.currentNamespace;n===u.MATHML?o.adjustTokenMathMLAttrs(e):n===u.SVG&&(o.adjustTokenSVGTagName(e),o.adjustTokenSVGAttrs(e)),o.adjustTokenXMLAttrs(e),t=e.tagName,!e.selfClosing&&o.isIntegrationPoint(t,n,e.attrs)&&this._enterNamespace(u.HTML)}else t===a.PRE||t===a.TEXTAREA||t===a.LISTING?this.skipNextNewLine=!0:t===a.IMAGE&&(e.tagName=a.IMG),this._ensureTokenizerMode(t)},c.prototype._handleEndTagToken=function(e){var t=e.tagName;if(this.inForeignContent)(t===a.SVG&&this.currentNamespace===u.SVG||t===a.MATH&&this.currentNamespace===u.MATHML)&&this._leaveCurrentNamespace();else{var n=this.namespaceStack[this.namespaceStackTop-1];n===u.SVG&&o.SVG_TAG_NAMES_ADJUSTMENT_MAP[t]&&(t=o.SVG_TAG_NAMES_ADJUSTMENT_MAP[t]),o.isIntegrationPoint(t,n,e.attrs)&&this._leaveCurrentNamespace()}this.currentNamespace===u.SVG&&o.adjustTokenSVGTagName(e)}},function(e,t,n){"use strict";var r=n(10).Writable,o=n(5),i=e.exports=function(){r.call(this)};o.inherits(i,r),i.prototype._write=function(e,t,n){n()}},function(e,t,n){"use strict";var r=n(10).Transform,o=n(49),i=n(5).inherits,s=n(7),a=n(48),u=n(13),c={locationInfo:!1},l=e.exports=function(e){r.call(this),this.options=u(c,e),this.tokenizer=new s(e),this.parserFeedbackSimulator=new a(this.tokenizer),this.pendingText=null,this.currentTokenLocation=void 0,this.lastChunkWritten=!1,this.stopped=!1,this.pipe(new o)};i(l,r),l.prototype._transform=function(e,t,n){this.stopped||(this.tokenizer.write(e.toString("utf8"),this.lastChunkWritten),this._runParsingLoop()),this.push(e),n()},l.prototype._flush=function(e){e()},l.prototype.end=function(e,t,n){this.lastChunkWritten=!0,r.prototype.end.call(this,e,t,n)},l.prototype.stop=function(){this.stopped=!0},l.prototype._runParsingLoop=function(){do{var e=this.parserFeedbackSimulator.getNextToken();if(e.type===s.HIBERNATION_TOKEN)break;e.type===s.CHARACTER_TOKEN||e.type===s.WHITESPACE_CHARACTER_TOKEN||e.type===s.NULL_CHARACTER_TOKEN?(this.options.locationInfo&&(null===this.pendingText?this.currentTokenLocation=e.location:this.currentTokenLocation.endOffset=e.location.endOffset),this.pendingText=(this.pendingText||"")+e.chars):(this._emitPendingText(),this._handleToken(e))}while(!this.stopped&&e.type!==s.EOF_TOKEN)},l.prototype._handleToken=function(e){this.options.locationInfo&&(this.currentTokenLocation=e.location),e.type===s.START_TAG_TOKEN?this.emit("startTag",e.tagName,e.attrs,e.selfClosing,this.currentTokenLocation):e.type===s.END_TAG_TOKEN?this.emit("endTag",e.tagName,this.currentTokenLocation):e.type===s.COMMENT_TOKEN?this.emit("comment",e.data,this.currentTokenLocation):e.type===s.DOCTYPE_TOKEN&&this.emit("doctype",e.name,e.publicId,e.systemId,this.currentTokenLocation)},l.prototype._emitPendingText=function(){null!==this.pendingText&&(this.emit("text",this.pendingText,this.currentTokenLocation),this.pendingText=null)}},function(e,t,n){"use strict";var r=n(10).Readable,o=n(5).inherits,i=n(18),s=e.exports=function(e,t){r.call(this),this.serializer=new i(e,t),Object.defineProperty(this.serializer,"html",{get:function(){return""},set:this.push.bind(this)})};o(s,r),s.prototype._read=function(){this.serializer.serialize(),this.push(null)}},function(e,t,n){"use strict";var r=n(17),o=n(5).inherits,i=n(2).TAG_NAMES;o(e.exports=function(e){r.call(this,e),this.parser._insertFakeElement(i.HTML),this.parser._insertFakeElement(i.HEAD),this.parser.openElements.pop(),this.parser._insertFakeElement(i.BODY),this.parser._insertFakeElement(i.PRE),this.parser.treeAdapter.insertText(this.parser.openElements.current,"\n"),this.parser.switchToPlaintextParsing()},r)},function(e,t,n){"use strict";var r=n(14),o=n(2).DOCUMENT_MODE,i={element:1,text:3,cdata:4,comment:8},s={tagName:"name",childNodes:"children",parentNode:"parent",previousSibling:"prev",nextSibling:"next",nodeValue:"data"},a=function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t])};a.prototype={get firstChild(){var e=this.children;return e&&e[0]||null},get lastChild(){var e=this.children;return e&&e[e.length-1]||null},get nodeType(){return i[this.type]||i.element}},Object.keys(s).forEach(function(e){var t=s[e];Object.defineProperty(a.prototype,e,{get:function(){return this[t]||null},set:function(e){return this[t]=e,e}})}),t.createDocument=function(){return new a({type:"root",name:"root",parent:null,prev:null,next:null,children:[],"x-mode":o.NO_QUIRKS})},t.createDocumentFragment=function(){return new a({type:"root",name:"root",parent:null,prev:null,next:null,children:[]})},t.createElement=function(e,t,n){for(var r=Object.create(null),o=Object.create(null),i=Object.create(null),s=0;s<n.length;s++){var u=n[s].name;r[u]=n[s].value,o[u]=n[s].namespace,i[u]=n[s].prefix}return new a({type:"script"===e||"style"===e?e:"tag",name:e,namespace:t,attribs:r,"x-attribsNamespace":o,"x-attribsPrefix":i,children:[],parent:null,prev:null,next:null})},t.createCommentNode=function(e){return new a({type:"comment",data:e,parent:null,prev:null,next:null})};var u=function(e){return new a({type:"text",data:e,parent:null,prev:null,next:null})},c=t.appendChild=function(e,t){var n=e.children[e.children.length-1];n&&(n.next=t,t.prev=n),e.children.push(t),t.parent=e},l=t.insertBefore=function(e,t,n){var r=e.children.indexOf(n),o=n.prev;o&&(o.next=t,t.prev=o),n.prev=t,t.next=n,e.children.splice(r,0,t),t.parent=e};t.setTemplateContent=function(e,t){c(e,t)},t.getTemplateContent=function(e){return e.children[0]},t.setDocumentType=function(e,t,n,o){for(var i=r.serializeContent(t,n,o),s=null,u=0;u<e.children.length;u++)if("directive"===e.children[u].type&&"!doctype"===e.children[u].name){s=e.children[u];break}s?(s.data=i,s["x-name"]=t,s["x-publicId"]=n,s["x-systemId"]=o):c(e,new a({type:"directive",name:"!doctype",data:i,"x-name":t,"x-publicId":n,"x-systemId":o}))},t.setDocumentMode=function(e,t){e["x-mode"]=t},t.getDocumentMode=function(e){return e["x-mode"]},t.detachNode=function(e){if(e.parent){var t=e.parent.children.indexOf(e),n=e.prev,r=e.next;e.prev=null,e.next=null,n&&(n.next=r),r&&(r.prev=n),e.parent.children.splice(t,1),e.parent=null}},t.insertText=function(e,t){var n=e.children[e.children.length-1];n&&"text"===n.type?n.data+=t:c(e,u(t))},t.insertTextBefore=function(e,t,n){var r=e.children[e.children.indexOf(n)-1];r&&"text"===r.type?r.data+=t:l(e,u(t),n)},t.adoptAttributes=function(e,t){for(var n=0;n<t.length;n++){var r=t[n].name;void 0===e.attribs[r]&&(e.attribs[r]=t[n].value,e["x-attribsNamespace"][r]=t[n].namespace,e["x-attribsPrefix"][r]=t[n].prefix)}},t.getFirstChild=function(e){return e.children[0]},t.getChildNodes=function(e){return e.children},t.getParentNode=function(e){return e.parent},t.getAttrList=function(e){var t=[];for(var n in e.attribs)t.push({name:n,value:e.attribs[n],namespace:e["x-attribsNamespace"][n],prefix:e["x-attribsPrefix"][n]});return t},t.getTagName=function(e){return e.name},t.getNamespaceURI=function(e){return e.namespace},t.getTextNodeContent=function(e){return e.data},t.getCommentNodeContent=function(e){return e.data},t.getDocumentTypeNodeName=function(e){return e["x-name"]},t.getDocumentTypeNodePublicId=function(e){return e["x-publicId"]},t.getDocumentTypeNodeSystemId=function(e){return e["x-systemId"]},t.isTextNode=function(e){return"text"===e.type},t.isCommentNode=function(e){return"comment"===e.type},t.isDocumentTypeNode=function(e){return"directive"===e.type&&"!doctype"===e.name},t.isElementNode=function(e){return!!e.attribs}},function(e,t,n){"use strict";var r=n(20),o=n(7),i=n(2).TAG_NAMES;t.assign=function(e){var t=Object.getPrototypeOf(e),n=e.treeAdapter,s=null,a=null,u=null;function c(t,r){var i=t.__location;if(i)if(i.startTag||(i.startTag={line:i.line,col:i.col,startOffset:i.startOffset,endOffset:i.endOffset},i.attrs&&(i.startTag.attrs=i.attrs)),r.location){var s=r.location,a=n.getTagName(t),u=r.type===o.END_TAG_TOKEN&&a===r.tagName;u&&(i.endTag={line:s.line,col:s.col,startOffset:s.startOffset,endOffset:s.endOffset}),i.endOffset=u?s.endOffset:s.startOffset}else r.type===o.EOF_TOKEN&&(i.endOffset=e.tokenizer.preprocessor.sourcePos)}e._bootstrap=function(n,o){t._bootstrap.call(this,n,o),s=null,a=null,u=null,e.openElements.pop=function(){c(this.current,u),r.prototype.pop.call(this)},e.openElements.popAllUpToHtmlElement=function(){for(var e=this.stackTop;e>0;e--)c(this.items[e],u);r.prototype.popAllUpToHtmlElement.call(this)},e.openElements.remove=function(e){c(e,u),r.prototype.remove.call(this,e)}},e._runParsingLoop=function(n){t._runParsingLoop.call(this,n);for(var r=e.openElements.stackTop;r>=0;r--)c(e.openElements.items[r],u)},e._processTokenInForeignContent=function(e){u=e,t._processTokenInForeignContent.call(this,e)},e._processToken=function(e){if(u=e,t._processToken.call(this,e),e.type===o.END_TAG_TOKEN&&(e.tagName===i.HTML||e.tagName===i.BODY&&this.openElements.hasInScope(i.BODY)))for(var n=this.openElements.stackTop;n>=0;n--){var r=this.openElements.items[n];if(this.treeAdapter.getTagName(r)===e.tagName){c(r,e);break}}},e._setDocumentType=function(e){t._setDocumentType.call(this,e);for(var n=this.treeAdapter.getChildNodes(this.document),r=n.length,o=0;o<r;o++){var i=n[o];if(this.treeAdapter.isDocumentTypeNode(i)){i.__location=e.location;break}}},e._attachElementToTree=function(e){e.__location=s||null,s=null,t._attachElementToTree.call(this,e)},e._appendElement=function(e,n){s=e.location,t._appendElement.call(this,e,n)},e._insertElement=function(e,n){s=e.location,t._insertElement.call(this,e,n)},e._insertTemplate=function(e){s=e.location,t._insertTemplate.call(this,e),this.treeAdapter.getTemplateContent(this.openElements.current).__location=null},e._insertFakeRootElement=function(){t._insertFakeRootElement.call(this),this.openElements.current.__location=null},e._appendCommentNode=function(e,n){t._appendCommentNode.call(this,e,n);var r=this.treeAdapter.getChildNodes(n);r[r.length-1].__location=e.location},e._findFosterParentingLocation=function(){return a=t._findFosterParentingLocation.call(this)},e._insertCharacters=function(e){t._insertCharacters.call(this,e);var n=this._shouldFosterParentOnInsertion(),r=n&&a.parent||this.openElements.currentTmplContent||this.openElements.current,o=this.treeAdapter.getChildNodes(r),i=o[n&&a.beforeElement?o.indexOf(a.beforeElement)-1:o.length-1];i.__location?i.__location.endOffset=e.location.endOffset:i.__location=e.location}}},function(e,t,n){"use strict";var r=e.exports=function(e){this.length=0,this.entries=[],this.treeAdapter=e,this.bookmark=null};r.MARKER_ENTRY="MARKER_ENTRY",r.ELEMENT_ENTRY="ELEMENT_ENTRY",r.prototype._getNoahArkConditionCandidates=function(e){var t=[];if(this.length>=3)for(var n=this.treeAdapter.getAttrList(e).length,o=this.treeAdapter.getTagName(e),i=this.treeAdapter.getNamespaceURI(e),s=this.length-1;s>=0;s--){var a=this.entries[s];if(a.type===r.MARKER_ENTRY)break;var u=a.element,c=this.treeAdapter.getAttrList(u);this.treeAdapter.getTagName(u)===o&&this.treeAdapter.getNamespaceURI(u)===i&&c.length===n&&t.push({idx:s,attrs:c})}return t.length<3?[]:t},r.prototype._ensureNoahArkCondition=function(e){var t=this._getNoahArkConditionCandidates(e),n=t.length;if(n){for(var r=this.treeAdapter.getAttrList(e),o=r.length,i=Object.create(null),s=0;s<o;s++){var a=r[s];i[a.name]=a.value}for(s=0;s<o;s++)for(var u=0;u<n;u++){var c=t[u].attrs[s];if(i[c.name]!==c.value&&(t.splice(u,1),n--),t.length<3)return}for(s=n-1;s>=2;s--)this.entries.splice(t[s].idx,1),this.length--}},r.prototype.insertMarker=function(){this.entries.push({type:r.MARKER_ENTRY}),this.length++},r.prototype.pushElement=function(e,t){this._ensureNoahArkCondition(e),this.entries.push({type:r.ELEMENT_ENTRY,element:e,token:t}),this.length++},r.prototype.insertElementAfterBookmark=function(e,t){for(var n=this.length-1;n>=0&&this.entries[n]!==this.bookmark;n--);this.entries.splice(n+1,0,{type:r.ELEMENT_ENTRY,element:e,token:t}),this.length++},r.prototype.removeEntry=function(e){for(var t=this.length-1;t>=0;t--)if(this.entries[t]===e){this.entries.splice(t,1),this.length--;break}},r.prototype.clearToLastMarker=function(){for(;this.length;){var e=this.entries.pop();if(this.length--,e.type===r.MARKER_ENTRY)break}},r.prototype.getElementEntryInScopeWithTagName=function(e){for(var t=this.length-1;t>=0;t--){var n=this.entries[t];if(n.type===r.MARKER_ENTRY)return null;if(this.treeAdapter.getTagName(n.element)===e)return n}return null},r.prototype.getElementEntry=function(e){for(var t=this.length-1;t>=0;t--){var n=this.entries[t];if(n.type===r.ELEMENT_ENTRY&&n.element===e)return n}return null}},function(e,t,n){"use strict";e.exports=new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4e3,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,1e4,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13e3,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204])},function(e,t,n){"use strict";var r=n(6).CODE_POINTS;t.assign=function(e){var t=Object.getPrototypeOf(e),n=-1,o=-1,i=1,s=!1,a=0,u=-1,c=1;function l(e){e.location={line:i,col:o,startOffset:n,endOffset:-1}}e._consume=function(){var e=t._consume.call(this);return s&&(s=!1,c++,a=this.preprocessor.sourcePos),e===r.LINE_FEED&&(s=!0),u=this.preprocessor.sourcePos-a+1,e},e._unconsume=function(){t._unconsume.call(this),s=!1,u=this.preprocessor.sourcePos-a+1},e._createStartTagToken=function(){t._createStartTagToken.call(this),l(this.currentToken)},e._createEndTagToken=function(){t._createEndTagToken.call(this),l(this.currentToken)},e._createCommentToken=function(){t._createCommentToken.call(this),l(this.currentToken)},e._createDoctypeToken=function(e){t._createDoctypeToken.call(this,e),l(this.currentToken)},e._createCharacterToken=function(e,n){t._createCharacterToken.call(this,e,n),l(this.currentCharacterToken)},e._createAttr=function(e){t._createAttr.call(this,e),this.currentAttrLocation={line:c,col:u,startOffset:this.preprocessor.sourcePos,endOffset:-1}},e._leaveAttrName=function(e){t._leaveAttrName.call(this,e),this._attachCurrentAttrLocationInfo()},e._leaveAttrValue=function(e){t._leaveAttrValue.call(this,e),this._attachCurrentAttrLocationInfo()},e._attachCurrentAttrLocationInfo=function(){this.currentAttrLocation.endOffset=this.preprocessor.sourcePos,this.currentToken.location.attrs||(this.currentToken.location.attrs=Object.create(null)),this.currentToken.location.attrs[this.currentAttr.name]=this.currentAttrLocation},e._emitCurrentToken=function(){this.currentCharacterToken&&(this.currentCharacterToken.location.endOffset=this.currentToken.location.startOffset),this.currentToken.location.endOffset=this.preprocessor.sourcePos+1,t._emitCurrentToken.call(this)},e._emitCurrentCharacterToken=function(){this.currentCharacterToken&&-1===this.currentCharacterToken.location.endOffset&&(this.currentCharacterToken.location.endOffset=this.preprocessor.sourcePos),t._emitCurrentCharacterToken.call(this)},Object.keys(t.MODE).map(function(e){return t.MODE[e]}).forEach(function(r){e[r]=function(e){n=this.preprocessor.sourcePos,i=c,o=u,t[r].call(this,e)}})}},function(e,t,n){"use strict";var r=n(6).CODE_POINTS;var o=e.exports=function(){this.html=null,this.pos=-1,this.lastGapPos=-1,this.lastCharPos=-1,this.droppedBufferSize=0,this.gapStack=[],this.skipNextNewLine=!1,this.lastChunkWritten=!1,this.endOfChunkHit=!1,this.bufferWaterline=65536};Object.defineProperty(o.prototype,"sourcePos",{get:function(){return this.droppedBufferSize+this.pos}}),o.prototype.dropParsedChunk=function(){this.pos>this.bufferWaterline&&(this.lastCharPos-=this.pos,this.droppedBufferSize+=this.pos,this.html=this.html.substring(this.pos),this.pos=0,this.lastGapPos=-1,this.gapStack=[])},o.prototype._addGap=function(){this.gapStack.push(this.lastGapPos),this.lastGapPos=this.pos},o.prototype._processHighRangeCodePoint=function(e){if(this.pos!==this.lastCharPos){var t=this.html.charCodeAt(this.pos+1);o=t,(n=e)>=55296&&n<=56319&&o>=56320&&o<=57343&&(this.pos++,e=function(e,t){return 1024*(e-55296)+9216+t}(e,t),this._addGap())}else if(!this.lastChunkWritten)return this.endOfChunkHit=!0,r.EOF;var n,o;return e},o.prototype.write=function(e,t){this.html?this.html+=e:this.html=e,this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1,this.lastChunkWritten=t},o.prototype.insertHtmlAtCurrentPos=function(e){this.html=this.html.substring(0,this.pos+1)+e+this.html.substring(this.pos+1,this.html.length),this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1},o.prototype.advance=function(){if(this.pos++,this.pos>this.lastCharPos)return this.lastChunkWritten||(this.endOfChunkHit=!0),r.EOF;var e=this.html.charCodeAt(this.pos);return this.skipNextNewLine&&e===r.LINE_FEED?(this.skipNextNewLine=!1,this._addGap(),this.advance()):e===r.CARRIAGE_RETURN?(this.skipNextNewLine=!0,r.LINE_FEED):(this.skipNextNewLine=!1,e>=55296?this._processHighRangeCodePoint(e):e)},o.prototype.retreat=function(){this.pos===this.lastGapPos&&(this.lastGapPos=this.gapStack.pop(),this.pos--),this.pos--}},function(e,t,n){e.exports=n(1)(4)},function(e,t,n){"use strict";var r=n(59);t.toPromise=function(e){var t=this;if(e||(r.root.Rx&&r.root.Rx.config&&r.root.Rx.config.Promise?e=r.root.Rx.config.Promise:r.root.Promise&&(e=r.root.Promise)),!e)throw new Error("no Promise impl found");return new e(function(e,n){var r;t.subscribe(function(e){return r=e},function(e){return n(e)},function(){return e(r)})})}},function(e,t,n){e.exports=n(1)(82)},function(e,t,n){e.exports=n(1)(6)},function(e,t,n){
/**
 * @license Angular v4.2.5
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
!function(e,t,n,r,o){"use strict";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */var i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};function s(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}
/**
 * @license Angular v4.2.5
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var a=function(e){function n(n){var r=e.call(this)||this;r._nextAnimationId=0;var o={id:"0",encapsulation:t.ViewEncapsulation.None,styles:[],data:{animation:[]}};return r._renderer=n.createRenderer(document.body,o),r}return s(n,e),n.prototype.build=function(e){var t=this._nextAnimationId.toString();this._nextAnimationId++;var n=Array.isArray(e)?r.sequence(e):e;return l(this._renderer,null,t,"register",[n]),new u(t,this._renderer)},n}(r.AnimationBuilder);a.decorators=[{type:t.Injectable}],a.ctorParameters=function(){return[{type:t.RendererFactory2}]};var u=function(e){function t(t,n){var r=e.call(this)||this;return r._id=t,r._renderer=n,r}return s(t,e),t.prototype.create=function(e,t){return new c(this._id,e,t||{},this._renderer)},t}(r.AnimationFactory),c=function(){function e(e,t,n,r){this.id=e,this.element=t,this._renderer=r,this.parentPlayer=null,this._started=!1,this.totalTime=0,this._command("create",n)}return e.prototype._listen=function(e,t){return this._renderer.listen(this.element,"@@"+this.id+":"+e,t)},e.prototype._command=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return l(this._renderer,this.element,this.id,e,t)},e.prototype.onDone=function(e){this._listen("done",e)},e.prototype.onStart=function(e){this._listen("start",e)},e.prototype.onDestroy=function(e){this._listen("destroy",e)},e.prototype.init=function(){this._command("init")},e.prototype.hasStarted=function(){return this._started},e.prototype.play=function(){this._command("play"),this._started=!0},e.prototype.pause=function(){this._command("pause")},e.prototype.restart=function(){this._command("restart")},e.prototype.finish=function(){this._command("finish")},e.prototype.destroy=function(){this._command("destroy")},e.prototype.reset=function(){this._command("reset")},e.prototype.setPosition=function(e){this._command("setPosition",e)},e.prototype.getPosition=function(){return 0},e}();function l(e,t,n,r,o){return e.setProperty(t,"@@"+n+":"+r,o)}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var p=function(){function e(e,t,n){this.delegate=e,this.engine=t,this._zone=n,this._currentId=0,this._microtaskId=1,this._animationCallbacksBuffer=[],this._rendererCache=new Map,t.onRemovalComplete=function(e,t){t&&t.parentNode(e)&&t.removeChild(e.parentNode,e)}}return e.prototype.createRenderer=function(e,t){var n=this,r=this.delegate.createRenderer(e,t);if(!(e&&t&&t.data&&t.data.animation)){var o=this._rendererCache.get(r);return o||(o=new h("",r,this.engine),this._rendererCache.set(r,o)),o}var i=t.id,s=t.id+"-"+this._currentId;this._currentId++,this.engine.register(s,e);var a=t.data.animation;return a.forEach(function(t){return n.engine.registerTrigger(i,s,e,t.name,t)}),new T(this,s,r,this.engine)},e.prototype.begin=function(){this.delegate.begin&&this.delegate.begin()},e.prototype._scheduleCountTask=function(){var e=this;Zone.current.scheduleMicroTask("incremenet the animation microtask",function(){return e._microtaskId++})},e.prototype.scheduleListenerCallback=function(e,t,n){var r=this;e>=0&&e<this._microtaskId?this._zone.run(function(){return t(n)}):(0==this._animationCallbacksBuffer.length&&Promise.resolve(null).then(function(){r._zone.run(function(){r._animationCallbacksBuffer.forEach(function(e){var t=e[0],n=e[1];t(n)}),r._animationCallbacksBuffer=[]})}),this._animationCallbacksBuffer.push([t,n]))},e.prototype.end=function(){var e=this;this._zone.runOutsideAngular(function(){e._scheduleCountTask(),e.engine.flush(e._microtaskId)}),this.delegate.end&&this.delegate.end()},e.prototype.whenRenderingDone=function(){return this.engine.whenRenderingDone()},e}();p.decorators=[{type:t.Injectable}],p.ctorParameters=function(){return[{type:t.RendererFactory2},{type:o.ɵAnimationEngine},{type:t.NgZone}]};var h=function(){function e(e,t,n){this.namespaceId=e,this.delegate=t,this.engine=n,this.destroyNode=this.delegate.destroyNode?function(e){return t.destroyNode(e)}:null}return Object.defineProperty(e.prototype,"data",{get:function(){return this.delegate.data},enumerable:!0,configurable:!0}),e.prototype.destroy=function(){this.engine.destroy(this.namespaceId,this.delegate),this.delegate.destroy()},e.prototype.createElement=function(e,t){return this.delegate.createElement(e,t)},e.prototype.createComment=function(e){return this.delegate.createComment(e)},e.prototype.createText=function(e){return this.delegate.createText(e)},e.prototype.appendChild=function(e,t){this.delegate.appendChild(e,t),this.engine.onInsert(this.namespaceId,t,e,!1)},e.prototype.insertBefore=function(e,t,n){this.delegate.insertBefore(e,t,n),this.engine.onInsert(this.namespaceId,t,e,!0)},e.prototype.removeChild=function(e,t){this.engine.onRemove(this.namespaceId,t,this.delegate)},e.prototype.selectRootElement=function(e){return this.delegate.selectRootElement(e)},e.prototype.parentNode=function(e){return this.delegate.parentNode(e)},e.prototype.nextSibling=function(e){return this.delegate.nextSibling(e)},e.prototype.setAttribute=function(e,t,n,r){this.delegate.setAttribute(e,t,n,r)},e.prototype.removeAttribute=function(e,t,n){this.delegate.removeAttribute(e,t,n)},e.prototype.addClass=function(e,t){this.delegate.addClass(e,t)},e.prototype.removeClass=function(e,t){this.delegate.removeClass(e,t)},e.prototype.setStyle=function(e,t,n,r){this.delegate.setStyle(e,t,n,r)},e.prototype.removeStyle=function(e,t,n){this.delegate.removeStyle(e,t,n)},e.prototype.setProperty=function(e,t,n){this.delegate.setProperty(e,t,n)},e.prototype.setValue=function(e,t){this.delegate.setValue(e,t)},e.prototype.listen=function(e,t,n){return this.delegate.listen(e,t,n)},e}(),T=function(e){function t(t,n,r,o){var i=e.call(this,n,r,o)||this;return i.factory=t,i.namespaceId=n,i}return s(t,e),t.prototype.setProperty=function(e,t,n){"@"==t.charAt(0)?(t=t.substr(1),this.engine.setProperty(this.namespaceId,e,t,n)):this.delegate.setProperty(e,t,n)},t.prototype.listen=function(e,t,n){var r,o=this;if("@"==t.charAt(0)){var i=function(e){switch(e){case"body":return document.body;case"document":return document;case"window":return window;default:return e}}(e),s=t.substr(1),a="";return"@"!=s.charAt(0)&&(r=function(e){var t=e.indexOf("."),n=e.substring(0,t),r=e.substr(t+1);return[n,r]}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */(s),s=r[0],a=r[1]),this.engine.listen(this.namespaceId,i,s,a,function(e){var t=e._data||-1;o.factory.scheduleListenerCallback(t,n,e)})}return this.delegate.listen(e,t,n)},t}(h),f=function(e){function t(t,n){return e.call(this,t,n)||this}return s(t,e),t}(o.ɵAnimationEngine);function m(){return o.ɵsupportsWebAnimations()?new o.ɵWebAnimationsDriver:new o.ɵNoopAnimationDriver}function d(){return new o.ɵWebAnimationsStyleNormalizer}function E(e,t,n){return new p(e,t,n)}f.decorators=[{type:t.Injectable}],f.ctorParameters=function(){return[{type:o.AnimationDriver},{type:o.ɵAnimationStyleNormalizer}]};var _=[{provide:r.AnimationBuilder,useClass:a},{provide:o.ɵAnimationStyleNormalizer,useFactory:d},{provide:o.ɵAnimationEngine,useClass:f},{provide:t.RendererFactory2,useFactory:E,deps:[n.ɵDomRendererFactory2,o.ɵAnimationEngine,t.NgZone]}],A=[{provide:o.AnimationDriver,useFactory:m}].concat(_),y=[{provide:o.AnimationDriver,useClass:o.ɵNoopAnimationDriver}].concat(_),g=function(){};g.decorators=[{type:t.NgModule,args:[{imports:[n.BrowserModule],providers:A}]}],g.ctorParameters=function(){return[]};var N=function(){};N.decorators=[{type:t.NgModule,args:[{imports:[n.BrowserModule],providers:y}]}],N.ctorParameters=function(){return[]},e.BrowserAnimationsModule=g,e.NoopAnimationsModule=N,e.ɵBrowserAnimationBuilder=a,e.ɵBrowserAnimationFactory=u,e.ɵAnimationRenderer=T,e.ɵAnimationRendererFactory=p,e.ɵa=h,e.ɵf=A,e.ɵg=y,e.ɵb=f,e.ɵd=d,e.ɵe=E,e.ɵc=m,Object.defineProperty(e,"__esModule",{value:!0})}(t,n(0),n(25),n(23),n(24))},function(e,t,n){e.exports=n(1)(20)},function(e,t,n){"use strict";var r=n(27),o=n(26);r.Observable.prototype.first=o.first},function(e,t,n){e.exports=n(1)(47)},function(e,t){
/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var n;!function(e){"use strict";var t,n=Object.prototype.hasOwnProperty,r="function"==typeof Symbol,o=r&&void 0!==Symbol.toPrimitive?Symbol.toPrimitive:"@@toPrimitive",i=r&&void 0!==Symbol.iterator?Symbol.iterator:"@@iterator";!function(e){var t="function"==typeof Object.create,r={__proto__:[]}instanceof Array,o=!t&&!r;e.create=t?function(){return M(Object.create(null))}:r?function(){return M({__proto__:null})}:function(){return M({})},e.has=o?function(e,t){return n.call(e,t)}:function(e,t){return t in e},e.get=o?function(e,t){return n.call(e,t)?e[t]:void 0}:function(e,t){return e[t]}}(t||(t={}));var s=Object.getPrototypeOf(Function),a="object"==typeof process&&process.env&&"true"===process.env.REFLECT_METADATA_USE_MAP_POLYFILL,u=a||"function"!=typeof Map||"function"!=typeof Map.prototype.entries?function(){var e={},t=[],n=function(){function e(e,t,n){this._index=0,this._keys=e,this._values=t,this._selector=n}return e.prototype["@@iterator"]=function(){return this},e.prototype[i]=function(){return this},e.prototype.next=function(){var e=this._index;if(e>=0&&e<this._keys.length){var n=this._selector(this._keys[e],this._values[e]);return e+1>=this._keys.length?(this._index=-1,this._keys=t,this._values=t):this._index++,{value:n,done:!1}}return{value:void 0,done:!0}},e.prototype.throw=function(e){throw this._index>=0&&(this._index=-1,this._keys=t,this._values=t),e},e.prototype.return=function(e){return this._index>=0&&(this._index=-1,this._keys=t,this._values=t),{value:e,done:!0}},e}();return function(){function t(){this._keys=[],this._values=[],this._cacheKey=e,this._cacheIndex=-2}return Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.has=function(e){return this._find(e,!1)>=0},t.prototype.get=function(e){var t=this._find(e,!1);return t>=0?this._values[t]:void 0},t.prototype.set=function(e,t){var n=this._find(e,!0);return this._values[n]=t,this},t.prototype.delete=function(t){var n=this._find(t,!1);if(n>=0){for(var r=this._keys.length,o=n+1;o<r;o++)this._keys[o-1]=this._keys[o],this._values[o-1]=this._values[o];return this._keys.length--,this._values.length--,t===this._cacheKey&&(this._cacheKey=e,this._cacheIndex=-2),!0}return!1},t.prototype.clear=function(){this._keys.length=0,this._values.length=0,this._cacheKey=e,this._cacheIndex=-2},t.prototype.keys=function(){return new n(this._keys,this._values,r)},t.prototype.values=function(){return new n(this._keys,this._values,o)},t.prototype.entries=function(){return new n(this._keys,this._values,s)},t.prototype["@@iterator"]=function(){return this.entries()},t.prototype[i]=function(){return this.entries()},t.prototype._find=function(e,t){return this._cacheKey!==e&&(this._cacheIndex=this._keys.indexOf(this._cacheKey=e)),this._cacheIndex<0&&t&&(this._cacheIndex=this._keys.length,this._keys.push(e),this._values.push(void 0)),this._cacheIndex},t}();function r(e,t){return e}function o(e,t){return t}function s(e,t){return[e,t]}}():Map,c=a||"function"!=typeof Set||"function"!=typeof Set.prototype.entries?function(){function e(){this._map=new u}return Object.defineProperty(e.prototype,"size",{get:function(){return this._map.size},enumerable:!0,configurable:!0}),e.prototype.has=function(e){return this._map.has(e)},e.prototype.add=function(e){return this._map.set(e,e),this},e.prototype.delete=function(e){return this._map.delete(e)},e.prototype.clear=function(){this._map.clear()},e.prototype.keys=function(){return this._map.keys()},e.prototype.values=function(){return this._map.values()},e.prototype.entries=function(){return this._map.entries()},e.prototype["@@iterator"]=function(){return this.keys()},e.prototype[i]=function(){return this.keys()},e}():Set,l=new(a||"function"!=typeof WeakMap?function(){var e=16,r=t.create(),o=i();return function(){function e(){this._key=i()}return e.prototype.has=function(e){var n=s(e,!1);return void 0!==n&&t.has(n,this._key)},e.prototype.get=function(e){var n=s(e,!1);return void 0!==n?t.get(n,this._key):void 0},e.prototype.set=function(e,t){var n=s(e,!0);return n[this._key]=t,this},e.prototype.delete=function(e){var t=s(e,!1);return void 0!==t&&delete t[this._key]},e.prototype.clear=function(){this._key=i()},e}();function i(){var e;do{e="@@WeakMap@@"+u()}while(t.has(r,e));return r[e]=!0,e}function s(e,r){if(!n.call(e,o)){if(!r)return;Object.defineProperty(e,o,{value:t.create()})}return e[o]}function a(e,t){for(var n=0;n<t;++n)e[n]=255*Math.random()|0;return e}function u(){var t=function(e){if("function"==typeof Uint8Array)return"undefined"!=typeof crypto?crypto.getRandomValues(new Uint8Array(e)):"undefined"!=typeof msCrypto?msCrypto.getRandomValues(new Uint8Array(e)):a(new Uint8Array(e),e);return a(new Array(e),e)}(e);t[6]=79&t[6]|64,t[8]=191&t[8]|128;for(var n="",r=0;r<e;++r){var o=t[r];4!==r&&6!==r&&8!==r||(n+="-"),o<16&&(n+="0"),n+=o.toString(16).toLowerCase()}return n}}():WeakMap);function p(e,t,n){var r=l.get(e);if(E(r)){if(!n)return;r=new u,l.set(e,r)}var o=r.get(t);if(E(o)){if(!n)return;o=new u,r.set(t,o)}return o}function h(e,t,n){var r=p(t,n,!1);return!E(r)&&!!r.has(e)}function T(e,t,n){var r=p(t,n,!1);if(!E(r))return r.get(e)}function f(e,t,n,r){p(n,r,!0).set(e,t)}function m(e,t){var n=[],r=p(e,t,!1);if(E(r))return n;for(var o=function(e){var t=C(e,i);if(!S(t))throw new TypeError;var n=t.call(e);if(!A(n))throw new TypeError;return n}(r.keys()),s=0;;){var a=O(o);if(!a)return n.length=s,n;var u=a.value;try{n[s]=u}catch(e){try{R(o)}finally{throw e}}s++}}function d(e){if(null===e)return 1;switch(typeof e){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return null===e?1:6;default:return 6}}function E(e){return void 0===e}function _(e){return null===e}function A(e){return"object"==typeof e?null!==e:"function"==typeof e}function y(e,t){switch(d(e)){case 0:case 1:case 2:case 3:case 4:case 5:return e}var n=3===t?"string":5===t?"number":"default",r=C(e,o);if(void 0!==r){var i=r.call(e,n);if(A(i))throw new TypeError;return i}return function(e,t){if("string"===t){var n=e.toString;if(S(n)){var r=n.call(e);if(!A(r))return r}var o=e.valueOf;if(S(o)){var r=o.call(e);if(!A(r))return r}}else{var o=e.valueOf;if(S(o)){var r=o.call(e);if(!A(r))return r}var i=e.toString;if(S(i)){var r=i.call(e);if(!A(r))return r}}throw new TypeError}(e,"default"===n?"number":n)}function g(e){var t=y(e,3);return"symbol"==typeof t?t:function(e){return""+e}(t)}function N(e){return Array.isArray?Array.isArray(e):e instanceof Object?e instanceof Array:"[object Array]"===Object.prototype.toString.call(e)}function S(e){return"function"==typeof e}function v(e){return"function"==typeof e}function C(e,t){var n=e[t];if(void 0!==n&&null!==n){if(!S(n))throw new TypeError;return n}}function O(e){var t=e.next();return!t.done&&t}function R(e){var t=e.return;t&&t.call(e)}function I(e){var t=Object.getPrototypeOf(e);if("function"!=typeof e||e===s)return t;if(t!==s)return t;var n=e.prototype,r=n&&Object.getPrototypeOf(n);if(null==r||r===Object.prototype)return t;var o=r.constructor;return"function"!=typeof o?t:o===e?t:o}function M(e){return e.__=void 0,delete e.__,e}e.decorate=function(e,t,n,r){if(E(n)){if(!N(e))throw new TypeError;if(!v(t))throw new TypeError;return function(e,t){for(var n=e.length-1;n>=0;--n){var r=e[n],o=r(t);if(!E(o)&&!_(o)){if(!v(o))throw new TypeError;t=o}}return t}(e,t)}if(!N(e))throw new TypeError;if(!A(t))throw new TypeError;if(!A(r)&&!E(r)&&!_(r))throw new TypeError;return _(r)&&(r=void 0),function(e,t,n,r){for(var o=e.length-1;o>=0;--o){var i=e[o],s=i(t,n,r);if(!E(s)&&!_(s)){if(!A(s))throw new TypeError;r=s}}return r}(e,t,n=g(n),r)},e.metadata=function(e,t){return function(n,r){if(!A(n))throw new TypeError;if(!E(r)&&!function(e){switch(d(e)){case 3:case 4:return!0;default:return!1}}(r))throw new TypeError;f(e,t,n,r)}},e.defineMetadata=function(e,t,n,r){if(!A(n))throw new TypeError;return E(r)||(r=g(r)),f(e,t,n,r)},e.hasMetadata=function(e,t,n){if(!A(t))throw new TypeError;return E(n)||(n=g(n)),function e(t,n,r){var o=h(t,n,r);if(o)return!0;var i=I(n);return!_(i)&&e(t,i,r)}(e,t,n)},e.hasOwnMetadata=function(e,t,n){if(!A(t))throw new TypeError;return E(n)||(n=g(n)),h(e,t,n)},e.getMetadata=function(e,t,n){if(!A(t))throw new TypeError;return E(n)||(n=g(n)),function e(t,n,r){var o=h(t,n,r);if(o)return T(t,n,r);var i=I(n);return _(i)?void 0:e(t,i,r)}(e,t,n)},e.getOwnMetadata=function(e,t,n){if(!A(t))throw new TypeError;return E(n)||(n=g(n)),T(e,t,n)},e.getMetadataKeys=function(e,t){if(!A(e))throw new TypeError;return E(t)||(t=g(t)),function e(t,n){var r=m(t,n),o=I(t);if(null===o)return r;var i=e(o,n);if(i.length<=0)return r;if(r.length<=0)return i;for(var s=new c,a=[],u=0,l=r;u<l.length;u++){var p=l[u],h=s.has(p);h||(s.add(p),a.push(p))}for(var T=0,f=i;T<f.length;T++){var p=f[T],h=s.has(p);h||(s.add(p),a.push(p))}return a}(e,t)},e.getOwnMetadataKeys=function(e,t){if(!A(e))throw new TypeError;return E(t)||(t=g(t)),m(e,t)},e.deleteMetadata=function(e,t,n){if(!A(t))throw new TypeError;E(n)||(n=g(n));var r=p(t,n,!1);if(E(r))return!1;if(!r.delete(e))return!1;if(r.size>0)return!0;var o=l.get(t);return o.delete(n),o.size>0||(l.delete(t),!0)},function(t){if(void 0!==t.Reflect){if(t.Reflect!==e)for(var r in e)n.call(e,r)&&(t.Reflect[r]=e[r])}else t.Reflect=e}("undefined"!=typeof global?global:"undefined"!=typeof self?self:Function("return this;")())}(n||(n={}))}]));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,